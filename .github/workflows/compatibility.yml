name: Compatibility

on: [push, pull_request]

jobs:
  compatibility:
    name: Bless
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        eventstore:
        - 20.10.2
        - 22.6.0
    env:
      MIX_ENV: test
      EVENTSTORE_HOST: localhost
      EVENTSTORE_VERSION: ${{ matrix.eventstore }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set the EventStoreDB version
      run: sed -i 's|ghcr.io/eventstore/eventstore:ci|eventstore/eventstore:${{ matrix.eventstore }}-buster-slim|g' docker-compose.yml

    - name: Spawn docker-compose EventStoreDB container
      run: docker-compose up --detach eventstore

    - name: Setup Elixir and Erlang versions
      uses: erlef/setup-beam@v1
      id: beam
      with:
        version-file: .tool-versions
        version-type: strict

    - name: Restore the deps cache
      uses: actions/cache@v3
      id: deps-cache
      with:
        key: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-deps
        restore-keys: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-deps
        path: deps

    - name: Restore the _build cache
      uses: actions/cache@v3
      id: build-cache
      with:
        key: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-${{ env.MIX_ENV }}-build
        restore-keys: ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-${{ env.MIX_ENV }}-build
        path: _build

    - name: Fetch mix dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Compile dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: mix deps.compile

    - name: Compile
      run: mix compile --warnings-as-errors --force

    - name: Run tests
      run: mix test --exclude version_incompatible
