%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.18.0
%% Version source: file
-module(spear_proto_projections).

-export([encode_msg/1, encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3, merge_msgs/4]).
-export([verify_msg/1, verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export(['enum_symbol_by_value_google.protobuf.NullValue'/1, 'enum_value_by_symbol_google.protobuf.NullValue'/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).
-export([gpb_version_source/0]).

-include("spear_proto_projections.hrl").
-include("gpb.hrl").

%% enumerated types
-type 'google.protobuf.NullValue'() :: 'NULL_VALUE'.
-export_type(['google.protobuf.NullValue'/0]).

%% message types
-type 'event_store.client.projections.CreateReq.Options'() :: #'event_store.client.projections.CreateReq.Options'{}.

-type 'event_store.client.projections.CreateReq.Options.Continuous'() :: #'event_store.client.projections.CreateReq.Options.Continuous'{}.

-type 'event_store.client.projections.CreateReq.Options.Transient'() :: #'event_store.client.projections.CreateReq.Options.Transient'{}.

-type 'event_store.client.projections.CreateReq'() :: #'event_store.client.projections.CreateReq'{}.

-type 'event_store.client.projections.CreateResp'() :: #'event_store.client.projections.CreateResp'{}.

-type 'event_store.client.projections.UpdateReq.Options'() :: #'event_store.client.projections.UpdateReq.Options'{}.

-type 'event_store.client.projections.UpdateReq'() :: #'event_store.client.projections.UpdateReq'{}.

-type 'event_store.client.projections.UpdateResp'() :: #'event_store.client.projections.UpdateResp'{}.

-type 'event_store.client.projections.DeleteReq.Options'() :: #'event_store.client.projections.DeleteReq.Options'{}.

-type 'event_store.client.projections.DeleteReq'() :: #'event_store.client.projections.DeleteReq'{}.

-type 'event_store.client.projections.DeleteResp'() :: #'event_store.client.projections.DeleteResp'{}.

-type 'event_store.client.projections.StatisticsReq.Options'() :: #'event_store.client.projections.StatisticsReq.Options'{}.

-type 'event_store.client.projections.StatisticsReq'() :: #'event_store.client.projections.StatisticsReq'{}.

-type 'event_store.client.projections.StatisticsResp.Details'() :: #'event_store.client.projections.StatisticsResp.Details'{}.

-type 'event_store.client.projections.StatisticsResp'() :: #'event_store.client.projections.StatisticsResp'{}.

-type 'event_store.client.projections.StateReq.Options'() :: #'event_store.client.projections.StateReq.Options'{}.

-type 'event_store.client.projections.StateReq'() :: #'event_store.client.projections.StateReq'{}.

-type 'event_store.client.projections.StateResp'() :: #'event_store.client.projections.StateResp'{}.

-type 'event_store.client.projections.ResultReq.Options'() :: #'event_store.client.projections.ResultReq.Options'{}.

-type 'event_store.client.projections.ResultReq'() :: #'event_store.client.projections.ResultReq'{}.

-type 'event_store.client.projections.ResultResp'() :: #'event_store.client.projections.ResultResp'{}.

-type 'event_store.client.projections.ResetReq.Options'() :: #'event_store.client.projections.ResetReq.Options'{}.

-type 'event_store.client.projections.ResetReq'() :: #'event_store.client.projections.ResetReq'{}.

-type 'event_store.client.projections.ResetResp'() :: #'event_store.client.projections.ResetResp'{}.

-type 'event_store.client.projections.EnableReq.Options'() :: #'event_store.client.projections.EnableReq.Options'{}.

-type 'event_store.client.projections.EnableReq'() :: #'event_store.client.projections.EnableReq'{}.

-type 'event_store.client.projections.EnableResp'() :: #'event_store.client.projections.EnableResp'{}.

-type 'event_store.client.projections.DisableReq.Options'() :: #'event_store.client.projections.DisableReq.Options'{}.

-type 'event_store.client.projections.DisableReq'() :: #'event_store.client.projections.DisableReq'{}.

-type 'event_store.client.projections.DisableResp'() :: #'event_store.client.projections.DisableResp'{}.

-type 'google.protobuf.Struct'() :: #'google.protobuf.Struct'{}.

-type 'google.protobuf.Value'() :: #'google.protobuf.Value'{}.

-type 'google.protobuf.ListValue'() :: #'google.protobuf.ListValue'{}.

-type 'event_store.client.UUID.Structured'() :: #'event_store.client.UUID.Structured'{}.

-type 'event_store.client.UUID'() :: #'event_store.client.UUID'{}.

-type 'event_store.client.Empty'() :: #'event_store.client.Empty'{}.

-type 'event_store.client.StreamIdentifier'() :: #'event_store.client.StreamIdentifier'{}.

-type 'event_store.client.AllStreamPosition'() :: #'event_store.client.AllStreamPosition'{}.

-type 'event_store.client.WrongExpectedVersion'() :: #'event_store.client.WrongExpectedVersion'{}.

-type 'event_store.client.AccessDenied'() :: #'event_store.client.AccessDenied'{}.

-type 'event_store.client.StreamDeleted'() :: #'event_store.client.StreamDeleted'{}.

-type 'event_store.client.Timeout'() :: #'event_store.client.Timeout'{}.

-type 'event_store.client.Unknown'() :: #'event_store.client.Unknown'{}.

-type 'event_store.client.InvalidTransaction'() :: #'event_store.client.InvalidTransaction'{}.

-type 'event_store.client.MaximumAppendSizeExceeded'() :: #'event_store.client.MaximumAppendSizeExceeded'{}.

-type 'event_store.client.BadRequest'() :: #'event_store.client.BadRequest'{}.

-type 'google.protobuf.Empty'() :: #'google.protobuf.Empty'{}.

-export_type(['event_store.client.projections.CreateReq.Options'/0, 'event_store.client.projections.CreateReq.Options.Continuous'/0, 'event_store.client.projections.CreateReq.Options.Transient'/0, 'event_store.client.projections.CreateReq'/0, 'event_store.client.projections.CreateResp'/0, 'event_store.client.projections.UpdateReq.Options'/0, 'event_store.client.projections.UpdateReq'/0, 'event_store.client.projections.UpdateResp'/0, 'event_store.client.projections.DeleteReq.Options'/0, 'event_store.client.projections.DeleteReq'/0, 'event_store.client.projections.DeleteResp'/0, 'event_store.client.projections.StatisticsReq.Options'/0, 'event_store.client.projections.StatisticsReq'/0, 'event_store.client.projections.StatisticsResp.Details'/0, 'event_store.client.projections.StatisticsResp'/0, 'event_store.client.projections.StateReq.Options'/0, 'event_store.client.projections.StateReq'/0, 'event_store.client.projections.StateResp'/0, 'event_store.client.projections.ResultReq.Options'/0, 'event_store.client.projections.ResultReq'/0, 'event_store.client.projections.ResultResp'/0, 'event_store.client.projections.ResetReq.Options'/0, 'event_store.client.projections.ResetReq'/0, 'event_store.client.projections.ResetResp'/0, 'event_store.client.projections.EnableReq.Options'/0, 'event_store.client.projections.EnableReq'/0, 'event_store.client.projections.EnableResp'/0, 'event_store.client.projections.DisableReq.Options'/0, 'event_store.client.projections.DisableReq'/0, 'event_store.client.projections.DisableResp'/0, 'google.protobuf.Struct'/0, 'google.protobuf.Value'/0, 'google.protobuf.ListValue'/0, 'event_store.client.UUID.Structured'/0, 'event_store.client.UUID'/0, 'event_store.client.Empty'/0, 'event_store.client.StreamIdentifier'/0, 'event_store.client.AllStreamPosition'/0, 'event_store.client.WrongExpectedVersion'/0, 'event_store.client.AccessDenied'/0, 'event_store.client.StreamDeleted'/0, 'event_store.client.Timeout'/0, 'event_store.client.Unknown'/0, 'event_store.client.InvalidTransaction'/0, 'event_store.client.MaximumAppendSizeExceeded'/0, 'event_store.client.BadRequest'/0, 'google.protobuf.Empty'/0]).
-type '$msg_name'() :: 'event_store.client.projections.CreateReq.Options' | 'event_store.client.projections.CreateReq.Options.Continuous' | 'event_store.client.projections.CreateReq.Options.Transient' | 'event_store.client.projections.CreateReq' | 'event_store.client.projections.CreateResp' | 'event_store.client.projections.UpdateReq.Options' | 'event_store.client.projections.UpdateReq' | 'event_store.client.projections.UpdateResp' | 'event_store.client.projections.DeleteReq.Options' | 'event_store.client.projections.DeleteReq' | 'event_store.client.projections.DeleteResp' | 'event_store.client.projections.StatisticsReq.Options' | 'event_store.client.projections.StatisticsReq' | 'event_store.client.projections.StatisticsResp.Details' | 'event_store.client.projections.StatisticsResp' | 'event_store.client.projections.StateReq.Options' | 'event_store.client.projections.StateReq' | 'event_store.client.projections.StateResp' | 'event_store.client.projections.ResultReq.Options' | 'event_store.client.projections.ResultReq' | 'event_store.client.projections.ResultResp' | 'event_store.client.projections.ResetReq.Options' | 'event_store.client.projections.ResetReq' | 'event_store.client.projections.ResetResp' | 'event_store.client.projections.EnableReq.Options' | 'event_store.client.projections.EnableReq' | 'event_store.client.projections.EnableResp' | 'event_store.client.projections.DisableReq.Options' | 'event_store.client.projections.DisableReq' | 'event_store.client.projections.DisableResp' | 'google.protobuf.Struct' | 'google.protobuf.Value' | 'google.protobuf.ListValue' | 'event_store.client.UUID.Structured' | 'event_store.client.UUID' | 'event_store.client.Empty' | 'event_store.client.StreamIdentifier' | 'event_store.client.AllStreamPosition' | 'event_store.client.WrongExpectedVersion' | 'event_store.client.AccessDenied' | 'event_store.client.StreamDeleted' | 'event_store.client.Timeout' | 'event_store.client.Unknown' | 'event_store.client.InvalidTransaction' | 'event_store.client.MaximumAppendSizeExceeded' | 'event_store.client.BadRequest' | 'google.protobuf.Empty'.
-type '$msg'() :: 'event_store.client.projections.CreateReq.Options'() | 'event_store.client.projections.CreateReq.Options.Continuous'() | 'event_store.client.projections.CreateReq.Options.Transient'() | 'event_store.client.projections.CreateReq'() | 'event_store.client.projections.CreateResp'() | 'event_store.client.projections.UpdateReq.Options'() | 'event_store.client.projections.UpdateReq'() | 'event_store.client.projections.UpdateResp'() | 'event_store.client.projections.DeleteReq.Options'() | 'event_store.client.projections.DeleteReq'() | 'event_store.client.projections.DeleteResp'() | 'event_store.client.projections.StatisticsReq.Options'() | 'event_store.client.projections.StatisticsReq'() | 'event_store.client.projections.StatisticsResp.Details'() | 'event_store.client.projections.StatisticsResp'() | 'event_store.client.projections.StateReq.Options'() | 'event_store.client.projections.StateReq'() | 'event_store.client.projections.StateResp'() | 'event_store.client.projections.ResultReq.Options'() | 'event_store.client.projections.ResultReq'() | 'event_store.client.projections.ResultResp'() | 'event_store.client.projections.ResetReq.Options'() | 'event_store.client.projections.ResetReq'() | 'event_store.client.projections.ResetResp'() | 'event_store.client.projections.EnableReq.Options'() | 'event_store.client.projections.EnableReq'() | 'event_store.client.projections.EnableResp'() | 'event_store.client.projections.DisableReq.Options'() | 'event_store.client.projections.DisableReq'() | 'event_store.client.projections.DisableResp'() | 'google.protobuf.Struct'() | 'google.protobuf.Value'() | 'google.protobuf.ListValue'() | 'event_store.client.UUID.Structured'() | 'event_store.client.UUID'() | 'event_store.client.Empty'() | 'event_store.client.StreamIdentifier'() | 'event_store.client.AllStreamPosition'() | 'event_store.client.WrongExpectedVersion'() | 'event_store.client.AccessDenied'() | 'event_store.client.StreamDeleted'() | 'event_store.client.Timeout'() | 'event_store.client.Unknown'() | 'event_store.client.InvalidTransaction'() | 'event_store.client.MaximumAppendSizeExceeded'() | 'event_store.client.BadRequest'() | 'google.protobuf.Empty'().
-export_type(['$msg_name'/0, '$msg'/0]).

-record('map<string,google.protobuf.Value>',{key, value}).
-dialyzer({no_underspecs, encode_msg/1}).
-spec encode_msg('$msg'()) -> binary().
encode_msg(Msg) when tuple_size(Msg) >= 1 -> encode_msg(Msg, element(1, Msg), []).

-dialyzer({no_underspecs, encode_msg/2}).
-spec encode_msg('$msg'(), '$msg_name'() | list()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) -> encode_msg(Msg, MsgName, []);
encode_msg(Msg, Opts) when tuple_size(Msg) >= 1, is_list(Opts) -> encode_msg(Msg, element(1, Msg), Opts).

-dialyzer({no_underspecs, encode_msg/3}).
-spec encode_msg('$msg'(), '$msg_name'(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
        true -> verify_msg(Msg, MsgName, Opts);
        false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.projections.CreateReq.Options' -> 'encode_msg_event_store.client.projections.CreateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.CreateReq.Options.Continuous' -> 'encode_msg_event_store.client.projections.CreateReq.Options.Continuous'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.CreateReq.Options.Transient' -> 'encode_msg_event_store.client.projections.CreateReq.Options.Transient'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.CreateReq' -> 'encode_msg_event_store.client.projections.CreateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.CreateResp' -> 'encode_msg_event_store.client.projections.CreateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.UpdateReq.Options' -> 'encode_msg_event_store.client.projections.UpdateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.UpdateReq' -> 'encode_msg_event_store.client.projections.UpdateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.UpdateResp' -> 'encode_msg_event_store.client.projections.UpdateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DeleteReq.Options' -> 'encode_msg_event_store.client.projections.DeleteReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DeleteReq' -> 'encode_msg_event_store.client.projections.DeleteReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DeleteResp' -> 'encode_msg_event_store.client.projections.DeleteResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StatisticsReq.Options' -> 'encode_msg_event_store.client.projections.StatisticsReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StatisticsReq' -> 'encode_msg_event_store.client.projections.StatisticsReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StatisticsResp.Details' -> 'encode_msg_event_store.client.projections.StatisticsResp.Details'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StatisticsResp' -> 'encode_msg_event_store.client.projections.StatisticsResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StateReq.Options' -> 'encode_msg_event_store.client.projections.StateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StateReq' -> 'encode_msg_event_store.client.projections.StateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.StateResp' -> 'encode_msg_event_store.client.projections.StateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResultReq.Options' -> 'encode_msg_event_store.client.projections.ResultReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResultReq' -> 'encode_msg_event_store.client.projections.ResultReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResultResp' -> 'encode_msg_event_store.client.projections.ResultResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResetReq.Options' -> 'encode_msg_event_store.client.projections.ResetReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResetReq' -> 'encode_msg_event_store.client.projections.ResetReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.ResetResp' -> 'encode_msg_event_store.client.projections.ResetResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.EnableReq.Options' -> 'encode_msg_event_store.client.projections.EnableReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.EnableReq' -> 'encode_msg_event_store.client.projections.EnableReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.EnableResp' -> 'encode_msg_event_store.client.projections.EnableResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DisableReq.Options' -> 'encode_msg_event_store.client.projections.DisableReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DisableReq' -> 'encode_msg_event_store.client.projections.DisableReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.projections.DisableResp' -> 'encode_msg_event_store.client.projections.DisableResp'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Struct' -> 'encode_msg_google.protobuf.Struct'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Value' -> 'encode_msg_google.protobuf.Value'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.ListValue' -> 'encode_msg_google.protobuf.ListValue'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID.Structured' -> 'encode_msg_event_store.client.UUID.Structured'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID' -> 'encode_msg_event_store.client.UUID'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Empty' -> 'encode_msg_event_store.client.Empty'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamIdentifier' -> 'encode_msg_event_store.client.StreamIdentifier'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AllStreamPosition' -> 'encode_msg_event_store.client.AllStreamPosition'(id(Msg, TrUserData), TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'encode_msg_event_store.client.WrongExpectedVersion'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AccessDenied' -> 'encode_msg_event_store.client.AccessDenied'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamDeleted' -> 'encode_msg_event_store.client.StreamDeleted'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Timeout' -> 'encode_msg_event_store.client.Timeout'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Unknown' -> 'encode_msg_event_store.client.Unknown'(id(Msg, TrUserData), TrUserData);
        'event_store.client.InvalidTransaction' -> 'encode_msg_event_store.client.InvalidTransaction'(id(Msg, TrUserData), TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(id(Msg, TrUserData), TrUserData);
        'event_store.client.BadRequest' -> 'encode_msg_event_store.client.BadRequest'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Empty' -> 'encode_msg_google.protobuf.Empty'(id(Msg, TrUserData), TrUserData)
    end.


'encode_msg_event_store.client.projections.CreateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.CreateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.CreateReq.Options'(#'event_store.client.projections.CreateReq.Options'{mode = F1, query = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {one_time, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.CreateReq.Options_one_time'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {transient, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.CreateReq.Options_transient'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
                    {continuous, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.CreateReq.Options_continuous'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case is_empty_string(TrF2) of
                   true -> B1;
                   false -> e_type_string(TrF2, <<B1/binary, 34>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.CreateReq.Options.Continuous'(#'event_store.client.projections.CreateReq.Options.Continuous'{name = F1, track_emitted_streams = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= false -> B1;
                  true -> e_type_bool(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.CreateReq.Options.Transient'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.CreateReq.Options.Transient'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.CreateReq.Options.Transient'(#'event_store.client.projections.CreateReq.Options.Transient'{name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.CreateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.CreateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.CreateReq'(#'event_store.client.projections.CreateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.CreateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.CreateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.projections.UpdateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.UpdateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.UpdateReq.Options'(#'event_store.client.projections.UpdateReq.Options'{name = F1, query = F2, emit_option = F3}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F3 =:= undefined -> B2;
       true ->
           case id(F3, TrUserData) of
               {emit_enabled, TF3} -> begin TrTF3 = id(TF3, TrUserData), e_type_bool(TrTF3, <<B2/binary, 24>>, TrUserData) end;
               {no_emit_options, TF3} -> begin TrTF3 = id(TF3, TrUserData), 'e_mfield_event_store.client.projections.UpdateReq.Options_no_emit_options'(TrTF3, <<B2/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.projections.UpdateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.UpdateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.UpdateReq'(#'event_store.client.projections.UpdateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.UpdateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.UpdateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.projections.DeleteReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.DeleteReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.DeleteReq.Options'(#'event_store.client.projections.DeleteReq.Options'{name = F1, delete_emitted_streams = F2, delete_state_stream = F3, delete_checkpoint_stream = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= false -> B1;
                       true -> e_type_bool(TrF2, <<B1/binary, 16>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= false -> B2;
                       true -> e_type_bool(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               if TrF4 =:= false -> B3;
                  true -> e_type_bool(TrF4, <<B3/binary, 32>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.DeleteReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.DeleteReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.DeleteReq'(#'event_store.client.projections.DeleteReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.DeleteReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.DeleteResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.projections.StatisticsReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StatisticsReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StatisticsReq.Options'(#'event_store.client.projections.StatisticsReq.Options'{mode = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {name, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_string(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.StatisticsReq.Options_all'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
               {transient, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.StatisticsReq.Options_transient'(TrTF1, <<Bin/binary, 26>>, TrUserData) end;
               {continuous, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.StatisticsReq.Options_continuous'(TrTF1, <<Bin/binary, 34>>, TrUserData) end;
               {one_time, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.projections.StatisticsReq.Options_one_time'(TrTF1, <<Bin/binary, 42>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.projections.StatisticsReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StatisticsReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StatisticsReq'(#'event_store.client.projections.StatisticsReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.StatisticsReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.StatisticsResp.Details'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StatisticsResp.Details'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StatisticsResp.Details'(#'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = F1, version = F2, epoch = F3, effectiveName = F4, writesInProgress = F5, readsInProgress = F6,
                                                                                                                            partitionsCached = F7, status = F8, stateReason = F9, name = F10, mode = F11, position = F12, progress = F13, lastCheckpoint = F14, eventsProcessedAfterRestart = F15,
                                                                                                                            checkpointStatus = F16, bufferedEvents = F17, writePendingEventsBeforeCheckpoint = F18, writePendingEventsAfterCheckpoint = F19},
                                                                   Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= 0 -> B1;
                       true -> e_type_int64(TrF2, <<B1/binary, 16>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= 0 -> B2;
                       true -> e_type_int64(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    case is_empty_string(TrF4) of
                        true -> B3;
                        false -> e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
                    end
                end
         end,
    B5 = if F5 == undefined -> B4;
            true ->
                begin
                    TrF5 = id(F5, TrUserData),
                    if TrF5 =:= 0 -> B4;
                       true -> e_type_int32(TrF5, <<B4/binary, 40>>, TrUserData)
                    end
                end
         end,
    B6 = if F6 == undefined -> B5;
            true ->
                begin
                    TrF6 = id(F6, TrUserData),
                    if TrF6 =:= 0 -> B5;
                       true -> e_type_int32(TrF6, <<B5/binary, 48>>, TrUserData)
                    end
                end
         end,
    B7 = if F7 == undefined -> B6;
            true ->
                begin
                    TrF7 = id(F7, TrUserData),
                    if TrF7 =:= 0 -> B6;
                       true -> e_type_int32(TrF7, <<B6/binary, 56>>, TrUserData)
                    end
                end
         end,
    B8 = if F8 == undefined -> B7;
            true ->
                begin
                    TrF8 = id(F8, TrUserData),
                    case is_empty_string(TrF8) of
                        true -> B7;
                        false -> e_type_string(TrF8, <<B7/binary, 66>>, TrUserData)
                    end
                end
         end,
    B9 = if F9 == undefined -> B8;
            true ->
                begin
                    TrF9 = id(F9, TrUserData),
                    case is_empty_string(TrF9) of
                        true -> B8;
                        false -> e_type_string(TrF9, <<B8/binary, 74>>, TrUserData)
                    end
                end
         end,
    B10 = if F10 == undefined -> B9;
             true ->
                 begin
                     TrF10 = id(F10, TrUserData),
                     case is_empty_string(TrF10) of
                         true -> B9;
                         false -> e_type_string(TrF10, <<B9/binary, 82>>, TrUserData)
                     end
                 end
          end,
    B11 = if F11 == undefined -> B10;
             true ->
                 begin
                     TrF11 = id(F11, TrUserData),
                     case is_empty_string(TrF11) of
                         true -> B10;
                         false -> e_type_string(TrF11, <<B10/binary, 90>>, TrUserData)
                     end
                 end
          end,
    B12 = if F12 == undefined -> B11;
             true ->
                 begin
                     TrF12 = id(F12, TrUserData),
                     case is_empty_string(TrF12) of
                         true -> B11;
                         false -> e_type_string(TrF12, <<B11/binary, 98>>, TrUserData)
                     end
                 end
          end,
    B13 = if F13 == undefined -> B12;
             true ->
                 begin
                     TrF13 = id(F13, TrUserData),
                     if TrF13 =:= 0.0 -> B12;
                        true -> e_type_float(TrF13, <<B12/binary, 109>>, TrUserData)
                     end
                 end
          end,
    B14 = if F14 == undefined -> B13;
             true ->
                 begin
                     TrF14 = id(F14, TrUserData),
                     case is_empty_string(TrF14) of
                         true -> B13;
                         false -> e_type_string(TrF14, <<B13/binary, 114>>, TrUserData)
                     end
                 end
          end,
    B15 = if F15 == undefined -> B14;
             true ->
                 begin
                     TrF15 = id(F15, TrUserData),
                     if TrF15 =:= 0 -> B14;
                        true -> e_type_int64(TrF15, <<B14/binary, 120>>, TrUserData)
                     end
                 end
          end,
    B16 = if F16 == undefined -> B15;
             true ->
                 begin
                     TrF16 = id(F16, TrUserData),
                     case is_empty_string(TrF16) of
                         true -> B15;
                         false -> e_type_string(TrF16, <<B15/binary, 130, 1>>, TrUserData)
                     end
                 end
          end,
    B17 = if F17 == undefined -> B16;
             true ->
                 begin
                     TrF17 = id(F17, TrUserData),
                     if TrF17 =:= 0 -> B16;
                        true -> e_type_int64(TrF17, <<B16/binary, 136, 1>>, TrUserData)
                     end
                 end
          end,
    B18 = if F18 == undefined -> B17;
             true ->
                 begin
                     TrF18 = id(F18, TrUserData),
                     if TrF18 =:= 0 -> B17;
                        true -> e_type_int32(TrF18, <<B17/binary, 144, 1>>, TrUserData)
                     end
                 end
          end,
    if F19 == undefined -> B18;
       true ->
           begin
               TrF19 = id(F19, TrUserData),
               if TrF19 =:= 0 -> B18;
                  true -> e_type_int32(TrF19, <<B18/binary, 152, 1>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.StatisticsResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StatisticsResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StatisticsResp'(#'event_store.client.projections.StatisticsResp'{details = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.StatisticsResp_details'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.StateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StateReq.Options'(#'event_store.client.projections.StateReq.Options'{name = F1, partition = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case is_empty_string(TrF2) of
                   true -> B1;
                   false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.StateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StateReq'(#'event_store.client.projections.StateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.StateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.StateResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.StateResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.StateResp'(#'event_store.client.projections.StateResp'{state = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.StateResp_state'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResultReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.ResultReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.ResultReq.Options'(#'event_store.client.projections.ResultReq.Options'{name = F1, partition = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case is_empty_string(TrF2) of
                   true -> B1;
                   false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResultReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.ResultReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.ResultReq'(#'event_store.client.projections.ResultReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.ResultReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResultResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.ResultResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.ResultResp'(#'event_store.client.projections.ResultResp'{result = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.ResultResp_result'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResetReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.ResetReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.ResetReq.Options'(#'event_store.client.projections.ResetReq.Options'{name = F1, write_checkpoint = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= false -> B1;
                  true -> e_type_bool(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResetReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.ResetReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.ResetReq'(#'event_store.client.projections.ResetReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.ResetReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.ResetResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.projections.EnableReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.EnableReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.EnableReq.Options'(#'event_store.client.projections.EnableReq.Options'{name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.EnableReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.EnableReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.EnableReq'(#'event_store.client.projections.EnableReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.EnableReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.EnableResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.projections.DisableReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.DisableReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.DisableReq.Options'(#'event_store.client.projections.DisableReq.Options'{name = F1, write_checkpoint = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= false -> B1;
                  true -> e_type_bool(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.DisableReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.projections.DisableReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.projections.DisableReq'(#'event_store.client.projections.DisableReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.projections.DisableReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.projections.DisableResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_google.protobuf.Struct'(Msg, TrUserData) -> 'encode_msg_google.protobuf.Struct'(Msg, <<>>, TrUserData).


'encode_msg_google.protobuf.Struct'(#'google.protobuf.Struct'{fields = F1}, Bin, TrUserData) ->
    begin
        TrF1 = id(F1, TrUserData),
        if TrF1 == [] -> Bin;
           true -> 'e_field_google.protobuf.Struct_fields'(TrF1, Bin, TrUserData)
        end
    end.

'encode_msg_google.protobuf.Value'(Msg, TrUserData) -> 'encode_msg_google.protobuf.Value'(Msg, <<>>, TrUserData).


'encode_msg_google.protobuf.Value'(#'google.protobuf.Value'{kind = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {null_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_enum_google.protobuf.NullValue'(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
               {number_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_double(TrTF1, <<Bin/binary, 17>>, TrUserData) end;
               {string_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_string(TrTF1, <<Bin/binary, 26>>, TrUserData) end;
               {bool_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_bool(TrTF1, <<Bin/binary, 32>>, TrUserData) end;
               {struct_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_google.protobuf.Value_struct_value'(TrTF1, <<Bin/binary, 42>>, TrUserData) end;
               {list_value, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_google.protobuf.Value_list_value'(TrTF1, <<Bin/binary, 50>>, TrUserData) end
           end
    end.

'encode_msg_google.protobuf.ListValue'(Msg, TrUserData) -> 'encode_msg_google.protobuf.ListValue'(Msg, <<>>, TrUserData).


'encode_msg_google.protobuf.ListValue'(#'google.protobuf.ListValue'{values = F1}, Bin, TrUserData) ->
    begin
        TrF1 = id(F1, TrUserData),
        if TrF1 == [] -> Bin;
           true -> 'e_field_google.protobuf.ListValue_values'(TrF1, Bin, TrUserData)
        end
    end.

'encode_msg_event_store.client.UUID.Structured'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_type_int64(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.UUID'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {structured, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.UUID_structured'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {string, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_string(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.Empty'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamIdentifier'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case iolist_size(TrF1) of
                   0 -> Bin;
                   _ -> e_type_bytes(TrF1, <<Bin/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.AllStreamPosition'(Msg, TrUserData) -> 'encode_msg_event_store.client.AllStreamPosition'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.WrongExpectedVersion'(Msg, TrUserData) -> 'encode_msg_event_store.client.WrongExpectedVersion'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_stream_revision, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {current_no_stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {expected_stream_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
               {expected_any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {expected_stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end;
               {expected_no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(TrTF2, <<B1/binary, 50>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.AccessDenied'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamDeleted'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamDeleted'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.StreamDeleted_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.Timeout'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.Unknown'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.InvalidTransaction'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, TrUserData) -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= 0 -> Bin;
                  true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.BadRequest'(Msg, TrUserData) -> 'encode_msg_event_store.client.BadRequest'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_google.protobuf.Empty'(_Msg, _TrUserData) -> <<>>.

'e_mfield_event_store.client.projections.CreateReq.Options_one_time'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.CreateReq.Options_transient'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.CreateReq.Options.Transient'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.CreateReq.Options_continuous'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.CreateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.CreateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.UpdateReq.Options_no_emit_options'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.UpdateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.UpdateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.DeleteReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.DeleteReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.StatisticsReq.Options_all'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.StatisticsReq.Options_transient'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.StatisticsReq.Options_continuous'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.StatisticsReq.Options_one_time'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.projections.StatisticsReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.StatisticsReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.StatisticsResp_details'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.StatisticsResp.Details'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.StateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.StateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.StateResp_state'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Value'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.ResultReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.ResultReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.ResultResp_result'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Value'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.ResetReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.ResetReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.EnableReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.EnableReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.projections.DisableReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.projections.DisableReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_google.protobuf.Struct_fields'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_map<string,google.protobuf.Value>'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_google.protobuf.Struct_fields'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 10>>,
    Bin3 = 'e_mfield_google.protobuf.Struct_fields'('tr_encode_google.protobuf.Struct.fields[x]'(Elem, TrUserData), Bin2, TrUserData),
    'e_field_google.protobuf.Struct_fields'(Rest, Bin3, TrUserData);
'e_field_google.protobuf.Struct_fields'([], Bin, _TrUserData) -> Bin.

'e_mfield_google.protobuf.Value_struct_value'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Struct'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_google.protobuf.Value_list_value'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.ListValue'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_google.protobuf.ListValue_values'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Value'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_google.protobuf.ListValue_values'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 10>>,
    Bin3 = 'e_mfield_google.protobuf.ListValue_values'(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_google.protobuf.ListValue_values'(Rest, Bin3, TrUserData);
'e_field_google.protobuf.ListValue_values'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.UUID_structured'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.StreamDeleted_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'encode_msg_map<string,google.protobuf.Value>'(#'map<string,google.protobuf.Value>'{key = F1, value = F2}, Bin, TrUserData) ->
    B1 = begin TrF1 = id(F1, TrUserData), e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData) end,
    begin TrF2 = id(F2, TrUserData), 'e_mfield_map<string,google.protobuf.Value>_value'(TrF2, <<B1/binary, 18>>, TrUserData) end.

'e_mfield_map<string,google.protobuf.Value>_value'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Value'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_enum_google.protobuf.NullValue'('NULL_VALUE', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_google.protobuf.NullValue'(V, Bin, _TrUserData) -> e_varint(V, Bin).

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 -> e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) -> e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) -> <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) -> <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) -> <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) -> <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) -> <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) -> <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) -> <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) -> <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) -> <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_unknown_elems/2}).
e_unknown_elems([Elem | Rest], Bin) ->
    BinR = case Elem of
               {varint, FNum, N} ->
                   BinF = e_varint(FNum bsl 3, Bin),
                   e_varint(N, BinF);
               {length_delimited, FNum, Data} ->
                   BinF = e_varint(FNum bsl 3 bor 2, Bin),
                   BinL = e_varint(byte_size(Data), BinF),
                   <<BinL/binary, Data/binary>>;
               {group, FNum, GroupFields} ->
                   Bin1 = e_varint(FNum bsl 3 bor 3, Bin),
                   Bin2 = e_unknown_elems(GroupFields, Bin1),
                   e_varint(FNum bsl 3 bor 4, Bin2);
               {fixed32, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 5, Bin),
                   <<BinF/binary, V:32/little>>;
               {fixed64, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 1, Bin),
                   <<BinF/binary, V:64/little>>
           end,
    e_unknown_elems(Rest, BinR);
e_unknown_elems([], Bin) -> Bin.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).

is_empty_string("") -> true;
is_empty_string(<<>>) -> true;
is_empty_string(L) when is_list(L) -> not string_has_chars(L);
is_empty_string(B) when is_binary(B) -> false.

string_has_chars([C | _]) when is_integer(C) -> true;
string_has_chars([H | T]) ->
    case string_has_chars(H) of
        true -> true;
        false -> string_has_chars(T)
    end;
string_has_chars(B) when is_binary(B), byte_size(B) =/= 0 -> true;
string_has_chars(C) when is_integer(C) -> true;
string_has_chars(<<>>) -> false;
string_has_chars([]) -> false.


decode_msg(Bin, MsgName) when is_binary(Bin) -> decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason:StackTrace ->
            erlang:raise(error, Reason, StackTrace);
        Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason ->
            erlang:raise(error, Reason,
                         erlang:get_stacktrace());
        Class:Reason ->
            StackTrace = erlang:get_stacktrace(),
            error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('event_store.client.projections.CreateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.CreateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.CreateReq.Options.Continuous', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.CreateReq.Options.Transient', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.CreateReq.Options.Transient'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.CreateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.CreateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.CreateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.CreateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.UpdateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.UpdateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.UpdateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.UpdateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.UpdateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.UpdateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DeleteReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DeleteReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DeleteReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DeleteReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DeleteResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DeleteResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StatisticsReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StatisticsReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StatisticsReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StatisticsReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StatisticsResp.Details', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StatisticsResp.Details'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StatisticsResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StatisticsResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.StateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.StateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResultReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResultReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResultReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResultReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResultResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResultResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResetReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResetReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResetReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResetReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.ResetResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.ResetResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.EnableReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.EnableReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.EnableReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.EnableReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.EnableResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.EnableResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DisableReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DisableReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DisableReq', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DisableReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.projections.DisableResp', Bin, TrUserData) -> id('decode_msg_event_store.client.projections.DisableResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Struct', Bin, TrUserData) -> id('decode_msg_google.protobuf.Struct'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Value', Bin, TrUserData) -> id('decode_msg_google.protobuf.Value'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.ListValue', Bin, TrUserData) -> id('decode_msg_google.protobuf.ListValue'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID.Structured', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Empty', Bin, TrUserData) -> id('decode_msg_event_store.client.Empty'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamIdentifier', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AllStreamPosition', Bin, TrUserData) -> id('decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.WrongExpectedVersion', Bin, TrUserData) -> id('decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AccessDenied', Bin, TrUserData) -> id('decode_msg_event_store.client.AccessDenied'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamDeleted', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Timeout', Bin, TrUserData) -> id('decode_msg_event_store.client.Timeout'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Unknown', Bin, TrUserData) -> id('decode_msg_event_store.client.Unknown'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.InvalidTransaction', Bin, TrUserData) -> id('decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.MaximumAppendSizeExceeded', Bin, TrUserData) -> id('decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.BadRequest', Bin, TrUserData) -> id('decode_msg_event_store.client.BadRequest'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Empty', Bin, TrUserData) -> id('decode_msg_google.protobuf.Empty'(Bin, TrUserData), TrUserData).



'decode_msg_event_store.client.projections.CreateReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.CreateReq.Options_one_time'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.CreateReq.Options_transient'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.CreateReq.Options_continuous'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.CreateReq.Options_query'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.CreateReq.Options'{mode = F@_1, query = F@_2};
'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.CreateReq.Options_one_time'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.projections.CreateReq.Options_transient'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.projections.CreateReq.Options_continuous'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.projections.CreateReq.Options_query'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.CreateReq.Options'{mode = F@_1, query = F@_2}.

'd_field_event_store.client.projections.CreateReq.Options_one_time'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options_one_time'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options_one_time'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(RestF,
                                                                          0,
                                                                          0,
                                                                          F,
                                                                          case Prev of
                                                                              undefined -> id({one_time, NewFValue}, TrUserData);
                                                                              {one_time, MVPrev} -> id({one_time, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                              _ -> id({one_time, NewFValue}, TrUserData)
                                                                          end,
                                                                          F@_2,
                                                                          TrUserData).

'd_field_event_store.client.projections.CreateReq.Options_transient'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options_transient'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options_transient'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.CreateReq.Options.Transient'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(RestF,
                                                                          0,
                                                                          0,
                                                                          F,
                                                                          case Prev of
                                                                              undefined -> id({transient, NewFValue}, TrUserData);
                                                                              {transient, MVPrev} -> id({transient, 'merge_msg_event_store.client.projections.CreateReq.Options.Transient'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                              _ -> id({transient, NewFValue}, TrUserData)
                                                                          end,
                                                                          F@_2,
                                                                          TrUserData).

'd_field_event_store.client.projections.CreateReq.Options_continuous'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options_continuous'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options_continuous'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(RestF,
                                                                          0,
                                                                          0,
                                                                          F,
                                                                          case Prev of
                                                                              undefined -> id({continuous, NewFValue}, TrUserData);
                                                                              {continuous, MVPrev} -> id({continuous, 'merge_msg_event_store.client.projections.CreateReq.Options.Continuous'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                              _ -> id({continuous, NewFValue}, TrUserData)
                                                                          end,
                                                                          F@_2,
                                                                          TrUserData).

'd_field_event_store.client.projections.CreateReq.Options_query'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options_query'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options_query'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.CreateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.projections.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.CreateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.CreateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.CreateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.CreateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.CreateReq.Options.Continuous'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.projections.CreateReq.Options.Continuous_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.projections.CreateReq.Options.Continuous_track_emitted_streams'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.CreateReq.Options.Continuous'{name = F@_1, track_emitted_streams = F@_2};
'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.CreateReq.Options.Continuous_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.projections.CreateReq.Options.Continuous_track_emitted_streams'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.CreateReq.Options.Continuous'{name = F@_1, track_emitted_streams = F@_2}.

'd_field_event_store.client.projections.CreateReq.Options.Continuous_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options.Continuous_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options.Continuous_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.projections.CreateReq.Options.Continuous_track_emitted_streams'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options.Continuous_track_emitted_streams'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options.Continuous_track_emitted_streams'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.CreateReq.Options.Continuous'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.projections.CreateReq.Options.Continuous'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.CreateReq.Options.Continuous'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.CreateReq.Options.Continuous'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.CreateReq.Options.Continuous'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.CreateReq.Options.Continuous'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.CreateReq.Options.Continuous'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.CreateReq.Options.Continuous'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.CreateReq.Options.Continuous'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Continuous'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.CreateReq.Options.Transient'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.CreateReq.Options.Transient_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.CreateReq.Options.Transient'{name = F@_1};
'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.CreateReq.Options.Transient_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.CreateReq.Options.Transient'{name = F@_1}.

'd_field_event_store.client.projections.CreateReq.Options.Transient_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.CreateReq.Options.Transient_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.CreateReq.Options.Transient_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.CreateReq.Options.Transient'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.CreateReq.Options.Transient'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.CreateReq.Options.Transient'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.CreateReq.Options.Transient'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.CreateReq.Options.Transient'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.CreateReq.Options.Transient'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.CreateReq.Options.Transient'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.CreateReq.Options.Transient'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.CreateReq.Options.Transient'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq.Options.Transient'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.CreateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.CreateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.CreateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.CreateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.CreateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.CreateReq'{options = F@_1}.

'd_field_event_store.client.projections.CreateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.CreateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.CreateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.CreateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.CreateReq'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_event_store.client.projections.CreateReq.Options'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.CreateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.CreateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.CreateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.CreateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.CreateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.CreateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.CreateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.CreateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.CreateResp'{};
'dfp_read_field_def_event_store.client.projections.CreateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.CreateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.CreateResp'{}.

'skip_varint_event_store.client.projections.CreateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.CreateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.CreateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.CreateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.CreateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.CreateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.CreateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.CreateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.projections.UpdateReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.projections.UpdateReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.projections.UpdateReq.Options_query'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.projections.UpdateReq.Options_emit_enabled'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.projections.UpdateReq.Options_no_emit_options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.projections.UpdateReq.Options'{name = F@_1, query = F@_2, emit_option = F@_3};
'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dg_read_field_def_event_store.client.projections.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.projections.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.projections.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.UpdateReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_event_store.client.projections.UpdateReq.Options_query'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        24 -> 'd_field_event_store.client.projections.UpdateReq.Options_emit_enabled'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        34 -> 'd_field_event_store.client.projections.UpdateReq.Options_no_emit_options'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.projections.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.projections.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.projections.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.projections.UpdateReq.Options'{name = F@_1, query = F@_2, emit_option = F@_3}.

'd_field_event_store.client.projections.UpdateReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.UpdateReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.projections.UpdateReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, TrUserData).

'd_field_event_store.client.projections.UpdateReq.Options_query'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.UpdateReq.Options_query'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.projections.UpdateReq.Options_query'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, TrUserData).

'd_field_event_store.client.projections.UpdateReq.Options_emit_enabled'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.UpdateReq.Options_emit_enabled'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.projections.UpdateReq.Options_emit_enabled'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, id({emit_enabled, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.projections.UpdateReq.Options_no_emit_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.UpdateReq.Options_no_emit_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.projections.UpdateReq.Options_no_emit_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(RestF,
                                                                          0,
                                                                          0,
                                                                          F,
                                                                          F@_1,
                                                                          F@_2,
                                                                          case Prev of
                                                                              undefined -> id({no_emit_options, NewFValue}, TrUserData);
                                                                              {no_emit_options, MVPrev} -> id({no_emit_options, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                              _ -> id({no_emit_options, NewFValue}, TrUserData)
                                                                          end,
                                                                          TrUserData).

'skip_varint_event_store.client.projections.UpdateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'skip_varint_event_store.client.projections.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.projections.UpdateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.projections.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.projections.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.projections.UpdateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.projections.UpdateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.projections.UpdateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.projections.UpdateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.UpdateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.UpdateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.UpdateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.UpdateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.UpdateReq'{options = F@_1}.

'd_field_event_store.client.projections.UpdateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.UpdateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.UpdateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.UpdateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.UpdateReq'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_event_store.client.projections.UpdateReq.Options'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.UpdateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.UpdateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.UpdateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.UpdateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.UpdateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.UpdateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.UpdateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.UpdateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.UpdateResp'{};
'dfp_read_field_def_event_store.client.projections.UpdateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.UpdateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.UpdateResp'{}.

'skip_varint_event_store.client.projections.UpdateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.UpdateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.UpdateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.UpdateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.UpdateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.UpdateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.UpdateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.UpdateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.projections.DeleteReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(false, TrUserData), id(false, TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.projections.DeleteReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_emitted_streams'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_state_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_checkpoint_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.projections.DeleteReq.Options'{name = F@_1, delete_emitted_streams = F@_2, delete_state_stream = F@_3, delete_checkpoint_stream = F@_4};
'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.projections.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.projections.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.DeleteReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        16 -> 'd_field_event_store.client.projections.DeleteReq.Options_delete_emitted_streams'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        24 -> 'd_field_event_store.client.projections.DeleteReq.Options_delete_state_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        32 -> 'd_field_event_store.client.projections.DeleteReq.Options_delete_checkpoint_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.projections.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.projections.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.projections.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.projections.DeleteReq.Options'{name = F@_1, delete_emitted_streams = F@_2, delete_state_stream = F@_3, delete_checkpoint_stream = F@_4}.

'd_field_event_store.client.projections.DeleteReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DeleteReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.projections.DeleteReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, TrUserData).

'd_field_event_store.client.projections.DeleteReq.Options_delete_emitted_streams'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_emitted_streams'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.projections.DeleteReq.Options_delete_emitted_streams'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, TrUserData).

'd_field_event_store.client.projections.DeleteReq.Options_delete_state_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_state_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.projections.DeleteReq.Options_delete_state_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.projections.DeleteReq.Options_delete_checkpoint_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DeleteReq.Options_delete_checkpoint_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.projections.DeleteReq.Options_delete_checkpoint_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.DeleteReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.projections.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.projections.DeleteReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.projections.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.projections.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.projections.DeleteReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.projections.DeleteReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.projections.DeleteReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.projections.DeleteReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.DeleteReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.DeleteReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.DeleteReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.DeleteReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.DeleteReq'{options = F@_1}.

'd_field_event_store.client.projections.DeleteReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.DeleteReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.DeleteReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.DeleteReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.DeleteReq'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_event_store.client.projections.DeleteReq.Options'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.DeleteReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.DeleteReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DeleteReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.DeleteReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DeleteReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.DeleteReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.DeleteReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.DeleteResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.DeleteResp'{};
'dfp_read_field_def_event_store.client.projections.DeleteResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DeleteResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.DeleteResp'{}.

'skip_varint_event_store.client.projections.DeleteResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.DeleteResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.DeleteResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DeleteResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.DeleteResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DeleteResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.DeleteResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.DeleteResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.projections.StatisticsReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq.Options_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq.Options_all'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq.Options_transient'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq.Options_continuous'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq.Options_one_time'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsReq.Options'{mode = F@_1};
'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StatisticsReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StatisticsReq.Options_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.projections.StatisticsReq.Options_all'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_event_store.client.projections.StatisticsReq.Options_transient'(Rest, 0, 0, 0, F@_1, TrUserData);
        34 -> 'd_field_event_store.client.projections.StatisticsReq.Options_continuous'(Rest, 0, 0, 0, F@_1, TrUserData);
        42 -> 'd_field_event_store.client.projections.StatisticsReq.Options_one_time'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StatisticsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StatisticsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StatisticsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StatisticsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StatisticsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StatisticsReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsReq.Options'{mode = F@_1}.

'd_field_event_store.client.projections.StatisticsReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StatisticsReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(RestF, 0, 0, F, id({name, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.projections.StatisticsReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StatisticsReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({all, NewFValue}, TrUserData);
                                                                                  {all, MVPrev} -> id({all, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({all, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'd_field_event_store.client.projections.StatisticsReq.Options_transient'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StatisticsReq.Options_transient'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq.Options_transient'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({transient, NewFValue}, TrUserData);
                                                                                  {transient, MVPrev} -> id({transient, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({transient, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'd_field_event_store.client.projections.StatisticsReq.Options_continuous'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StatisticsReq.Options_continuous'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq.Options_continuous'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({continuous, NewFValue}, TrUserData);
                                                                                  {continuous, MVPrev} -> id({continuous, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({continuous, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'd_field_event_store.client.projections.StatisticsReq.Options_one_time'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StatisticsReq.Options_one_time'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq.Options_one_time'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({one_time, NewFValue}, TrUserData);
                                                                                  {one_time, MVPrev} -> id({one_time, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({one_time, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'skip_varint_event_store.client.projections.StatisticsReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.StatisticsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.StatisticsReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.StatisticsReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.StatisticsReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.StatisticsReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.StatisticsReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.StatisticsReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.StatisticsReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.StatisticsReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StatisticsReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StatisticsReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.StatisticsReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.StatisticsReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.StatisticsReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StatisticsReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StatisticsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StatisticsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StatisticsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StatisticsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StatisticsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StatisticsReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsReq'{options = F@_1}.

'd_field_event_store.client.projections.StatisticsReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.StatisticsReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.StatisticsReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      if Prev == undefined -> NewFValue;
                                                                         true -> 'merge_msg_event_store.client.projections.StatisticsReq.Options'(Prev, NewFValue, TrUserData)
                                                                      end,
                                                                      TrUserData).

'skip_varint_event_store.client.projections.StatisticsReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.StatisticsReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.StatisticsReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.StatisticsReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.StatisticsReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.StatisticsReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.StatisticsReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.StatisticsReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.StatisticsReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.StatisticsResp.Details'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Bin,
                                                                               0,
                                                                               0,
                                                                               0,
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(0.0, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(<<>>, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               id(0, TrUserData),
                                                                               TrUserData).

'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_coreProcessingTime'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_version'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_epoch'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_effectiveName'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writesInProgress'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<48, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_readsInProgress'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<56, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_partitionsCached'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<66, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_status'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<74, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_stateReason'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<82, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<90, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_mode'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<98, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<109, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_progress'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<114, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_lastCheckpoint'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<120, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_eventsProcessedAfterRestart'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<130, 1, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_checkpointStatus'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<136, 1, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_bufferedEvents'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<144, 1, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsBeforeCheckpoint'(Rest,
                                                                                                       Z1,
                                                                                                       Z2,
                                                                                                       F,
                                                                                                       F@_1,
                                                                                                       F@_2,
                                                                                                       F@_3,
                                                                                                       F@_4,
                                                                                                       F@_5,
                                                                                                       F@_6,
                                                                                                       F@_7,
                                                                                                       F@_8,
                                                                                                       F@_9,
                                                                                                       F@_10,
                                                                                                       F@_11,
                                                                                                       F@_12,
                                                                                                       F@_13,
                                                                                                       F@_14,
                                                                                                       F@_15,
                                                                                                       F@_16,
                                                                                                       F@_17,
                                                                                                       F@_18,
                                                                                                       F@_19,
                                                                                                       TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<152, 1, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsAfterCheckpoint'(Rest,
                                                                                                      Z1,
                                                                                                      Z2,
                                                                                                      F,
                                                                                                      F@_1,
                                                                                                      F@_2,
                                                                                                      F@_3,
                                                                                                      F@_4,
                                                                                                      F@_5,
                                                                                                      F@_6,
                                                                                                      F@_7,
                                                                                                      F@_8,
                                                                                                      F@_9,
                                                                                                      F@_10,
                                                                                                      F@_11,
                                                                                                      F@_12,
                                                                                                      F@_13,
                                                                                                      F@_14,
                                                                                                      F@_15,
                                                                                                      F@_16,
                                                                                                      F@_17,
                                                                                                      F@_18,
                                                                                                      F@_19,
                                                                                                      TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, _) ->
    #'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = F@_1, version = F@_2, epoch = F@_3, effectiveName = F@_4, writesInProgress = F@_5, readsInProgress = F@_6, partitionsCached = F@_7, status = F@_8, stateReason = F@_9,
                                                             name = F@_10, mode = F@_11, position = F@_12, progress = F@_13, lastCheckpoint = F@_14, eventsProcessedAfterRestart = F@_15, checkpointStatus = F@_16, bufferedEvents = F@_17, writePendingEventsBeforeCheckpoint = F@_18,
                                                             writePendingEventsAfterCheckpoint = F@_19};
'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'dg_read_field_def_event_store.client.projections.StatisticsResp.Details'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'dg_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'dg_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.projections.StatisticsResp.Details_coreProcessingTime'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        16 -> 'd_field_event_store.client.projections.StatisticsResp.Details_version'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        24 -> 'd_field_event_store.client.projections.StatisticsResp.Details_epoch'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        34 -> 'd_field_event_store.client.projections.StatisticsResp.Details_effectiveName'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        40 -> 'd_field_event_store.client.projections.StatisticsResp.Details_writesInProgress'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        48 -> 'd_field_event_store.client.projections.StatisticsResp.Details_readsInProgress'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        56 -> 'd_field_event_store.client.projections.StatisticsResp.Details_partitionsCached'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        66 -> 'd_field_event_store.client.projections.StatisticsResp.Details_status'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        74 -> 'd_field_event_store.client.projections.StatisticsResp.Details_stateReason'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        82 -> 'd_field_event_store.client.projections.StatisticsResp.Details_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        90 -> 'd_field_event_store.client.projections.StatisticsResp.Details_mode'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        98 -> 'd_field_event_store.client.projections.StatisticsResp.Details_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        109 -> 'd_field_event_store.client.projections.StatisticsResp.Details_progress'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        114 -> 'd_field_event_store.client.projections.StatisticsResp.Details_lastCheckpoint'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        120 -> 'd_field_event_store.client.projections.StatisticsResp.Details_eventsProcessedAfterRestart'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        130 -> 'd_field_event_store.client.projections.StatisticsResp.Details_checkpointStatus'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        136 -> 'd_field_event_store.client.projections.StatisticsResp.Details_bufferedEvents'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        144 ->
            'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsBeforeCheckpoint'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        152 ->
            'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsAfterCheckpoint'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StatisticsResp.Details'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StatisticsResp.Details'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StatisticsResp.Details'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StatisticsResp.Details'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StatisticsResp.Details'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StatisticsResp.Details'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, _) ->
    #'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = F@_1, version = F@_2, epoch = F@_3, effectiveName = F@_4, writesInProgress = F@_5, readsInProgress = F@_6, partitionsCached = F@_7, status = F@_8, stateReason = F@_9,
                                                             name = F@_10, mode = F@_11, position = F@_12, progress = F@_13, lastCheckpoint = F@_14, eventsProcessedAfterRestart = F@_15, checkpointStatus = F@_16, bufferedEvents = F@_17, writePendingEventsBeforeCheckpoint = F@_18,
                                                             writePendingEventsAfterCheckpoint = F@_19}.

'd_field_event_store.client.projections.StatisticsResp.Details_coreProcessingTime'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                   TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_coreProcessingTime'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_coreProcessingTime'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                   TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_version'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_version'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_version'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_epoch'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_epoch'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_epoch'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_effectiveName'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                              TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_effectiveName'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_effectiveName'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                              TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_writesInProgress'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                 TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writesInProgress'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_writesInProgress'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                 TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_readsInProgress'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_readsInProgress'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_readsInProgress'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, _, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, NewFValue, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_partitionsCached'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                 TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_partitionsCached'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_partitionsCached'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                 TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, NewFValue, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_status'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_status'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_status'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, NewFValue, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_stateReason'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_stateReason'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_stateReason'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, _, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, NewFValue, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, _, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, NewFValue, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_mode'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_mode'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_mode'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, _, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, NewFValue, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, _, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, NewFValue, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_progress'(<<0:16, 128, 127, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                         TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id(infinity, TrUserData), F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_progress'(<<0:16, 128, 255, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                         TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id('-infinity', TrUserData), F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_progress'(<<_:16, 1:1, _:7, _:1, 127:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                         TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id(nan, TrUserData), F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_progress'(<<Value:32/little-float, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                         TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id(Value, TrUserData), F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_lastCheckpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                               TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_lastCheckpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_lastCheckpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, _, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                               TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, NewFValue, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_eventsProcessedAfterRestart'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18,
                                                                                            F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_eventsProcessedAfterRestart'(Rest,
                                                                                                N + 7,
                                                                                                X bsl N + Acc,
                                                                                                F,
                                                                                                F@_1,
                                                                                                F@_2,
                                                                                                F@_3,
                                                                                                F@_4,
                                                                                                F@_5,
                                                                                                F@_6,
                                                                                                F@_7,
                                                                                                F@_8,
                                                                                                F@_9,
                                                                                                F@_10,
                                                                                                F@_11,
                                                                                                F@_12,
                                                                                                F@_13,
                                                                                                F@_14,
                                                                                                F@_15,
                                                                                                F@_16,
                                                                                                F@_17,
                                                                                                F@_18,
                                                                                                F@_19,
                                                                                                TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_eventsProcessedAfterRestart'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, _, F@_16, F@_17, F@_18, F@_19,
                                                                                            TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, NewFValue, F@_16, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_checkpointStatus'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                                 TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_checkpointStatus'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_checkpointStatus'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, _, F@_17, F@_18, F@_19,
                                                                                 TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, NewFValue, F@_17, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_bufferedEvents'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                               TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_bufferedEvents'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_bufferedEvents'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, _, F@_18, F@_19,
                                                                               TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, NewFValue, F@_18, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsBeforeCheckpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                                                                                   F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsBeforeCheckpoint'(Rest,
                                                                                                       N + 7,
                                                                                                       X bsl N + Acc,
                                                                                                       F,
                                                                                                       F@_1,
                                                                                                       F@_2,
                                                                                                       F@_3,
                                                                                                       F@_4,
                                                                                                       F@_5,
                                                                                                       F@_6,
                                                                                                       F@_7,
                                                                                                       F@_8,
                                                                                                       F@_9,
                                                                                                       F@_10,
                                                                                                       F@_11,
                                                                                                       F@_12,
                                                                                                       F@_13,
                                                                                                       F@_14,
                                                                                                       F@_15,
                                                                                                       F@_16,
                                                                                                       F@_17,
                                                                                                       F@_18,
                                                                                                       F@_19,
                                                                                                       TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsBeforeCheckpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, _,
                                                                                                   F@_19, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, NewFValue, F@_19, TrUserData).

'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsAfterCheckpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                                                                                  F@_18, F@_19, TrUserData)
    when N < 57 ->
    'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsAfterCheckpoint'(Rest,
                                                                                                      N + 7,
                                                                                                      X bsl N + Acc,
                                                                                                      F,
                                                                                                      F@_1,
                                                                                                      F@_2,
                                                                                                      F@_3,
                                                                                                      F@_4,
                                                                                                      F@_5,
                                                                                                      F@_6,
                                                                                                      F@_7,
                                                                                                      F@_8,
                                                                                                      F@_9,
                                                                                                      F@_10,
                                                                                                      F@_11,
                                                                                                      F@_12,
                                                                                                      F@_13,
                                                                                                      F@_14,
                                                                                                      F@_15,
                                                                                                      F@_16,
                                                                                                      F@_17,
                                                                                                      F@_18,
                                                                                                      F@_19,
                                                                                                      TrUserData);
'd_field_event_store.client.projections.StatisticsResp.Details_writePendingEventsAfterCheckpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17,
                                                                                                  F@_18, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.StatisticsResp.Details'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'skip_varint_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'skip_varint_event_store.client.projections.StatisticsResp.Details'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'skip_length_delimited_event_store.client.projections.StatisticsResp.Details'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                              TrUserData)
    when N < 57 ->
    'skip_length_delimited_event_store.client.projections.StatisticsResp.Details'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData);
'skip_length_delimited_event_store.client.projections.StatisticsResp.Details'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19,
                                                                              TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'skip_group_event_store.client.projections.StatisticsResp.Details'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'skip_32_event_store.client.projections.StatisticsResp.Details'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'skip_64_event_store.client.projections.StatisticsResp.Details'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData) ->
    'dfp_read_field_def_event_store.client.projections.StatisticsResp.Details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, F@_14, F@_15, F@_16, F@_17, F@_18, F@_19, TrUserData).

'decode_msg_event_store.client.projections.StatisticsResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StatisticsResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StatisticsResp_details'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StatisticsResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsResp'{details = F@_1};
'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StatisticsResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.StatisticsResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.StatisticsResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.StatisticsResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StatisticsResp_details'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StatisticsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StatisticsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StatisticsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StatisticsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StatisticsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StatisticsResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StatisticsResp'{details = F@_1}.

'd_field_event_store.client.projections.StatisticsResp_details'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.StatisticsResp_details'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StatisticsResp_details'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.StatisticsResp.Details'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       if Prev == undefined -> NewFValue;
                                                                          true -> 'merge_msg_event_store.client.projections.StatisticsResp.Details'(Prev, NewFValue, TrUserData)
                                                                       end,
                                                                       TrUserData).

'skip_varint_event_store.client.projections.StatisticsResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.StatisticsResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.StatisticsResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.StatisticsResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.StatisticsResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.StatisticsResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.StatisticsResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.StatisticsResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.StatisticsResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StatisticsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.StateReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.StateReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.StateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.StateReq.Options_partition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.StateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.StateReq.Options'{name = F@_1, partition = F@_2};
'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.StateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.StateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.StateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StateReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.projections.StateReq.Options_partition'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.StateReq.Options'{name = F@_1, partition = F@_2}.

'd_field_event_store.client.projections.StateReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StateReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.StateReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StateReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.projections.StateReq.Options_partition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.StateReq.Options_partition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.StateReq.Options_partition'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StateReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.StateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.projections.StateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.StateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.StateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.StateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.StateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.StateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.StateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.StateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.StateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.StateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.StateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.StateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.StateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StateReq'{options = F@_1}.

'd_field_event_store.client.projections.StateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.StateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.StateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StateReq'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 if Prev == undefined -> NewFValue;
                                                                    true -> 'merge_msg_event_store.client.projections.StateReq.Options'(Prev, NewFValue, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.projections.StateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.StateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.StateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.StateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.StateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.StateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.StateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.StateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.StateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.StateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.StateResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.StateResp_state'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.StateResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StateResp'{state = F@_1};
'dfp_read_field_def_event_store.client.projections.StateResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.StateResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.StateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.StateResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.StateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.StateResp_state'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.StateResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.StateResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.StateResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.StateResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.StateResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.StateResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.StateResp'{state = F@_1}.

'd_field_event_store.client.projections.StateResp_state'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.StateResp_state'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.StateResp_state'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Value'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.StateResp'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_google.protobuf.Value'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.StateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.StateResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.StateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.StateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.StateResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.StateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.StateResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.StateResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.StateResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.StateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.StateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.StateResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.ResultReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.ResultReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.ResultReq.Options_partition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.ResultReq.Options'{name = F@_1, partition = F@_2};
'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResultReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.ResultReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.ResultReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.ResultReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.ResultReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.projections.ResultReq.Options_partition'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.ResultReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.ResultReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.ResultReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.ResultReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.ResultReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.ResultReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.ResultReq.Options'{name = F@_1, partition = F@_2}.

'd_field_event_store.client.projections.ResultReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.ResultReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.ResultReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.projections.ResultReq.Options_partition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.ResultReq.Options_partition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.ResultReq.Options_partition'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.ResultReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.projections.ResultReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.ResultReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.ResultReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.ResultReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.ResultReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.ResultReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.ResultReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.ResultReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.ResultReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.ResultReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.ResultReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResultReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResultReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.ResultReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResultReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.ResultReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.ResultReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.ResultReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.ResultReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.ResultReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.ResultReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.ResultReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.ResultReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.ResultReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.ResultReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResultReq'{options = F@_1}.

'd_field_event_store.client.projections.ResultReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.ResultReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.ResultReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.ResultReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResultReq'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_event_store.client.projections.ResultReq.Options'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.ResultReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.ResultReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.ResultReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.ResultReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.ResultReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.ResultReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResultReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.ResultReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResultReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.ResultReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.ResultReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.ResultResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.ResultResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.ResultResp_result'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResultResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResultResp'{result = F@_1};
'dfp_read_field_def_event_store.client.projections.ResultResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResultResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.ResultResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.ResultResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.ResultResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.ResultResp_result'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.ResultResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.ResultResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.ResultResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.ResultResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.ResultResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.ResultResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResultResp'{result = F@_1}.

'd_field_event_store.client.projections.ResultResp_result'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.ResultResp_result'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.ResultResp_result'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Value'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResultResp'(RestF,
                                                                   0,
                                                                   0,
                                                                   F,
                                                                   if Prev == undefined -> NewFValue;
                                                                      true -> 'merge_msg_google.protobuf.Value'(Prev, NewFValue, TrUserData)
                                                                   end,
                                                                   TrUserData).

'skip_varint_event_store.client.projections.ResultResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.ResultResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.ResultResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.ResultResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.ResultResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.ResultResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResultResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.ResultResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResultResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.ResultResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.ResultResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResultResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.ResetReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.ResetReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.ResetReq.Options_write_checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.ResetReq.Options'{name = F@_1, write_checkpoint = F@_2};
'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResetReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.ResetReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.ResetReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.ResetReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.ResetReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.projections.ResetReq.Options_write_checkpoint'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.ResetReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.ResetReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.ResetReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.ResetReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.ResetReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.ResetReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.ResetReq.Options'{name = F@_1, write_checkpoint = F@_2}.

'd_field_event_store.client.projections.ResetReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.ResetReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.ResetReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.projections.ResetReq.Options_write_checkpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.ResetReq.Options_write_checkpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.ResetReq.Options_write_checkpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.ResetReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.projections.ResetReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.ResetReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.ResetReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.ResetReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.ResetReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.ResetReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.ResetReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.ResetReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.ResetReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.ResetReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.ResetReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.ResetReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResetReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.ResetReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResetReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.ResetReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.ResetReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.ResetReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.ResetReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.ResetReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.ResetReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.ResetReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.ResetReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.ResetReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.ResetReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.ResetReq'{options = F@_1}.

'd_field_event_store.client.projections.ResetReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.ResetReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.ResetReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.ResetReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.ResetReq'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 if Prev == undefined -> NewFValue;
                                                                    true -> 'merge_msg_event_store.client.projections.ResetReq.Options'(Prev, NewFValue, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.projections.ResetReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.ResetReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.ResetReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.ResetReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.ResetReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.ResetReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResetReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.ResetReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResetReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.ResetReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.ResetReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.ResetResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.ResetResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.ResetResp'{};
'dfp_read_field_def_event_store.client.projections.ResetResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.ResetResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.ResetResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.ResetResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.ResetResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.ResetResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.ResetResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.ResetResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.ResetResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.ResetResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.ResetResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.ResetResp'{}.

'skip_varint_event_store.client.projections.ResetResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.ResetResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.ResetResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.ResetResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.ResetResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.ResetResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.ResetResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.ResetResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.ResetResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.ResetResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.ResetResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.ResetResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.projections.EnableReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.EnableReq.Options_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.EnableReq.Options'{name = F@_1};
'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.EnableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.EnableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.EnableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.EnableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.EnableReq.Options_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.EnableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.EnableReq.Options'{name = F@_1}.

'd_field_event_store.client.projections.EnableReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.EnableReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.EnableReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.EnableReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.EnableReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.EnableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.EnableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.EnableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.EnableReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.EnableReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.EnableReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.EnableReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.EnableReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.EnableReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.EnableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.EnableReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.EnableReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.EnableReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.EnableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.EnableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.EnableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.EnableReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.EnableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.EnableReq'{options = F@_1}.

'd_field_event_store.client.projections.EnableReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.EnableReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.EnableReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.EnableReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.EnableReq'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  if Prev == undefined -> NewFValue;
                                                                     true -> 'merge_msg_event_store.client.projections.EnableReq.Options'(Prev, NewFValue, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.projections.EnableReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.EnableReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.EnableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.EnableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.EnableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.EnableReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.EnableReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.EnableReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.EnableReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.EnableReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.EnableResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.EnableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.EnableResp'{};
'dfp_read_field_def_event_store.client.projections.EnableResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.EnableResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.EnableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.EnableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.EnableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.EnableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.EnableResp'{}.

'skip_varint_event_store.client.projections.EnableResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.EnableResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.EnableResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.EnableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.EnableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.EnableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.EnableResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.EnableResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.EnableResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.EnableResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.EnableResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.projections.DisableReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.DisableReq.Options_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.projections.DisableReq.Options_write_checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.DisableReq.Options'{name = F@_1, write_checkpoint = F@_2};
'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DisableReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.projections.DisableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.projections.DisableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.projections.DisableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.DisableReq.Options_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.projections.DisableReq.Options_write_checkpoint'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.projections.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.projections.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.projections.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.DisableReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.projections.DisableReq.Options'{name = F@_1, write_checkpoint = F@_2}.

'd_field_event_store.client.projections.DisableReq.Options_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DisableReq.Options_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.DisableReq.Options_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.projections.DisableReq.Options_write_checkpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.projections.DisableReq.Options_write_checkpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.projections.DisableReq.Options_write_checkpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.projections.DisableReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.projections.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.projections.DisableReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.projections.DisableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.DisableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.projections.DisableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.projections.DisableReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.projections.DisableReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.projections.DisableReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.projections.DisableReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.projections.DisableReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.projections.DisableReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.projections.DisableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.DisableReq'{options = F@_1};
'dfp_read_field_def_event_store.client.projections.DisableReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DisableReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.projections.DisableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.DisableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.projections.DisableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.projections.DisableReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.projections.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.projections.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.projections.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.projections.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.projections.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.projections.DisableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.projections.DisableReq'{options = F@_1}.

'd_field_event_store.client.projections.DisableReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.projections.DisableReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.projections.DisableReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.projections.DisableReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.projections.DisableReq'(RestF,
                                                                   0,
                                                                   0,
                                                                   F,
                                                                   if Prev == undefined -> NewFValue;
                                                                      true -> 'merge_msg_event_store.client.projections.DisableReq.Options'(Prev, NewFValue, TrUserData)
                                                                   end,
                                                                   TrUserData).

'skip_varint_event_store.client.projections.DisableReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.projections.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.projections.DisableReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.projections.DisableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.projections.DisableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.projections.DisableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DisableReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.projections.DisableReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DisableReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.projections.DisableReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.projections.DisableReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.projections.DisableResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.projections.DisableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.DisableResp'{};
'dfp_read_field_def_event_store.client.projections.DisableResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.projections.DisableResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.projections.DisableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.projections.DisableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.projections.DisableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.projections.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.projections.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.projections.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.projections.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.projections.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.projections.DisableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.projections.DisableResp'{}.

'skip_varint_event_store.client.projections.DisableResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.projections.DisableResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.projections.DisableResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.projections.DisableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.projections.DisableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.projections.DisableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.projections.DisableResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.projections.DisableResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.projections.DisableResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.projections.DisableResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.projections.DisableResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.projections.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_google.protobuf.Struct'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Struct'(Bin, 0, 0, 0, 'tr_decode_init_default_google.protobuf.Struct.fields'([], TrUserData), TrUserData).

'dfp_read_field_def_google.protobuf.Struct'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Struct_fields'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Struct'(<<>>, 0, 0, _, R1, TrUserData) -> #'google.protobuf.Struct'{fields = 'tr_decode_repeated_finalize_google.protobuf.Struct.fields'(R1, TrUserData)};
'dfp_read_field_def_google.protobuf.Struct'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_google.protobuf.Struct'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_google.protobuf.Struct'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Struct'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_google.protobuf.Struct'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_google.protobuf.Struct_fields'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.protobuf.Struct'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_google.protobuf.Struct'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_google.protobuf.Struct'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_google.protobuf.Struct'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_google.protobuf.Struct'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_google.protobuf.Struct'(<<>>, 0, 0, _, R1, TrUserData) -> #'google.protobuf.Struct'{fields = 'tr_decode_repeated_finalize_google.protobuf.Struct.fields'(R1, TrUserData)}.

'd_field_google.protobuf.Struct_fields'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Struct_fields'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Struct_fields'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_map<string,google.protobuf.Value>'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Struct'(RestF, 0, 0, F, 'tr_decode_repeated_add_elem_google.protobuf.Struct.fields'(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_google.protobuf.Struct'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_google.protobuf.Struct'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_google.protobuf.Struct'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Struct'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_google.protobuf.Struct'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Struct'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_google.protobuf.Struct'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Struct'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_google.protobuf.Struct'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Struct'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_google.protobuf.Struct'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Struct'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_google.protobuf.Struct'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Struct'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_google.protobuf.Value'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_google.protobuf.Value'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_null_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<17, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_number_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_string_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_bool_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_struct_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.Value_list_value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.Value'(<<>>, 0, 0, _, F@_1, _) -> #'google.protobuf.Value'{kind = F@_1};
'dfp_read_field_def_google.protobuf.Value'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_google.protobuf.Value'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_google.protobuf.Value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_google.protobuf.Value'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_google.protobuf.Value_null_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        17 -> 'd_field_google.protobuf.Value_number_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_google.protobuf.Value_string_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        32 -> 'd_field_google.protobuf.Value_bool_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        42 -> 'd_field_google.protobuf.Value_struct_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        50 -> 'd_field_google.protobuf.Value_list_value'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.protobuf.Value'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_google.protobuf.Value'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_google.protobuf.Value'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_google.protobuf.Value'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_google.protobuf.Value'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_google.protobuf.Value'(<<>>, 0, 0, _, F@_1, _) -> #'google.protobuf.Value'{kind = F@_1}.

'd_field_google.protobuf.Value_null_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Value_null_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Value_null_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_google.protobuf.NullValue'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_google.protobuf.Value'(RestF, 0, 0, F, id({null_value, NewFValue}, TrUserData), TrUserData).

'd_field_google.protobuf.Value_number_value'(<<0:48, 240, 127, Rest/binary>>, Z1, Z2, F, _, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, id({number_value, id(infinity, TrUserData)}, TrUserData), TrUserData);
'd_field_google.protobuf.Value_number_value'(<<0:48, 240, 255, Rest/binary>>, Z1, Z2, F, _, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, id({number_value, id('-infinity', TrUserData)}, TrUserData), TrUserData);
'd_field_google.protobuf.Value_number_value'(<<_:48, 15:4, _:4, _:1, 127:7, Rest/binary>>, Z1, Z2, F, _, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, id({number_value, id(nan, TrUserData)}, TrUserData), TrUserData);
'd_field_google.protobuf.Value_number_value'(<<Value:64/little-float, Rest/binary>>, Z1, Z2, F, _, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, id({number_value, id(Value, TrUserData)}, TrUserData), TrUserData).

'd_field_google.protobuf.Value_string_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Value_string_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Value_string_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Value'(RestF, 0, 0, F, id({string_value, NewFValue}, TrUserData), TrUserData).

'd_field_google.protobuf.Value_bool_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Value_bool_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Value_bool_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_google.protobuf.Value'(RestF, 0, 0, F, id({bool_value, NewFValue}, TrUserData), TrUserData).

'd_field_google.protobuf.Value_struct_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Value_struct_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Value_struct_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Struct'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Value'(RestF,
                                               0,
                                               0,
                                               F,
                                               case Prev of
                                                   undefined -> id({struct_value, NewFValue}, TrUserData);
                                                   {struct_value, MVPrev} -> id({struct_value, 'merge_msg_google.protobuf.Struct'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                   _ -> id({struct_value, NewFValue}, TrUserData)
                                               end,
                                               TrUserData).

'd_field_google.protobuf.Value_list_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.Value_list_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.Value_list_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.ListValue'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Value'(RestF,
                                               0,
                                               0,
                                               F,
                                               case Prev of
                                                   undefined -> id({list_value, NewFValue}, TrUserData);
                                                   {list_value, MVPrev} -> id({list_value, 'merge_msg_google.protobuf.ListValue'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                   _ -> id({list_value, NewFValue}, TrUserData)
                                               end,
                                               TrUserData).

'skip_varint_google.protobuf.Value'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_google.protobuf.Value'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_google.protobuf.Value'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_google.protobuf.Value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Value'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_google.protobuf.Value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Value'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_google.protobuf.Value'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Value'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_google.protobuf.Value'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_google.protobuf.Value'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.Value'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_google.protobuf.ListValue'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.ListValue'(Bin, 0, 0, 0, id([], TrUserData), TrUserData).

'dfp_read_field_def_google.protobuf.ListValue'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_google.protobuf.ListValue_values'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_google.protobuf.ListValue'(<<>>, 0, 0, _, R1, TrUserData) -> #'google.protobuf.ListValue'{values = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_google.protobuf.ListValue'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_google.protobuf.ListValue'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_google.protobuf.ListValue'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.ListValue'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_google.protobuf.ListValue'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_google.protobuf.ListValue_values'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.protobuf.ListValue'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_google.protobuf.ListValue'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_google.protobuf.ListValue'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_google.protobuf.ListValue'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_google.protobuf.ListValue'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_google.protobuf.ListValue'(<<>>, 0, 0, _, R1, TrUserData) -> #'google.protobuf.ListValue'{values = lists_reverse(R1, TrUserData)}.

'd_field_google.protobuf.ListValue_values'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_google.protobuf.ListValue_values'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_google.protobuf.ListValue_values'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Value'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.ListValue'(RestF, 0, 0, F, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_google.protobuf.ListValue'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_google.protobuf.ListValue'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_google.protobuf.ListValue'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.ListValue'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_google.protobuf.ListValue'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.ListValue'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_google.protobuf.ListValue'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.ListValue'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_google.protobuf.ListValue'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.ListValue'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_google.protobuf.ListValue'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.ListValue'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_google.protobuf.ListValue'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_google.protobuf.ListValue'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID.Structured'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2};
'dfp_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2}.

'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.UUID.Structured'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.UUID.Structured'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.UUID.Structured'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.UUID.Structured'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.UUID.Structured'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.UUID'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_structured'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_string'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1};
'dfp_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.UUID_structured'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.UUID_string'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1}.

'd_field_event_store.client.UUID_structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID.Structured'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF,
                                                 0,
                                                 0,
                                                 F,
                                                 case Prev of
                                                     undefined -> id({structured, NewFValue}, TrUserData);
                                                     {structured, MVPrev} -> id({structured, 'merge_msg_event_store.client.UUID.Structured'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                     _ -> id({structured, NewFValue}, TrUserData)
                                                 end,
                                                 TrUserData).

'd_field_event_store.client.UUID_string'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_string'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_string'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF, 0, 0, F, id({string, NewFValue}, TrUserData), TrUserData).

'skip_varint_event_store.client.UUID'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.UUID'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.UUID'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.UUID'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.UUID'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{};
'dfp_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{}.

'skip_varint_event_store.client.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamIdentifier'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1};
'dfp_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        26 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1}.

'd_field_event_store.client.StreamIdentifier_stream_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamIdentifier_stream_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.StreamIdentifier'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamIdentifier'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamIdentifier'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamIdentifier'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamIdentifier'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.AllStreamPosition'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.AllStreamPosition_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.AllStreamPosition_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.AllStreamPosition'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.AllStreamPosition'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.AllStreamPosition'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.AllStreamPosition'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.AllStreamPosition'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2};
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        24 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        50 -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2}.

'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, id({current_stream_revision, NewFValue}, TrUserData), F@_2, TrUserData).

'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 case Prev of
                                                                     undefined -> id({current_no_stream, NewFValue}, TrUserData);
                                                                     {current_no_stream, MVPrev} -> id({current_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({current_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 F@_2,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, id({expected_stream_position, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_any, NewFValue}, TrUserData);
                                                                     {expected_any, MVPrev} -> id({expected_any, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_any, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_stream_exists, NewFValue}, TrUserData);
                                                                     {expected_stream_exists, MVPrev} -> id({expected_stream_exists, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_stream_exists, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_no_stream, NewFValue}, TrUserData);
                                                                     {expected_no_stream, MVPrev} -> id({expected_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.WrongExpectedVersion'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.WrongExpectedVersion'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.WrongExpectedVersion'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.WrongExpectedVersion'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.WrongExpectedVersion'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.AccessDenied'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{};
'dfp_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{}.

'skip_varint_event_store.client.AccessDenied'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.AccessDenied'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.AccessDenied'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.AccessDenied'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.AccessDenied'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamDeleted'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1};
'dfp_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1}.

'd_field_event_store.client.StreamDeleted_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamDeleted_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamDeleted'(RestF,
                                                          0,
                                                          0,
                                                          F,
                                                          if Prev == undefined -> NewFValue;
                                                             true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                          end,
                                                          TrUserData).

'skip_varint_event_store.client.StreamDeleted'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamDeleted'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamDeleted'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamDeleted'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamDeleted'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Timeout'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{};
'dfp_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{}.

'skip_varint_event_store.client.Timeout'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Timeout'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Timeout'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Timeout'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Timeout'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Timeout'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Timeout'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.Unknown'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{};
'dfp_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{}.

'skip_varint_event_store.client.Unknown'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Unknown'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Unknown'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Unknown'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Unknown'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Unknown'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Unknown'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{};
'dfp_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{}.

'skip_varint_event_store.client.InvalidTransaction'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.InvalidTransaction'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.InvalidTransaction'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.InvalidTransaction'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.InvalidTransaction'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Bin, 0, 0, 0, id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1};
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1}.

'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.MaximumAppendSizeExceeded'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.MaximumAppendSizeExceeded'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.MaximumAppendSizeExceeded'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.BadRequest'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.BadRequest'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.BadRequest_message'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1};
'dfp_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.BadRequest_message'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1}.

'd_field_event_store.client.BadRequest_message'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.BadRequest_message'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.BadRequest_message'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.BadRequest'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.BadRequest'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.BadRequest'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.BadRequest'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.BadRequest'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.BadRequest'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.BadRequest'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.BadRequest'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_google.protobuf.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{};
'dfp_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{}.

'skip_varint_google.protobuf.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_google.protobuf.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_google.protobuf.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_google.protobuf.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_google.protobuf.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_map<string,google.protobuf.Value>'(Bin, TrUserData) -> 'dfp_read_field_def_map<string,google.protobuf.Value>'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_map<string,google.protobuf.Value>'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,google.protobuf.Value>_key'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,google.protobuf.Value>'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,google.protobuf.Value>_value'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,google.protobuf.Value>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,google.protobuf.Value>'{key = F@_1, value = F@_2};
'dfp_read_field_def_map<string,google.protobuf.Value>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_map<string,google.protobuf.Value>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_map<string,google.protobuf.Value>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_map<string,google.protobuf.Value>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_map<string,google.protobuf.Value>'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_map<string,google.protobuf.Value>_key'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_map<string,google.protobuf.Value>_value'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_map<string,google.protobuf.Value>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_map<string,google.protobuf.Value>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_map<string,google.protobuf.Value>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_map<string,google.protobuf.Value>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_map<string,google.protobuf.Value>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_map<string,google.protobuf.Value>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,google.protobuf.Value>'{key = F@_1, value = F@_2}.

'd_field_map<string,google.protobuf.Value>_key'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,google.protobuf.Value>_key'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,google.protobuf.Value>_key'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,google.protobuf.Value>'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_map<string,google.protobuf.Value>_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,google.protobuf.Value>_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,google.protobuf.Value>_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Value'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,google.protobuf.Value>'(RestF,
                                                           0,
                                                           0,
                                                           F,
                                                           F@_1,
                                                           if Prev == undefined -> NewFValue;
                                                              true -> 'merge_msg_google.protobuf.Value'(Prev, NewFValue, TrUserData)
                                                           end,
                                                           TrUserData).

'skip_varint_map<string,google.protobuf.Value>'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_map<string,google.protobuf.Value>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_map<string,google.protobuf.Value>'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,google.protobuf.Value>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_map<string,google.protobuf.Value>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_map<string,google.protobuf.Value>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_map<string,google.protobuf.Value>'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_map<string,google.protobuf.Value>'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_map<string,google.protobuf.Value>'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_map<string,google.protobuf.Value>'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_map<string,google.protobuf.Value>'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,google.protobuf.Value>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_map<string,google.protobuf.Value>'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,google.protobuf.Value>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'd_enum_google.protobuf.NullValue'(0) -> 'NULL_VALUE';
'd_enum_google.protobuf.NullValue'(V) -> V.

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New) when element(1, Prev) =:= element(1, New) -> merge_msgs(Prev, New, element(1, Prev), []).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) -> merge_msgs(Prev, New, MsgName, []);
merge_msgs(Prev, New, Opts) when element(1, Prev) =:= element(1, New), is_list(Opts) -> merge_msgs(Prev, New, element(1, Prev), Opts).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.projections.CreateReq.Options' -> 'merge_msg_event_store.client.projections.CreateReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.CreateReq.Options.Continuous' -> 'merge_msg_event_store.client.projections.CreateReq.Options.Continuous'(Prev, New, TrUserData);
        'event_store.client.projections.CreateReq.Options.Transient' -> 'merge_msg_event_store.client.projections.CreateReq.Options.Transient'(Prev, New, TrUserData);
        'event_store.client.projections.CreateReq' -> 'merge_msg_event_store.client.projections.CreateReq'(Prev, New, TrUserData);
        'event_store.client.projections.CreateResp' -> 'merge_msg_event_store.client.projections.CreateResp'(Prev, New, TrUserData);
        'event_store.client.projections.UpdateReq.Options' -> 'merge_msg_event_store.client.projections.UpdateReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.UpdateReq' -> 'merge_msg_event_store.client.projections.UpdateReq'(Prev, New, TrUserData);
        'event_store.client.projections.UpdateResp' -> 'merge_msg_event_store.client.projections.UpdateResp'(Prev, New, TrUserData);
        'event_store.client.projections.DeleteReq.Options' -> 'merge_msg_event_store.client.projections.DeleteReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.DeleteReq' -> 'merge_msg_event_store.client.projections.DeleteReq'(Prev, New, TrUserData);
        'event_store.client.projections.DeleteResp' -> 'merge_msg_event_store.client.projections.DeleteResp'(Prev, New, TrUserData);
        'event_store.client.projections.StatisticsReq.Options' -> 'merge_msg_event_store.client.projections.StatisticsReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.StatisticsReq' -> 'merge_msg_event_store.client.projections.StatisticsReq'(Prev, New, TrUserData);
        'event_store.client.projections.StatisticsResp.Details' -> 'merge_msg_event_store.client.projections.StatisticsResp.Details'(Prev, New, TrUserData);
        'event_store.client.projections.StatisticsResp' -> 'merge_msg_event_store.client.projections.StatisticsResp'(Prev, New, TrUserData);
        'event_store.client.projections.StateReq.Options' -> 'merge_msg_event_store.client.projections.StateReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.StateReq' -> 'merge_msg_event_store.client.projections.StateReq'(Prev, New, TrUserData);
        'event_store.client.projections.StateResp' -> 'merge_msg_event_store.client.projections.StateResp'(Prev, New, TrUserData);
        'event_store.client.projections.ResultReq.Options' -> 'merge_msg_event_store.client.projections.ResultReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.ResultReq' -> 'merge_msg_event_store.client.projections.ResultReq'(Prev, New, TrUserData);
        'event_store.client.projections.ResultResp' -> 'merge_msg_event_store.client.projections.ResultResp'(Prev, New, TrUserData);
        'event_store.client.projections.ResetReq.Options' -> 'merge_msg_event_store.client.projections.ResetReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.ResetReq' -> 'merge_msg_event_store.client.projections.ResetReq'(Prev, New, TrUserData);
        'event_store.client.projections.ResetResp' -> 'merge_msg_event_store.client.projections.ResetResp'(Prev, New, TrUserData);
        'event_store.client.projections.EnableReq.Options' -> 'merge_msg_event_store.client.projections.EnableReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.EnableReq' -> 'merge_msg_event_store.client.projections.EnableReq'(Prev, New, TrUserData);
        'event_store.client.projections.EnableResp' -> 'merge_msg_event_store.client.projections.EnableResp'(Prev, New, TrUserData);
        'event_store.client.projections.DisableReq.Options' -> 'merge_msg_event_store.client.projections.DisableReq.Options'(Prev, New, TrUserData);
        'event_store.client.projections.DisableReq' -> 'merge_msg_event_store.client.projections.DisableReq'(Prev, New, TrUserData);
        'event_store.client.projections.DisableResp' -> 'merge_msg_event_store.client.projections.DisableResp'(Prev, New, TrUserData);
        'google.protobuf.Struct' -> 'merge_msg_google.protobuf.Struct'(Prev, New, TrUserData);
        'google.protobuf.Value' -> 'merge_msg_google.protobuf.Value'(Prev, New, TrUserData);
        'google.protobuf.ListValue' -> 'merge_msg_google.protobuf.ListValue'(Prev, New, TrUserData);
        'event_store.client.UUID.Structured' -> 'merge_msg_event_store.client.UUID.Structured'(Prev, New, TrUserData);
        'event_store.client.UUID' -> 'merge_msg_event_store.client.UUID'(Prev, New, TrUserData);
        'event_store.client.Empty' -> 'merge_msg_event_store.client.Empty'(Prev, New, TrUserData);
        'event_store.client.StreamIdentifier' -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, New, TrUserData);
        'event_store.client.AllStreamPosition' -> 'merge_msg_event_store.client.AllStreamPosition'(Prev, New, TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'merge_msg_event_store.client.WrongExpectedVersion'(Prev, New, TrUserData);
        'event_store.client.AccessDenied' -> 'merge_msg_event_store.client.AccessDenied'(Prev, New, TrUserData);
        'event_store.client.StreamDeleted' -> 'merge_msg_event_store.client.StreamDeleted'(Prev, New, TrUserData);
        'event_store.client.Timeout' -> 'merge_msg_event_store.client.Timeout'(Prev, New, TrUserData);
        'event_store.client.Unknown' -> 'merge_msg_event_store.client.Unknown'(Prev, New, TrUserData);
        'event_store.client.InvalidTransaction' -> 'merge_msg_event_store.client.InvalidTransaction'(Prev, New, TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'merge_msg_event_store.client.MaximumAppendSizeExceeded'(Prev, New, TrUserData);
        'event_store.client.BadRequest' -> 'merge_msg_event_store.client.BadRequest'(Prev, New, TrUserData);
        'google.protobuf.Empty' -> 'merge_msg_google.protobuf.Empty'(Prev, New, TrUserData)
    end.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.CreateReq.Options'/3}).
'merge_msg_event_store.client.projections.CreateReq.Options'(#'event_store.client.projections.CreateReq.Options'{mode = PFmode, query = PFquery}, #'event_store.client.projections.CreateReq.Options'{mode = NFmode, query = NFquery}, TrUserData) ->
    #'event_store.client.projections.CreateReq.Options'{mode =
                                                            case {PFmode, NFmode} of
                                                                {{one_time, OPFmode}, {one_time, ONFmode}} -> {one_time, 'merge_msg_event_store.client.Empty'(OPFmode, ONFmode, TrUserData)};
                                                                {{transient, OPFmode}, {transient, ONFmode}} -> {transient, 'merge_msg_event_store.client.projections.CreateReq.Options.Transient'(OPFmode, ONFmode, TrUserData)};
                                                                {{continuous, OPFmode}, {continuous, ONFmode}} -> {continuous, 'merge_msg_event_store.client.projections.CreateReq.Options.Continuous'(OPFmode, ONFmode, TrUserData)};
                                                                {_, undefined} -> PFmode;
                                                                _ -> NFmode
                                                            end,
                                                        query =
                                                            if NFquery =:= undefined -> PFquery;
                                                               true -> NFquery
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.CreateReq.Options.Continuous'/3}).
'merge_msg_event_store.client.projections.CreateReq.Options.Continuous'(#'event_store.client.projections.CreateReq.Options.Continuous'{name = PFname, track_emitted_streams = PFtrack_emitted_streams},
                                                                        #'event_store.client.projections.CreateReq.Options.Continuous'{name = NFname, track_emitted_streams = NFtrack_emitted_streams}, _) ->
    #'event_store.client.projections.CreateReq.Options.Continuous'{name =
                                                                       if NFname =:= undefined -> PFname;
                                                                          true -> NFname
                                                                       end,
                                                                   track_emitted_streams =
                                                                       if NFtrack_emitted_streams =:= undefined -> PFtrack_emitted_streams;
                                                                          true -> NFtrack_emitted_streams
                                                                       end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.CreateReq.Options.Transient'/3}).
'merge_msg_event_store.client.projections.CreateReq.Options.Transient'(#'event_store.client.projections.CreateReq.Options.Transient'{name = PFname}, #'event_store.client.projections.CreateReq.Options.Transient'{name = NFname}, _) ->
    #'event_store.client.projections.CreateReq.Options.Transient'{name =
                                                                      if NFname =:= undefined -> PFname;
                                                                         true -> NFname
                                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.CreateReq'/3}).
'merge_msg_event_store.client.projections.CreateReq'(#'event_store.client.projections.CreateReq'{options = PFoptions}, #'event_store.client.projections.CreateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.CreateReq'{options =
                                                    if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.CreateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                       PFoptions == undefined -> NFoptions;
                                                       NFoptions == undefined -> PFoptions
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.CreateResp'/3}).
'merge_msg_event_store.client.projections.CreateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.UpdateReq.Options'/3}).
'merge_msg_event_store.client.projections.UpdateReq.Options'(#'event_store.client.projections.UpdateReq.Options'{name = PFname, query = PFquery, emit_option = PFemit_option},
                                                             #'event_store.client.projections.UpdateReq.Options'{name = NFname, query = NFquery, emit_option = NFemit_option}, TrUserData) ->
    #'event_store.client.projections.UpdateReq.Options'{name =
                                                            if NFname =:= undefined -> PFname;
                                                               true -> NFname
                                                            end,
                                                        query =
                                                            if NFquery =:= undefined -> PFquery;
                                                               true -> NFquery
                                                            end,
                                                        emit_option =
                                                            case {PFemit_option, NFemit_option} of
                                                                {{no_emit_options, OPFemit_option}, {no_emit_options, ONFemit_option}} -> {no_emit_options, 'merge_msg_event_store.client.Empty'(OPFemit_option, ONFemit_option, TrUserData)};
                                                                {_, undefined} -> PFemit_option;
                                                                _ -> NFemit_option
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.UpdateReq'/3}).
'merge_msg_event_store.client.projections.UpdateReq'(#'event_store.client.projections.UpdateReq'{options = PFoptions}, #'event_store.client.projections.UpdateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.UpdateReq'{options =
                                                    if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.UpdateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                       PFoptions == undefined -> NFoptions;
                                                       NFoptions == undefined -> PFoptions
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.UpdateResp'/3}).
'merge_msg_event_store.client.projections.UpdateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DeleteReq.Options'/3}).
'merge_msg_event_store.client.projections.DeleteReq.Options'(#'event_store.client.projections.DeleteReq.Options'{name = PFname, delete_emitted_streams = PFdelete_emitted_streams, delete_state_stream = PFdelete_state_stream,
                                                                                                                 delete_checkpoint_stream = PFdelete_checkpoint_stream},
                                                             #'event_store.client.projections.DeleteReq.Options'{name = NFname, delete_emitted_streams = NFdelete_emitted_streams, delete_state_stream = NFdelete_state_stream, delete_checkpoint_stream = NFdelete_checkpoint_stream}, _) ->
    #'event_store.client.projections.DeleteReq.Options'{name =
                                                            if NFname =:= undefined -> PFname;
                                                               true -> NFname
                                                            end,
                                                        delete_emitted_streams =
                                                            if NFdelete_emitted_streams =:= undefined -> PFdelete_emitted_streams;
                                                               true -> NFdelete_emitted_streams
                                                            end,
                                                        delete_state_stream =
                                                            if NFdelete_state_stream =:= undefined -> PFdelete_state_stream;
                                                               true -> NFdelete_state_stream
                                                            end,
                                                        delete_checkpoint_stream =
                                                            if NFdelete_checkpoint_stream =:= undefined -> PFdelete_checkpoint_stream;
                                                               true -> NFdelete_checkpoint_stream
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DeleteReq'/3}).
'merge_msg_event_store.client.projections.DeleteReq'(#'event_store.client.projections.DeleteReq'{options = PFoptions}, #'event_store.client.projections.DeleteReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.DeleteReq'{options =
                                                    if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.DeleteReq.Options'(PFoptions, NFoptions, TrUserData);
                                                       PFoptions == undefined -> NFoptions;
                                                       NFoptions == undefined -> PFoptions
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DeleteResp'/3}).
'merge_msg_event_store.client.projections.DeleteResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StatisticsReq.Options'/3}).
'merge_msg_event_store.client.projections.StatisticsReq.Options'(#'event_store.client.projections.StatisticsReq.Options'{mode = PFmode}, #'event_store.client.projections.StatisticsReq.Options'{mode = NFmode}, TrUserData) ->
    #'event_store.client.projections.StatisticsReq.Options'{mode =
                                                                case {PFmode, NFmode} of
                                                                    {{all, OPFmode}, {all, ONFmode}} -> {all, 'merge_msg_event_store.client.Empty'(OPFmode, ONFmode, TrUserData)};
                                                                    {{transient, OPFmode}, {transient, ONFmode}} -> {transient, 'merge_msg_event_store.client.Empty'(OPFmode, ONFmode, TrUserData)};
                                                                    {{continuous, OPFmode}, {continuous, ONFmode}} -> {continuous, 'merge_msg_event_store.client.Empty'(OPFmode, ONFmode, TrUserData)};
                                                                    {{one_time, OPFmode}, {one_time, ONFmode}} -> {one_time, 'merge_msg_event_store.client.Empty'(OPFmode, ONFmode, TrUserData)};
                                                                    {_, undefined} -> PFmode;
                                                                    _ -> NFmode
                                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StatisticsReq'/3}).
'merge_msg_event_store.client.projections.StatisticsReq'(#'event_store.client.projections.StatisticsReq'{options = PFoptions}, #'event_store.client.projections.StatisticsReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.StatisticsReq'{options =
                                                        if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.StatisticsReq.Options'(PFoptions, NFoptions, TrUserData);
                                                           PFoptions == undefined -> NFoptions;
                                                           NFoptions == undefined -> PFoptions
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StatisticsResp.Details'/3}).
'merge_msg_event_store.client.projections.StatisticsResp.Details'(#'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = PFcoreProcessingTime, version = PFversion, epoch = PFepoch, effectiveName = PFeffectiveName,
                                                                                                                           writesInProgress = PFwritesInProgress, readsInProgress = PFreadsInProgress, partitionsCached = PFpartitionsCached, status = PFstatus, stateReason = PFstateReason, name = PFname,
                                                                                                                           mode = PFmode, position = PFposition, progress = PFprogress, lastCheckpoint = PFlastCheckpoint, eventsProcessedAfterRestart = PFeventsProcessedAfterRestart,
                                                                                                                           checkpointStatus = PFcheckpointStatus, bufferedEvents = PFbufferedEvents, writePendingEventsBeforeCheckpoint = PFwritePendingEventsBeforeCheckpoint,
                                                                                                                           writePendingEventsAfterCheckpoint = PFwritePendingEventsAfterCheckpoint},
                                                                  #'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = NFcoreProcessingTime, version = NFversion, epoch = NFepoch, effectiveName = NFeffectiveName, writesInProgress = NFwritesInProgress,
                                                                                                                           readsInProgress = NFreadsInProgress, partitionsCached = NFpartitionsCached, status = NFstatus, stateReason = NFstateReason, name = NFname, mode = NFmode, position = NFposition,
                                                                                                                           progress = NFprogress, lastCheckpoint = NFlastCheckpoint, eventsProcessedAfterRestart = NFeventsProcessedAfterRestart, checkpointStatus = NFcheckpointStatus,
                                                                                                                           bufferedEvents = NFbufferedEvents, writePendingEventsBeforeCheckpoint = NFwritePendingEventsBeforeCheckpoint,
                                                                                                                           writePendingEventsAfterCheckpoint = NFwritePendingEventsAfterCheckpoint},
                                                                  _) ->
    #'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime =
                                                                 if NFcoreProcessingTime =:= undefined -> PFcoreProcessingTime;
                                                                    true -> NFcoreProcessingTime
                                                                 end,
                                                             version =
                                                                 if NFversion =:= undefined -> PFversion;
                                                                    true -> NFversion
                                                                 end,
                                                             epoch =
                                                                 if NFepoch =:= undefined -> PFepoch;
                                                                    true -> NFepoch
                                                                 end,
                                                             effectiveName =
                                                                 if NFeffectiveName =:= undefined -> PFeffectiveName;
                                                                    true -> NFeffectiveName
                                                                 end,
                                                             writesInProgress =
                                                                 if NFwritesInProgress =:= undefined -> PFwritesInProgress;
                                                                    true -> NFwritesInProgress
                                                                 end,
                                                             readsInProgress =
                                                                 if NFreadsInProgress =:= undefined -> PFreadsInProgress;
                                                                    true -> NFreadsInProgress
                                                                 end,
                                                             partitionsCached =
                                                                 if NFpartitionsCached =:= undefined -> PFpartitionsCached;
                                                                    true -> NFpartitionsCached
                                                                 end,
                                                             status =
                                                                 if NFstatus =:= undefined -> PFstatus;
                                                                    true -> NFstatus
                                                                 end,
                                                             stateReason =
                                                                 if NFstateReason =:= undefined -> PFstateReason;
                                                                    true -> NFstateReason
                                                                 end,
                                                             name =
                                                                 if NFname =:= undefined -> PFname;
                                                                    true -> NFname
                                                                 end,
                                                             mode =
                                                                 if NFmode =:= undefined -> PFmode;
                                                                    true -> NFmode
                                                                 end,
                                                             position =
                                                                 if NFposition =:= undefined -> PFposition;
                                                                    true -> NFposition
                                                                 end,
                                                             progress =
                                                                 if NFprogress =:= undefined -> PFprogress;
                                                                    true -> NFprogress
                                                                 end,
                                                             lastCheckpoint =
                                                                 if NFlastCheckpoint =:= undefined -> PFlastCheckpoint;
                                                                    true -> NFlastCheckpoint
                                                                 end,
                                                             eventsProcessedAfterRestart =
                                                                 if NFeventsProcessedAfterRestart =:= undefined -> PFeventsProcessedAfterRestart;
                                                                    true -> NFeventsProcessedAfterRestart
                                                                 end,
                                                             checkpointStatus =
                                                                 if NFcheckpointStatus =:= undefined -> PFcheckpointStatus;
                                                                    true -> NFcheckpointStatus
                                                                 end,
                                                             bufferedEvents =
                                                                 if NFbufferedEvents =:= undefined -> PFbufferedEvents;
                                                                    true -> NFbufferedEvents
                                                                 end,
                                                             writePendingEventsBeforeCheckpoint =
                                                                 if NFwritePendingEventsBeforeCheckpoint =:= undefined -> PFwritePendingEventsBeforeCheckpoint;
                                                                    true -> NFwritePendingEventsBeforeCheckpoint
                                                                 end,
                                                             writePendingEventsAfterCheckpoint =
                                                                 if NFwritePendingEventsAfterCheckpoint =:= undefined -> PFwritePendingEventsAfterCheckpoint;
                                                                    true -> NFwritePendingEventsAfterCheckpoint
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StatisticsResp'/3}).
'merge_msg_event_store.client.projections.StatisticsResp'(#'event_store.client.projections.StatisticsResp'{details = PFdetails}, #'event_store.client.projections.StatisticsResp'{details = NFdetails}, TrUserData) ->
    #'event_store.client.projections.StatisticsResp'{details =
                                                         if PFdetails /= undefined, NFdetails /= undefined -> 'merge_msg_event_store.client.projections.StatisticsResp.Details'(PFdetails, NFdetails, TrUserData);
                                                            PFdetails == undefined -> NFdetails;
                                                            NFdetails == undefined -> PFdetails
                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StateReq.Options'/3}).
'merge_msg_event_store.client.projections.StateReq.Options'(#'event_store.client.projections.StateReq.Options'{name = PFname, partition = PFpartition}, #'event_store.client.projections.StateReq.Options'{name = NFname, partition = NFpartition}, _) ->
    #'event_store.client.projections.StateReq.Options'{name =
                                                           if NFname =:= undefined -> PFname;
                                                              true -> NFname
                                                           end,
                                                       partition =
                                                           if NFpartition =:= undefined -> PFpartition;
                                                              true -> NFpartition
                                                           end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StateReq'/3}).
'merge_msg_event_store.client.projections.StateReq'(#'event_store.client.projections.StateReq'{options = PFoptions}, #'event_store.client.projections.StateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.StateReq'{options =
                                                   if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.StateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                      PFoptions == undefined -> NFoptions;
                                                      NFoptions == undefined -> PFoptions
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.StateResp'/3}).
'merge_msg_event_store.client.projections.StateResp'(#'event_store.client.projections.StateResp'{state = PFstate}, #'event_store.client.projections.StateResp'{state = NFstate}, TrUserData) ->
    #'event_store.client.projections.StateResp'{state =
                                                    if PFstate /= undefined, NFstate /= undefined -> 'merge_msg_google.protobuf.Value'(PFstate, NFstate, TrUserData);
                                                       PFstate == undefined -> NFstate;
                                                       NFstate == undefined -> PFstate
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResultReq.Options'/3}).
'merge_msg_event_store.client.projections.ResultReq.Options'(#'event_store.client.projections.ResultReq.Options'{name = PFname, partition = PFpartition}, #'event_store.client.projections.ResultReq.Options'{name = NFname, partition = NFpartition},
                                                             _) ->
    #'event_store.client.projections.ResultReq.Options'{name =
                                                            if NFname =:= undefined -> PFname;
                                                               true -> NFname
                                                            end,
                                                        partition =
                                                            if NFpartition =:= undefined -> PFpartition;
                                                               true -> NFpartition
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResultReq'/3}).
'merge_msg_event_store.client.projections.ResultReq'(#'event_store.client.projections.ResultReq'{options = PFoptions}, #'event_store.client.projections.ResultReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.ResultReq'{options =
                                                    if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.ResultReq.Options'(PFoptions, NFoptions, TrUserData);
                                                       PFoptions == undefined -> NFoptions;
                                                       NFoptions == undefined -> PFoptions
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResultResp'/3}).
'merge_msg_event_store.client.projections.ResultResp'(#'event_store.client.projections.ResultResp'{result = PFresult}, #'event_store.client.projections.ResultResp'{result = NFresult}, TrUserData) ->
    #'event_store.client.projections.ResultResp'{result =
                                                     if PFresult /= undefined, NFresult /= undefined -> 'merge_msg_google.protobuf.Value'(PFresult, NFresult, TrUserData);
                                                        PFresult == undefined -> NFresult;
                                                        NFresult == undefined -> PFresult
                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResetReq.Options'/3}).
'merge_msg_event_store.client.projections.ResetReq.Options'(#'event_store.client.projections.ResetReq.Options'{name = PFname, write_checkpoint = PFwrite_checkpoint},
                                                            #'event_store.client.projections.ResetReq.Options'{name = NFname, write_checkpoint = NFwrite_checkpoint}, _) ->
    #'event_store.client.projections.ResetReq.Options'{name =
                                                           if NFname =:= undefined -> PFname;
                                                              true -> NFname
                                                           end,
                                                       write_checkpoint =
                                                           if NFwrite_checkpoint =:= undefined -> PFwrite_checkpoint;
                                                              true -> NFwrite_checkpoint
                                                           end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResetReq'/3}).
'merge_msg_event_store.client.projections.ResetReq'(#'event_store.client.projections.ResetReq'{options = PFoptions}, #'event_store.client.projections.ResetReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.ResetReq'{options =
                                                   if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.ResetReq.Options'(PFoptions, NFoptions, TrUserData);
                                                      PFoptions == undefined -> NFoptions;
                                                      NFoptions == undefined -> PFoptions
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.ResetResp'/3}).
'merge_msg_event_store.client.projections.ResetResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.EnableReq.Options'/3}).
'merge_msg_event_store.client.projections.EnableReq.Options'(#'event_store.client.projections.EnableReq.Options'{name = PFname}, #'event_store.client.projections.EnableReq.Options'{name = NFname}, _) ->
    #'event_store.client.projections.EnableReq.Options'{name =
                                                            if NFname =:= undefined -> PFname;
                                                               true -> NFname
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.EnableReq'/3}).
'merge_msg_event_store.client.projections.EnableReq'(#'event_store.client.projections.EnableReq'{options = PFoptions}, #'event_store.client.projections.EnableReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.EnableReq'{options =
                                                    if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.EnableReq.Options'(PFoptions, NFoptions, TrUserData);
                                                       PFoptions == undefined -> NFoptions;
                                                       NFoptions == undefined -> PFoptions
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.EnableResp'/3}).
'merge_msg_event_store.client.projections.EnableResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DisableReq.Options'/3}).
'merge_msg_event_store.client.projections.DisableReq.Options'(#'event_store.client.projections.DisableReq.Options'{name = PFname, write_checkpoint = PFwrite_checkpoint},
                                                              #'event_store.client.projections.DisableReq.Options'{name = NFname, write_checkpoint = NFwrite_checkpoint}, _) ->
    #'event_store.client.projections.DisableReq.Options'{name =
                                                             if NFname =:= undefined -> PFname;
                                                                true -> NFname
                                                             end,
                                                         write_checkpoint =
                                                             if NFwrite_checkpoint =:= undefined -> PFwrite_checkpoint;
                                                                true -> NFwrite_checkpoint
                                                             end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DisableReq'/3}).
'merge_msg_event_store.client.projections.DisableReq'(#'event_store.client.projections.DisableReq'{options = PFoptions}, #'event_store.client.projections.DisableReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.projections.DisableReq'{options =
                                                     if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.projections.DisableReq.Options'(PFoptions, NFoptions, TrUserData);
                                                        PFoptions == undefined -> NFoptions;
                                                        NFoptions == undefined -> PFoptions
                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.projections.DisableResp'/3}).
'merge_msg_event_store.client.projections.DisableResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Struct'/3}).
'merge_msg_google.protobuf.Struct'(#'google.protobuf.Struct'{fields = PFfields}, #'google.protobuf.Struct'{fields = NFfields}, TrUserData) ->
    #'google.protobuf.Struct'{fields =
                                  if PFfields /= undefined, NFfields /= undefined -> 'tr_merge_google.protobuf.Struct.fields'(PFfields, NFfields, TrUserData);
                                     PFfields == undefined -> NFfields;
                                     NFfields == undefined -> PFfields
                                  end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Value'/3}).
'merge_msg_google.protobuf.Value'(#'google.protobuf.Value'{kind = PFkind}, #'google.protobuf.Value'{kind = NFkind}, TrUserData) ->
    #'google.protobuf.Value'{kind =
                                 case {PFkind, NFkind} of
                                     {{struct_value, OPFkind}, {struct_value, ONFkind}} -> {struct_value, 'merge_msg_google.protobuf.Struct'(OPFkind, ONFkind, TrUserData)};
                                     {{list_value, OPFkind}, {list_value, ONFkind}} -> {list_value, 'merge_msg_google.protobuf.ListValue'(OPFkind, ONFkind, TrUserData)};
                                     {_, undefined} -> PFkind;
                                     _ -> NFkind
                                 end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.ListValue'/3}).
'merge_msg_google.protobuf.ListValue'(#'google.protobuf.ListValue'{values = PFvalues}, #'google.protobuf.ListValue'{values = NFvalues}, TrUserData) ->
    #'google.protobuf.ListValue'{values =
                                     if PFvalues /= undefined, NFvalues /= undefined -> 'erlang_++'(PFvalues, NFvalues, TrUserData);
                                        PFvalues == undefined -> NFvalues;
                                        NFvalues == undefined -> PFvalues
                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID.Structured'/3}).
'merge_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = PFmost_significant_bits, least_significant_bits = PFleast_significant_bits},
                                               #'event_store.client.UUID.Structured'{most_significant_bits = NFmost_significant_bits, least_significant_bits = NFleast_significant_bits}, _) ->
    #'event_store.client.UUID.Structured'{most_significant_bits =
                                              if NFmost_significant_bits =:= undefined -> PFmost_significant_bits;
                                                 true -> NFmost_significant_bits
                                              end,
                                          least_significant_bits =
                                              if NFleast_significant_bits =:= undefined -> PFleast_significant_bits;
                                                 true -> NFleast_significant_bits
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID'/3}).
'merge_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = PFvalue}, #'event_store.client.UUID'{value = NFvalue}, TrUserData) ->
    #'event_store.client.UUID'{value =
                                   case {PFvalue, NFvalue} of
                                       {{structured, OPFvalue}, {structured, ONFvalue}} -> {structured, 'merge_msg_event_store.client.UUID.Structured'(OPFvalue, ONFvalue, TrUserData)};
                                       {_, undefined} -> PFvalue;
                                       _ -> NFvalue
                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Empty'/3}).
'merge_msg_event_store.client.Empty'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamIdentifier'/3}).
'merge_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = PFstream_name}, #'event_store.client.StreamIdentifier'{stream_name = NFstream_name}, _) ->
    #'event_store.client.StreamIdentifier'{stream_name =
                                               if NFstream_name =:= undefined -> PFstream_name;
                                                  true -> NFstream_name
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AllStreamPosition'/3}).
'merge_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                 #'event_store.client.AllStreamPosition'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.AllStreamPosition'{commit_position =
                                                if NFcommit_position =:= undefined -> PFcommit_position;
                                                   true -> NFcommit_position
                                                end,
                                            prepare_position =
                                                if NFprepare_position =:= undefined -> PFprepare_position;
                                                   true -> NFprepare_position
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.WrongExpectedVersion'/3}).
'merge_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = PFcurrent_stream_revision_option, expected_stream_position_option = PFexpected_stream_position_option},
                                                    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = NFcurrent_stream_revision_option, expected_stream_position_option = NFexpected_stream_position_option}, TrUserData) ->
    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option =
                                                   case {PFcurrent_stream_revision_option, NFcurrent_stream_revision_option} of
                                                       {{current_no_stream, OPFcurrent_stream_revision_option}, {current_no_stream, ONFcurrent_stream_revision_option}} ->
                                                           {current_no_stream, 'merge_msg_google.protobuf.Empty'(OPFcurrent_stream_revision_option, ONFcurrent_stream_revision_option, TrUserData)};
                                                       {_, undefined} -> PFcurrent_stream_revision_option;
                                                       _ -> NFcurrent_stream_revision_option
                                                   end,
                                               expected_stream_position_option =
                                                   case {PFexpected_stream_position_option, NFexpected_stream_position_option} of
                                                       {{expected_any, OPFexpected_stream_position_option}, {expected_any, ONFexpected_stream_position_option}} -> {expected_any, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_stream_exists, OPFexpected_stream_position_option}, {expected_stream_exists, ONFexpected_stream_position_option}} ->
                                                           {expected_stream_exists, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_no_stream, OPFexpected_stream_position_option}, {expected_no_stream, ONFexpected_stream_position_option}} ->
                                                           {expected_no_stream, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {_, undefined} -> PFexpected_stream_position_option;
                                                       _ -> NFexpected_stream_position_option
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AccessDenied'/3}).
'merge_msg_event_store.client.AccessDenied'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamDeleted'/3}).
'merge_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = PFstream_identifier}, #'event_store.client.StreamDeleted'{stream_identifier = NFstream_identifier}, TrUserData) ->
    #'event_store.client.StreamDeleted'{stream_identifier =
                                            if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                               PFstream_identifier == undefined -> NFstream_identifier;
                                               NFstream_identifier == undefined -> PFstream_identifier
                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Timeout'/3}).
'merge_msg_event_store.client.Timeout'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Unknown'/3}).
'merge_msg_event_store.client.Unknown'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.InvalidTransaction'/3}).
'merge_msg_event_store.client.InvalidTransaction'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'merge_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = PFmaxAppendSize}, #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = NFmaxAppendSize}, _) ->
    #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize =
                                                        if NFmaxAppendSize =:= undefined -> PFmaxAppendSize;
                                                           true -> NFmaxAppendSize
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.BadRequest'/3}).
'merge_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = PFmessage}, #'event_store.client.BadRequest'{message = NFmessage}, _) ->
    #'event_store.client.BadRequest'{message =
                                         if NFmessage =:= undefined -> PFmessage;
                                            true -> NFmessage
                                         end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Empty'/3}).
'merge_msg_google.protobuf.Empty'(_Prev, New, _TrUserData) -> New.


verify_msg(Msg) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), []);
verify_msg(X) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName) when is_atom(MsgName) -> verify_msg(Msg, MsgName, []);
verify_msg(Msg, Opts) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), Opts);
verify_msg(X, _Opts) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.projections.CreateReq.Options' -> 'v_msg_event_store.client.projections.CreateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.CreateReq.Options.Continuous' -> 'v_msg_event_store.client.projections.CreateReq.Options.Continuous'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.CreateReq.Options.Transient' -> 'v_msg_event_store.client.projections.CreateReq.Options.Transient'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.CreateReq' -> 'v_msg_event_store.client.projections.CreateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.CreateResp' -> 'v_msg_event_store.client.projections.CreateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.UpdateReq.Options' -> 'v_msg_event_store.client.projections.UpdateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.UpdateReq' -> 'v_msg_event_store.client.projections.UpdateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.UpdateResp' -> 'v_msg_event_store.client.projections.UpdateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DeleteReq.Options' -> 'v_msg_event_store.client.projections.DeleteReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DeleteReq' -> 'v_msg_event_store.client.projections.DeleteReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DeleteResp' -> 'v_msg_event_store.client.projections.DeleteResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StatisticsReq.Options' -> 'v_msg_event_store.client.projections.StatisticsReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StatisticsReq' -> 'v_msg_event_store.client.projections.StatisticsReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StatisticsResp.Details' -> 'v_msg_event_store.client.projections.StatisticsResp.Details'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StatisticsResp' -> 'v_msg_event_store.client.projections.StatisticsResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StateReq.Options' -> 'v_msg_event_store.client.projections.StateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StateReq' -> 'v_msg_event_store.client.projections.StateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.StateResp' -> 'v_msg_event_store.client.projections.StateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResultReq.Options' -> 'v_msg_event_store.client.projections.ResultReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResultReq' -> 'v_msg_event_store.client.projections.ResultReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResultResp' -> 'v_msg_event_store.client.projections.ResultResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResetReq.Options' -> 'v_msg_event_store.client.projections.ResetReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResetReq' -> 'v_msg_event_store.client.projections.ResetReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.ResetResp' -> 'v_msg_event_store.client.projections.ResetResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.EnableReq.Options' -> 'v_msg_event_store.client.projections.EnableReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.EnableReq' -> 'v_msg_event_store.client.projections.EnableReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.EnableResp' -> 'v_msg_event_store.client.projections.EnableResp'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DisableReq.Options' -> 'v_msg_event_store.client.projections.DisableReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DisableReq' -> 'v_msg_event_store.client.projections.DisableReq'(Msg, [MsgName], TrUserData);
        'event_store.client.projections.DisableResp' -> 'v_msg_event_store.client.projections.DisableResp'(Msg, [MsgName], TrUserData);
        'google.protobuf.Struct' -> 'v_msg_google.protobuf.Struct'(Msg, [MsgName], TrUserData);
        'google.protobuf.Value' -> 'v_msg_google.protobuf.Value'(Msg, [MsgName], TrUserData);
        'google.protobuf.ListValue' -> 'v_msg_google.protobuf.ListValue'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID.Structured' -> 'v_msg_event_store.client.UUID.Structured'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID' -> 'v_msg_event_store.client.UUID'(Msg, [MsgName], TrUserData);
        'event_store.client.Empty' -> 'v_msg_event_store.client.Empty'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamIdentifier' -> 'v_msg_event_store.client.StreamIdentifier'(Msg, [MsgName], TrUserData);
        'event_store.client.AllStreamPosition' -> 'v_msg_event_store.client.AllStreamPosition'(Msg, [MsgName], TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'v_msg_event_store.client.WrongExpectedVersion'(Msg, [MsgName], TrUserData);
        'event_store.client.AccessDenied' -> 'v_msg_event_store.client.AccessDenied'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamDeleted' -> 'v_msg_event_store.client.StreamDeleted'(Msg, [MsgName], TrUserData);
        'event_store.client.Timeout' -> 'v_msg_event_store.client.Timeout'(Msg, [MsgName], TrUserData);
        'event_store.client.Unknown' -> 'v_msg_event_store.client.Unknown'(Msg, [MsgName], TrUserData);
        'event_store.client.InvalidTransaction' -> 'v_msg_event_store.client.InvalidTransaction'(Msg, [MsgName], TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'v_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, [MsgName], TrUserData);
        'event_store.client.BadRequest' -> 'v_msg_event_store.client.BadRequest'(Msg, [MsgName], TrUserData);
        'google.protobuf.Empty' -> 'v_msg_google.protobuf.Empty'(Msg, [MsgName], TrUserData);
        _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,'v_msg_event_store.client.projections.CreateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.CreateReq.Options'/3}).
'v_msg_event_store.client.projections.CreateReq.Options'(#'event_store.client.projections.CreateReq.Options'{mode = F1, query = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {one_time, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [one_time, mode | Path], TrUserData);
        {transient, OF1} -> 'v_msg_event_store.client.projections.CreateReq.Options.Transient'(OF1, [transient, mode | Path], TrUserData);
        {continuous, OF1} -> 'v_msg_event_store.client.projections.CreateReq.Options.Continuous'(OF1, [continuous, mode | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [mode | Path])
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [query | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.CreateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.CreateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.CreateReq.Options.Continuous'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.CreateReq.Options.Continuous'/3}).
'v_msg_event_store.client.projections.CreateReq.Options.Continuous'(#'event_store.client.projections.CreateReq.Options.Continuous'{name = F1, track_emitted_streams = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_bool(F2, [track_emitted_streams | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.CreateReq.Options.Continuous'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.CreateReq.Options.Continuous'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.CreateReq.Options.Transient'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.CreateReq.Options.Transient'/3}).
'v_msg_event_store.client.projections.CreateReq.Options.Transient'(#'event_store.client.projections.CreateReq.Options.Transient'{name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.CreateReq.Options.Transient'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.CreateReq.Options.Transient'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.CreateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.CreateReq'/3}).
'v_msg_event_store.client.projections.CreateReq'(#'event_store.client.projections.CreateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.CreateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.CreateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.CreateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.CreateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.CreateResp'/3}).
'v_msg_event_store.client.projections.CreateResp'(#'event_store.client.projections.CreateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.CreateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.CreateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.UpdateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.UpdateReq.Options'/3}).
'v_msg_event_store.client.projections.UpdateReq.Options'(#'event_store.client.projections.UpdateReq.Options'{name = F1, query = F2, emit_option = F3}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [query | Path], TrUserData)
    end,
    case F3 of
        undefined -> ok;
        {emit_enabled, OF3} -> v_type_bool(OF3, [emit_enabled, emit_option | Path], TrUserData);
        {no_emit_options, OF3} -> 'v_msg_event_store.client.Empty'(OF3, [no_emit_options, emit_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F3, [emit_option | Path])
    end,
    ok;
'v_msg_event_store.client.projections.UpdateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.UpdateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.UpdateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.UpdateReq'/3}).
'v_msg_event_store.client.projections.UpdateReq'(#'event_store.client.projections.UpdateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.UpdateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.UpdateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.UpdateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.UpdateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.UpdateResp'/3}).
'v_msg_event_store.client.projections.UpdateResp'(#'event_store.client.projections.UpdateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.UpdateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.UpdateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DeleteReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DeleteReq.Options'/3}).
'v_msg_event_store.client.projections.DeleteReq.Options'(#'event_store.client.projections.DeleteReq.Options'{name = F1, delete_emitted_streams = F2, delete_state_stream = F3, delete_checkpoint_stream = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_bool(F2, [delete_emitted_streams | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_bool(F3, [delete_state_stream | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_bool(F4, [delete_checkpoint_stream | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.DeleteReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DeleteReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DeleteReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DeleteReq'/3}).
'v_msg_event_store.client.projections.DeleteReq'(#'event_store.client.projections.DeleteReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.DeleteReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.DeleteReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DeleteReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DeleteResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DeleteResp'/3}).
'v_msg_event_store.client.projections.DeleteResp'(#'event_store.client.projections.DeleteResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.DeleteResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DeleteResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StatisticsReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StatisticsReq.Options'/3}).
'v_msg_event_store.client.projections.StatisticsReq.Options'(#'event_store.client.projections.StatisticsReq.Options'{mode = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {name, OF1} -> v_type_string(OF1, [name, mode | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [all, mode | Path], TrUserData);
        {transient, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [transient, mode | Path], TrUserData);
        {continuous, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [continuous, mode | Path], TrUserData);
        {one_time, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [one_time, mode | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [mode | Path])
    end,
    ok;
'v_msg_event_store.client.projections.StatisticsReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StatisticsReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StatisticsReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StatisticsReq'/3}).
'v_msg_event_store.client.projections.StatisticsReq'(#'event_store.client.projections.StatisticsReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.StatisticsReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StatisticsReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StatisticsReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StatisticsResp.Details'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StatisticsResp.Details'/3}).
'v_msg_event_store.client.projections.StatisticsResp.Details'(#'event_store.client.projections.StatisticsResp.Details'{coreProcessingTime = F1, version = F2, epoch = F3, effectiveName = F4, writesInProgress = F5, readsInProgress = F6,
                                                                                                                       partitionsCached = F7, status = F8, stateReason = F9, name = F10, mode = F11, position = F12, progress = F13, lastCheckpoint = F14, eventsProcessedAfterRestart = F15,
                                                                                                                       checkpointStatus = F16, bufferedEvents = F17, writePendingEventsBeforeCheckpoint = F18, writePendingEventsAfterCheckpoint = F19},
                                                              Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [coreProcessingTime | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int64(F2, [version | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_int64(F3, [epoch | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_string(F4, [effectiveName | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_int32(F5, [writesInProgress | Path], TrUserData)
    end,
    if F6 == undefined -> ok;
       true -> v_type_int32(F6, [readsInProgress | Path], TrUserData)
    end,
    if F7 == undefined -> ok;
       true -> v_type_int32(F7, [partitionsCached | Path], TrUserData)
    end,
    if F8 == undefined -> ok;
       true -> v_type_string(F8, [status | Path], TrUserData)
    end,
    if F9 == undefined -> ok;
       true -> v_type_string(F9, [stateReason | Path], TrUserData)
    end,
    if F10 == undefined -> ok;
       true -> v_type_string(F10, [name | Path], TrUserData)
    end,
    if F11 == undefined -> ok;
       true -> v_type_string(F11, [mode | Path], TrUserData)
    end,
    if F12 == undefined -> ok;
       true -> v_type_string(F12, [position | Path], TrUserData)
    end,
    if F13 == undefined -> ok;
       true -> v_type_float(F13, [progress | Path], TrUserData)
    end,
    if F14 == undefined -> ok;
       true -> v_type_string(F14, [lastCheckpoint | Path], TrUserData)
    end,
    if F15 == undefined -> ok;
       true -> v_type_int64(F15, [eventsProcessedAfterRestart | Path], TrUserData)
    end,
    if F16 == undefined -> ok;
       true -> v_type_string(F16, [checkpointStatus | Path], TrUserData)
    end,
    if F17 == undefined -> ok;
       true -> v_type_int64(F17, [bufferedEvents | Path], TrUserData)
    end,
    if F18 == undefined -> ok;
       true -> v_type_int32(F18, [writePendingEventsBeforeCheckpoint | Path], TrUserData)
    end,
    if F19 == undefined -> ok;
       true -> v_type_int32(F19, [writePendingEventsAfterCheckpoint | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StatisticsResp.Details'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StatisticsResp.Details'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StatisticsResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StatisticsResp'/3}).
'v_msg_event_store.client.projections.StatisticsResp'(#'event_store.client.projections.StatisticsResp'{details = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.StatisticsResp.Details'(F1, [details | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StatisticsResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StatisticsResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StateReq.Options'/3}).
'v_msg_event_store.client.projections.StateReq.Options'(#'event_store.client.projections.StateReq.Options'{name = F1, partition = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [partition | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StateReq'/3}).
'v_msg_event_store.client.projections.StateReq'(#'event_store.client.projections.StateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.StateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.StateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.StateResp'/3}).
'v_msg_event_store.client.projections.StateResp'(#'event_store.client.projections.StateResp'{state = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_google.protobuf.Value'(F1, [state | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.StateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.StateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResultReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResultReq.Options'/3}).
'v_msg_event_store.client.projections.ResultReq.Options'(#'event_store.client.projections.ResultReq.Options'{name = F1, partition = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [partition | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.ResultReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResultReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResultReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResultReq'/3}).
'v_msg_event_store.client.projections.ResultReq'(#'event_store.client.projections.ResultReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.ResultReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.ResultReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResultReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResultResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResultResp'/3}).
'v_msg_event_store.client.projections.ResultResp'(#'event_store.client.projections.ResultResp'{result = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_google.protobuf.Value'(F1, [result | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.ResultResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResultResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResetReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResetReq.Options'/3}).
'v_msg_event_store.client.projections.ResetReq.Options'(#'event_store.client.projections.ResetReq.Options'{name = F1, write_checkpoint = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_bool(F2, [write_checkpoint | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.ResetReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResetReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResetReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResetReq'/3}).
'v_msg_event_store.client.projections.ResetReq'(#'event_store.client.projections.ResetReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.ResetReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.ResetReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResetReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.ResetResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.ResetResp'/3}).
'v_msg_event_store.client.projections.ResetResp'(#'event_store.client.projections.ResetResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.ResetResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.ResetResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.EnableReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.EnableReq.Options'/3}).
'v_msg_event_store.client.projections.EnableReq.Options'(#'event_store.client.projections.EnableReq.Options'{name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.EnableReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.EnableReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.EnableReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.EnableReq'/3}).
'v_msg_event_store.client.projections.EnableReq'(#'event_store.client.projections.EnableReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.EnableReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.EnableReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.EnableReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.EnableResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.EnableResp'/3}).
'v_msg_event_store.client.projections.EnableResp'(#'event_store.client.projections.EnableResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.EnableResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.EnableResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DisableReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DisableReq.Options'/3}).
'v_msg_event_store.client.projections.DisableReq.Options'(#'event_store.client.projections.DisableReq.Options'{name = F1, write_checkpoint = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_bool(F2, [write_checkpoint | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.DisableReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DisableReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DisableReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DisableReq'/3}).
'v_msg_event_store.client.projections.DisableReq'(#'event_store.client.projections.DisableReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.projections.DisableReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.projections.DisableReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DisableReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.projections.DisableResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.projections.DisableResp'/3}).
'v_msg_event_store.client.projections.DisableResp'(#'event_store.client.projections.DisableResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.projections.DisableResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.projections.DisableResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Struct'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Struct'/3}).
'v_msg_google.protobuf.Struct'(#'google.protobuf.Struct'{fields = F1}, Path, TrUserData) ->
    'v_map<string,google.protobuf.Value>'(F1, [fields | Path], TrUserData),
    ok;
'v_msg_google.protobuf.Struct'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Struct'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Value'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Value'/3}).
'v_msg_google.protobuf.Value'(#'google.protobuf.Value'{kind = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {null_value, OF1} -> 'v_enum_google.protobuf.NullValue'(OF1, [null_value, kind | Path], TrUserData);
        {number_value, OF1} -> v_type_double(OF1, [number_value, kind | Path], TrUserData);
        {string_value, OF1} -> v_type_string(OF1, [string_value, kind | Path], TrUserData);
        {bool_value, OF1} -> v_type_bool(OF1, [bool_value, kind | Path], TrUserData);
        {struct_value, OF1} -> 'v_msg_google.protobuf.Struct'(OF1, [struct_value, kind | Path], TrUserData);
        {list_value, OF1} -> 'v_msg_google.protobuf.ListValue'(OF1, [list_value, kind | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [kind | Path])
    end,
    ok;
'v_msg_google.protobuf.Value'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Value'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.ListValue'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.ListValue'/3}).
'v_msg_google.protobuf.ListValue'(#'google.protobuf.ListValue'{values = F1}, Path, TrUserData) ->
    if is_list(F1) ->
           _ = ['v_msg_google.protobuf.Value'(Elem, [values | Path], TrUserData) || Elem <- F1],
           ok;
       true -> mk_type_error({invalid_list_of, {msg, 'google.protobuf.Value'}}, F1, [values | Path])
    end,
    ok;
'v_msg_google.protobuf.ListValue'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.ListValue'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID.Structured'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID.Structured'/3}).
'v_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [most_significant_bits | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int64(F2, [least_significant_bits | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.UUID.Structured'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID.Structured'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID'/3}).
'v_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {structured, OF1} -> 'v_msg_event_store.client.UUID.Structured'(OF1, [structured, value | Path], TrUserData);
        {string, OF1} -> v_type_string(OF1, [string, value | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [value | Path])
    end,
    ok;
'v_msg_event_store.client.UUID'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Empty'/3}).
'v_msg_event_store.client.Empty'(#'event_store.client.Empty'{}, _Path, _) -> ok;
'v_msg_event_store.client.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamIdentifier'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamIdentifier'/3}).
'v_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bytes(F1, [stream_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamIdentifier'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamIdentifier'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AllStreamPosition'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AllStreamPosition'/3}).
'v_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.AllStreamPosition'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AllStreamPosition'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
'v_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_stream_revision, OF1} -> v_type_uint64(OF1, [current_stream_revision, current_stream_revision_option | Path], TrUserData);
        {current_no_stream, OF1} -> 'v_msg_google.protobuf.Empty'(OF1, [current_no_stream, current_stream_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_stream_revision_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {expected_stream_position, OF2} -> v_type_uint64(OF2, [expected_stream_position, expected_stream_position_option | Path], TrUserData);
        {expected_any, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_any, expected_stream_position_option | Path], TrUserData);
        {expected_stream_exists, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_stream_exists, expected_stream_position_option | Path], TrUserData);
        {expected_no_stream, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_no_stream, expected_stream_position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_position_option | Path])
    end,
    ok;
'v_msg_event_store.client.WrongExpectedVersion'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.WrongExpectedVersion'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AccessDenied'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AccessDenied'/3}).
'v_msg_event_store.client.AccessDenied'(#'event_store.client.AccessDenied'{}, _Path, _) -> ok;
'v_msg_event_store.client.AccessDenied'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AccessDenied'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamDeleted'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamDeleted'/3}).
'v_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamDeleted'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamDeleted'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Timeout'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Timeout'/3}).
'v_msg_event_store.client.Timeout'(#'event_store.client.Timeout'{}, _Path, _) -> ok;
'v_msg_event_store.client.Timeout'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Timeout'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Unknown'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Unknown'/3}).
'v_msg_event_store.client.Unknown'(#'event_store.client.Unknown'{}, _Path, _) -> ok;
'v_msg_event_store.client.Unknown'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Unknown'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.InvalidTransaction'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.InvalidTransaction'/3}).
'v_msg_event_store.client.InvalidTransaction'(#'event_store.client.InvalidTransaction'{}, _Path, _) -> ok;
'v_msg_event_store.client.InvalidTransaction'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.InvalidTransaction'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'v_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint32(F1, [maxAppendSize | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.MaximumAppendSizeExceeded'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.MaximumAppendSizeExceeded'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.BadRequest'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.BadRequest'/3}).
'v_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [message | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.BadRequest'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.BadRequest'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Empty'/3}).
'v_msg_google.protobuf.Empty'(#'google.protobuf.Empty'{}, _Path, _) -> ok;
'v_msg_google.protobuf.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_enum_google.protobuf.NullValue'/3}).
-dialyzer({nowarn_function,'v_enum_google.protobuf.NullValue'/3}).
'v_enum_google.protobuf.NullValue'('NULL_VALUE', _Path, _TrUserData) -> ok;
'v_enum_google.protobuf.NullValue'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_google.protobuf.NullValue'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'google.protobuf.NullValue'}, X, Path).

-compile({nowarn_unused_function,v_type_int32/3}).
-dialyzer({nowarn_function,v_type_int32/3}).
v_type_int32(N, _Path, _TrUserData) when -2147483648 =< N, N =< 2147483647 -> ok;
v_type_int32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int32, signed, 32}, N, Path);
v_type_int32(X, Path, _TrUserData) -> mk_type_error({bad_integer, int32, signed, 32}, X, Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData) when -9223372036854775808 =< N, N =< 9223372036854775807 -> ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int64, signed, 64}, N, Path);
v_type_int64(X, Path, _TrUserData) -> mk_type_error({bad_integer, int64, signed, 64}, X, Path).

-compile({nowarn_unused_function,v_type_uint32/3}).
-dialyzer({nowarn_function,v_type_uint32/3}).
v_type_uint32(N, _Path, _TrUserData) when 0 =< N, N =< 4294967295 -> ok;
v_type_uint32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint32, unsigned, 32}, N, Path);
v_type_uint32(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint32, unsigned, 32}, X, Path).

-compile({nowarn_unused_function,v_type_uint64/3}).
-dialyzer({nowarn_function,v_type_uint64/3}).
v_type_uint64(N, _Path, _TrUserData) when 0 =< N, N =< 18446744073709551615 -> ok;
v_type_uint64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint64, unsigned, 64}, N, Path);
v_type_uint64(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint64, unsigned, 64}, X, Path).

-compile({nowarn_unused_function,v_type_bool/3}).
-dialyzer({nowarn_function,v_type_bool/3}).
v_type_bool(false, _Path, _TrUserData) -> ok;
v_type_bool(true, _Path, _TrUserData) -> ok;
v_type_bool(0, _Path, _TrUserData) -> ok;
v_type_bool(1, _Path, _TrUserData) -> ok;
v_type_bool(X, Path, _TrUserData) -> mk_type_error(bad_boolean_value, X, Path).

-compile({nowarn_unused_function,v_type_float/3}).
-dialyzer({nowarn_function,v_type_float/3}).
v_type_float(N, _Path, _TrUserData) when is_float(N) -> ok;
v_type_float(N, _Path, _TrUserData) when is_integer(N) -> ok;
v_type_float(infinity, _Path, _TrUserData) -> ok;
v_type_float('-infinity', _Path, _TrUserData) -> ok;
v_type_float(nan, _Path, _TrUserData) -> ok;
v_type_float(X, Path, _TrUserData) -> mk_type_error(bad_float_value, X, Path).

-compile({nowarn_unused_function,v_type_double/3}).
-dialyzer({nowarn_function,v_type_double/3}).
v_type_double(N, _Path, _TrUserData) when is_float(N) -> ok;
v_type_double(N, _Path, _TrUserData) when is_integer(N) -> ok;
v_type_double(infinity, _Path, _TrUserData) -> ok;
v_type_double('-infinity', _Path, _TrUserData) -> ok;
v_type_double(nan, _Path, _TrUserData) -> ok;
v_type_double(X, Path, _TrUserData) -> mk_type_error(bad_double_value, X, Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
        B when is_binary(B) -> ok;
        {error, _, _} -> mk_type_error(bad_unicode_string, S, Path)
    catch
        error:badarg -> mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) -> mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,v_type_bytes/3}).
-dialyzer({nowarn_function,v_type_bytes/3}).
v_type_bytes(B, _Path, _TrUserData) when is_binary(B) -> ok;
v_type_bytes(B, _Path, _TrUserData) when is_list(B) -> ok;
v_type_bytes(X, Path, _TrUserData) -> mk_type_error(bad_binary_value, X, Path).

-compile({nowarn_unused_function,'v_map<string,google.protobuf.Value>'/3}).
-dialyzer({nowarn_function,'v_map<string,google.protobuf.Value>'/3}).
'v_map<string,google.protobuf.Value>'(KVs, Path, TrUserData) when is_list(KVs) ->
    [case X of
         {Key, Value} ->
             v_type_string(Key, [key | Path], TrUserData),
             'v_msg_google.protobuf.Value'(Value, [value | Path], TrUserData);
         _ -> mk_type_error(invalid_key_value_tuple, X, Path)
     end
     || X <- KVs],
    ok;
'v_map<string,google.protobuf.Value>'(X, Path, _TrUserData) -> mk_type_error(invalid_list_of_key_value_tuples, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error, {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) -> lists:append(lists:join(".", lists:map(fun atom_to_list/1, lists:reverse(PathR)))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.
-compile({inline,'tr_decode_init_default_google.protobuf.Struct.fields'/2}).
'tr_decode_init_default_google.protobuf.Struct.fields'(_, _) -> mt_empty_map_r().

-compile({inline,'tr_merge_google.protobuf.Struct.fields'/3}).
'tr_merge_google.protobuf.Struct.fields'(X1, X2, _) -> mt_merge_maptuples_r(X1, X2).

-compile({inline,'tr_decode_repeated_finalize_google.protobuf.Struct.fields'/2}).
'tr_decode_repeated_finalize_google.protobuf.Struct.fields'(L, _) -> mt_finalize_items_r(L).

-compile({inline,'tr_decode_repeated_add_elem_google.protobuf.Struct.fields'/3}).
'tr_decode_repeated_add_elem_google.protobuf.Struct.fields'(Elem, L, _) -> mt_add_item_r_verify_value(Elem, L).

-compile({inline,'tr_encode_google.protobuf.Struct.fields[x]'/2}).
'tr_encode_google.protobuf.Struct.fields[x]'(X, _) -> mt_maptuple_to_pseudomsg_r(X, 'map<string,google.protobuf.Value>').

-compile({inline,mt_maptuple_to_pseudomsg_r/2}).
mt_maptuple_to_pseudomsg_r({K, V}, RName) -> {RName, K, V}.


-compile({inline,mt_empty_map_r/0}).
mt_empty_map_r() -> [].

-compile({inline,mt_add_item_r_verify_value/2}).
mt_add_item_r_verify_value({_, _, undefined}, _) -> error({gpb_error, missing_value});
mt_add_item_r_verify_value({_RName, K, V}, Acc) -> [{K, V} | Acc].


-compile({inline,mt_finalize_items_r/1}).
mt_finalize_items_r(Acc) -> mt_finalize_items_r_aux(lists:reverse(Acc), dict:new()).

mt_finalize_items_r_aux([{K, V} | Tl], D) -> mt_finalize_items_r_aux(Tl, dict:store(K, V, D));
mt_finalize_items_r_aux([], D) -> dict:to_list(D).


-compile({inline,mt_merge_maptuples_r/2}).
mt_merge_maptuples_r(L1, L2) -> dict:to_list(dict:merge(fun (_Key, _V1, V2) -> V2 end, dict:from_list(L1), dict:from_list(L2))).




get_msg_defs() ->
    [{{enum, 'google.protobuf.NullValue'}, [{'NULL_VALUE', 0}]},
     {{msg, 'event_store.client.projections.CreateReq.Options'},
      [#gpb_oneof{name = mode, rnum = 2,
                  fields =
                      [#field{name = one_time, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = transient, fnum = 2, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options.Transient'}, occurrence = optional, opts = []},
                       #field{name = continuous, fnum = 3, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options.Continuous'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = query, fnum = 4, rnum = 3, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.CreateReq.Options.Continuous'},
      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = track_emitted_streams, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.CreateReq.Options.Transient'}, [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.CreateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.CreateResp'}, []},
     {{msg, 'event_store.client.projections.UpdateReq.Options'},
      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = query, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #gpb_oneof{name = emit_option, rnum = 4,
                  fields = [#field{name = emit_enabled, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []}, #field{name = no_emit_options, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.projections.UpdateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.UpdateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.UpdateResp'}, []},
     {{msg, 'event_store.client.projections.DeleteReq.Options'},
      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = delete_emitted_streams, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []},
       #field{name = delete_state_stream, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
       #field{name = delete_checkpoint_stream, fnum = 4, rnum = 5, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.DeleteReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.DeleteReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.DeleteResp'}, []},
     {{msg, 'event_store.client.projections.StatisticsReq.Options'},
      [#gpb_oneof{name = mode, rnum = 2,
                  fields =
                      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
                       #field{name = all, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = transient, fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = continuous, fnum = 4, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = one_time, fnum = 5, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.projections.StatisticsReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StatisticsReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.StatisticsResp.Details'},
      [#field{name = coreProcessingTime, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []},
       #field{name = version, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []},
       #field{name = epoch, fnum = 3, rnum = 4, type = int64, occurrence = optional, opts = []},
       #field{name = effectiveName, fnum = 4, rnum = 5, type = string, occurrence = optional, opts = []},
       #field{name = writesInProgress, fnum = 5, rnum = 6, type = int32, occurrence = optional, opts = []},
       #field{name = readsInProgress, fnum = 6, rnum = 7, type = int32, occurrence = optional, opts = []},
       #field{name = partitionsCached, fnum = 7, rnum = 8, type = int32, occurrence = optional, opts = []},
       #field{name = status, fnum = 8, rnum = 9, type = string, occurrence = optional, opts = []},
       #field{name = stateReason, fnum = 9, rnum = 10, type = string, occurrence = optional, opts = []},
       #field{name = name, fnum = 10, rnum = 11, type = string, occurrence = optional, opts = []},
       #field{name = mode, fnum = 11, rnum = 12, type = string, occurrence = optional, opts = []},
       #field{name = position, fnum = 12, rnum = 13, type = string, occurrence = optional, opts = []},
       #field{name = progress, fnum = 13, rnum = 14, type = float, occurrence = optional, opts = []},
       #field{name = lastCheckpoint, fnum = 14, rnum = 15, type = string, occurrence = optional, opts = []},
       #field{name = eventsProcessedAfterRestart, fnum = 15, rnum = 16, type = int64, occurrence = optional, opts = []},
       #field{name = checkpointStatus, fnum = 16, rnum = 17, type = string, occurrence = optional, opts = []},
       #field{name = bufferedEvents, fnum = 17, rnum = 18, type = int64, occurrence = optional, opts = []},
       #field{name = writePendingEventsBeforeCheckpoint, fnum = 18, rnum = 19, type = int32, occurrence = optional, opts = []},
       #field{name = writePendingEventsAfterCheckpoint, fnum = 19, rnum = 20, type = int32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.StatisticsResp'}, [#field{name = details, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StatisticsResp.Details'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.StateReq.Options'}, [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = partition, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.StateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.StateResp'}, [#field{name = state, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResultReq.Options'}, [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = partition, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResultReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.ResultReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResultResp'}, [#field{name = result, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResetReq.Options'},
      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = write_checkpoint, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResetReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.ResetReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.ResetResp'}, []},
     {{msg, 'event_store.client.projections.EnableReq.Options'}, [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.EnableReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.EnableReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.EnableResp'}, []},
     {{msg, 'event_store.client.projections.DisableReq.Options'},
      [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = write_checkpoint, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.DisableReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.DisableReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.projections.DisableResp'}, []},
     {{msg, 'google.protobuf.Struct'}, [#field{name = fields, fnum = 1, rnum = 2, type = {map, string, {msg, 'google.protobuf.Value'}}, occurrence = repeated, opts = []}]},
     {{msg, 'google.protobuf.Value'},
      [#gpb_oneof{name = kind, rnum = 2,
                  fields =
                      [#field{name = null_value, fnum = 1, rnum = 2, type = {enum, 'google.protobuf.NullValue'}, occurrence = optional, opts = []},
                       #field{name = number_value, fnum = 2, rnum = 2, type = double, occurrence = optional, opts = []},
                       #field{name = string_value, fnum = 3, rnum = 2, type = string, occurrence = optional, opts = []},
                       #field{name = bool_value, fnum = 4, rnum = 2, type = bool, occurrence = optional, opts = []},
                       #field{name = struct_value, fnum = 5, rnum = 2, type = {msg, 'google.protobuf.Struct'}, occurrence = optional, opts = []},
                       #field{name = list_value, fnum = 6, rnum = 2, type = {msg, 'google.protobuf.ListValue'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'google.protobuf.ListValue'}, [#field{name = values, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.UUID.Structured'},
      [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.UUID'},
      [#gpb_oneof{name = value, rnum = 2,
                  fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.Empty'}, []},
     {{msg, 'event_store.client.StreamIdentifier'}, [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.AllStreamPosition'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.WrongExpectedVersion'},
      [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                  fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                  fields =
                      [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.AccessDenied'}, []},
     {{msg, 'event_store.client.StreamDeleted'}, [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.Timeout'}, []},
     {{msg, 'event_store.client.Unknown'}, []},
     {{msg, 'event_store.client.InvalidTransaction'}, []},
     {{msg, 'event_store.client.MaximumAppendSizeExceeded'}, [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.BadRequest'}, [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'google.protobuf.Empty'}, []}].


get_msg_names() ->
    ['event_store.client.projections.CreateReq.Options',
     'event_store.client.projections.CreateReq.Options.Continuous',
     'event_store.client.projections.CreateReq.Options.Transient',
     'event_store.client.projections.CreateReq',
     'event_store.client.projections.CreateResp',
     'event_store.client.projections.UpdateReq.Options',
     'event_store.client.projections.UpdateReq',
     'event_store.client.projections.UpdateResp',
     'event_store.client.projections.DeleteReq.Options',
     'event_store.client.projections.DeleteReq',
     'event_store.client.projections.DeleteResp',
     'event_store.client.projections.StatisticsReq.Options',
     'event_store.client.projections.StatisticsReq',
     'event_store.client.projections.StatisticsResp.Details',
     'event_store.client.projections.StatisticsResp',
     'event_store.client.projections.StateReq.Options',
     'event_store.client.projections.StateReq',
     'event_store.client.projections.StateResp',
     'event_store.client.projections.ResultReq.Options',
     'event_store.client.projections.ResultReq',
     'event_store.client.projections.ResultResp',
     'event_store.client.projections.ResetReq.Options',
     'event_store.client.projections.ResetReq',
     'event_store.client.projections.ResetResp',
     'event_store.client.projections.EnableReq.Options',
     'event_store.client.projections.EnableReq',
     'event_store.client.projections.EnableResp',
     'event_store.client.projections.DisableReq.Options',
     'event_store.client.projections.DisableReq',
     'event_store.client.projections.DisableResp',
     'google.protobuf.Struct',
     'google.protobuf.Value',
     'google.protobuf.ListValue',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.protobuf.Empty'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['event_store.client.projections.CreateReq.Options',
     'event_store.client.projections.CreateReq.Options.Continuous',
     'event_store.client.projections.CreateReq.Options.Transient',
     'event_store.client.projections.CreateReq',
     'event_store.client.projections.CreateResp',
     'event_store.client.projections.UpdateReq.Options',
     'event_store.client.projections.UpdateReq',
     'event_store.client.projections.UpdateResp',
     'event_store.client.projections.DeleteReq.Options',
     'event_store.client.projections.DeleteReq',
     'event_store.client.projections.DeleteResp',
     'event_store.client.projections.StatisticsReq.Options',
     'event_store.client.projections.StatisticsReq',
     'event_store.client.projections.StatisticsResp.Details',
     'event_store.client.projections.StatisticsResp',
     'event_store.client.projections.StateReq.Options',
     'event_store.client.projections.StateReq',
     'event_store.client.projections.StateResp',
     'event_store.client.projections.ResultReq.Options',
     'event_store.client.projections.ResultReq',
     'event_store.client.projections.ResultResp',
     'event_store.client.projections.ResetReq.Options',
     'event_store.client.projections.ResetReq',
     'event_store.client.projections.ResetResp',
     'event_store.client.projections.EnableReq.Options',
     'event_store.client.projections.EnableReq',
     'event_store.client.projections.EnableResp',
     'event_store.client.projections.DisableReq.Options',
     'event_store.client.projections.DisableReq',
     'event_store.client.projections.DisableResp',
     'google.protobuf.Struct',
     'google.protobuf.Value',
     'google.protobuf.ListValue',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.protobuf.Empty'].


get_enum_names() -> ['google.protobuf.NullValue'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
        Fs when is_list(Fs) -> Fs;
        error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
        Es when is_list(Es) -> Es;
        error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('event_store.client.projections.CreateReq.Options') ->
    [#gpb_oneof{name = mode, rnum = 2,
                fields =
                    [#field{name = one_time, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = transient, fnum = 2, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options.Transient'}, occurrence = optional, opts = []},
                     #field{name = continuous, fnum = 3, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options.Continuous'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = query, fnum = 4, rnum = 3, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.CreateReq.Options.Continuous') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = track_emitted_streams, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.CreateReq.Options.Transient') -> [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.CreateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.CreateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.CreateResp') -> [];
find_msg_def('event_store.client.projections.UpdateReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = query, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #gpb_oneof{name = emit_option, rnum = 4,
                fields = [#field{name = emit_enabled, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []}, #field{name = no_emit_options, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.projections.UpdateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.UpdateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.UpdateResp') -> [];
find_msg_def('event_store.client.projections.DeleteReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = delete_emitted_streams, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []},
     #field{name = delete_state_stream, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
     #field{name = delete_checkpoint_stream, fnum = 4, rnum = 5, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.DeleteReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.DeleteReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.DeleteResp') -> [];
find_msg_def('event_store.client.projections.StatisticsReq.Options') ->
    [#gpb_oneof{name = mode, rnum = 2,
                fields =
                    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
                     #field{name = all, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = transient, fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = continuous, fnum = 4, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = one_time, fnum = 5, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.projections.StatisticsReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StatisticsReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.StatisticsResp.Details') ->
    [#field{name = coreProcessingTime, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []},
     #field{name = version, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []},
     #field{name = epoch, fnum = 3, rnum = 4, type = int64, occurrence = optional, opts = []},
     #field{name = effectiveName, fnum = 4, rnum = 5, type = string, occurrence = optional, opts = []},
     #field{name = writesInProgress, fnum = 5, rnum = 6, type = int32, occurrence = optional, opts = []},
     #field{name = readsInProgress, fnum = 6, rnum = 7, type = int32, occurrence = optional, opts = []},
     #field{name = partitionsCached, fnum = 7, rnum = 8, type = int32, occurrence = optional, opts = []},
     #field{name = status, fnum = 8, rnum = 9, type = string, occurrence = optional, opts = []},
     #field{name = stateReason, fnum = 9, rnum = 10, type = string, occurrence = optional, opts = []},
     #field{name = name, fnum = 10, rnum = 11, type = string, occurrence = optional, opts = []},
     #field{name = mode, fnum = 11, rnum = 12, type = string, occurrence = optional, opts = []},
     #field{name = position, fnum = 12, rnum = 13, type = string, occurrence = optional, opts = []},
     #field{name = progress, fnum = 13, rnum = 14, type = float, occurrence = optional, opts = []},
     #field{name = lastCheckpoint, fnum = 14, rnum = 15, type = string, occurrence = optional, opts = []},
     #field{name = eventsProcessedAfterRestart, fnum = 15, rnum = 16, type = int64, occurrence = optional, opts = []},
     #field{name = checkpointStatus, fnum = 16, rnum = 17, type = string, occurrence = optional, opts = []},
     #field{name = bufferedEvents, fnum = 17, rnum = 18, type = int64, occurrence = optional, opts = []},
     #field{name = writePendingEventsBeforeCheckpoint, fnum = 18, rnum = 19, type = int32, occurrence = optional, opts = []},
     #field{name = writePendingEventsAfterCheckpoint, fnum = 19, rnum = 20, type = int32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.StatisticsResp') -> [#field{name = details, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StatisticsResp.Details'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.StateReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = partition, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.StateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.StateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.StateResp') -> [#field{name = state, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResultReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = partition, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResultReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.ResultReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResultResp') -> [#field{name = result, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResetReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = write_checkpoint, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResetReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.ResetReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.ResetResp') -> [];
find_msg_def('event_store.client.projections.EnableReq.Options') -> [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.EnableReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.EnableReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.EnableResp') -> [];
find_msg_def('event_store.client.projections.DisableReq.Options') ->
    [#field{name = name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = write_checkpoint, fnum = 2, rnum = 3, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.DisableReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.projections.DisableReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.projections.DisableResp') -> [];
find_msg_def('google.protobuf.Struct') -> [#field{name = fields, fnum = 1, rnum = 2, type = {map, string, {msg, 'google.protobuf.Value'}}, occurrence = repeated, opts = []}];
find_msg_def('google.protobuf.Value') ->
    [#gpb_oneof{name = kind, rnum = 2,
                fields =
                    [#field{name = null_value, fnum = 1, rnum = 2, type = {enum, 'google.protobuf.NullValue'}, occurrence = optional, opts = []},
                     #field{name = number_value, fnum = 2, rnum = 2, type = double, occurrence = optional, opts = []},
                     #field{name = string_value, fnum = 3, rnum = 2, type = string, occurrence = optional, opts = []},
                     #field{name = bool_value, fnum = 4, rnum = 2, type = bool, occurrence = optional, opts = []},
                     #field{name = struct_value, fnum = 5, rnum = 2, type = {msg, 'google.protobuf.Struct'}, occurrence = optional, opts = []},
                     #field{name = list_value, fnum = 6, rnum = 2, type = {msg, 'google.protobuf.ListValue'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('google.protobuf.ListValue') -> [#field{name = values, fnum = 1, rnum = 2, type = {msg, 'google.protobuf.Value'}, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.UUID.Structured') ->
    [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.UUID') ->
    [#gpb_oneof{name = value, rnum = 2,
                fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.Empty') -> [];
find_msg_def('event_store.client.StreamIdentifier') -> [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.AllStreamPosition') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.WrongExpectedVersion') ->
    [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                fields =
                    [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.AccessDenied') -> [];
find_msg_def('event_store.client.StreamDeleted') -> [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.Timeout') -> [];
find_msg_def('event_store.client.Unknown') -> [];
find_msg_def('event_store.client.InvalidTransaction') -> [];
find_msg_def('event_store.client.MaximumAppendSizeExceeded') -> [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.BadRequest') -> [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('google.protobuf.Empty') -> [];
find_msg_def(_) -> error.


find_enum_def('google.protobuf.NullValue') -> [{'NULL_VALUE', 0}];
find_enum_def(_) -> error.


enum_symbol_by_value('google.protobuf.NullValue', Value) -> 'enum_symbol_by_value_google.protobuf.NullValue'(Value).


enum_value_by_symbol('google.protobuf.NullValue', Sym) -> 'enum_value_by_symbol_google.protobuf.NullValue'(Sym).


'enum_symbol_by_value_google.protobuf.NullValue'(0) -> 'NULL_VALUE'.


'enum_value_by_symbol_google.protobuf.NullValue'('NULL_VALUE') -> 0.


get_service_names() -> ['event_store.client.projections.Projections'].


get_service_def('event_store.client.projections.Projections') ->
    {{service, 'event_store.client.projections.Projections'},
     [#rpc{name = 'Create', input = 'event_store.client.projections.CreateReq', output = 'event_store.client.projections.CreateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Update', input = 'event_store.client.projections.UpdateReq', output = 'event_store.client.projections.UpdateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Delete', input = 'event_store.client.projections.DeleteReq', output = 'event_store.client.projections.DeleteResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Statistics', input = 'event_store.client.projections.StatisticsReq', output = 'event_store.client.projections.StatisticsResp', input_stream = false, output_stream = true, opts = []},
      #rpc{name = 'Disable', input = 'event_store.client.projections.DisableReq', output = 'event_store.client.projections.DisableResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Enable', input = 'event_store.client.projections.EnableReq', output = 'event_store.client.projections.EnableResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Reset', input = 'event_store.client.projections.ResetReq', output = 'event_store.client.projections.ResetResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'State', input = 'event_store.client.projections.StateReq', output = 'event_store.client.projections.StateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Result', input = 'event_store.client.projections.ResultReq', output = 'event_store.client.projections.ResultResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'RestartSubsystem', input = 'event_store.client.Empty', output = 'event_store.client.Empty', input_stream = false, output_stream = false, opts = []}]};
get_service_def(_) -> error.


get_rpc_names('event_store.client.projections.Projections') -> ['Create', 'Update', 'Delete', 'Statistics', 'Disable', 'Enable', 'Reset', 'State', 'Result', 'RestartSubsystem'];
get_rpc_names(_) -> error.


find_rpc_def('event_store.client.projections.Projections', RpcName) -> 'find_rpc_def_event_store.client.projections.Projections'(RpcName);
find_rpc_def(_, _) -> error.


'find_rpc_def_event_store.client.projections.Projections'('Create') ->
    #rpc{name = 'Create', input = 'event_store.client.projections.CreateReq', output = 'event_store.client.projections.CreateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Update') ->
    #rpc{name = 'Update', input = 'event_store.client.projections.UpdateReq', output = 'event_store.client.projections.UpdateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Delete') ->
    #rpc{name = 'Delete', input = 'event_store.client.projections.DeleteReq', output = 'event_store.client.projections.DeleteResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Statistics') ->
    #rpc{name = 'Statistics', input = 'event_store.client.projections.StatisticsReq', output = 'event_store.client.projections.StatisticsResp', input_stream = false, output_stream = true, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Disable') ->
    #rpc{name = 'Disable', input = 'event_store.client.projections.DisableReq', output = 'event_store.client.projections.DisableResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Enable') ->
    #rpc{name = 'Enable', input = 'event_store.client.projections.EnableReq', output = 'event_store.client.projections.EnableResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Reset') ->
    #rpc{name = 'Reset', input = 'event_store.client.projections.ResetReq', output = 'event_store.client.projections.ResetResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('State') ->
    #rpc{name = 'State', input = 'event_store.client.projections.StateReq', output = 'event_store.client.projections.StateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('Result') ->
    #rpc{name = 'Result', input = 'event_store.client.projections.ResultReq', output = 'event_store.client.projections.ResultResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'('RestartSubsystem') -> #rpc{name = 'RestartSubsystem', input = 'event_store.client.Empty', output = 'event_store.client.Empty', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.projections.Projections'(_) -> error.


fetch_rpc_def(ServiceName, RpcName) ->
    case find_rpc_def(ServiceName, RpcName) of
        Def when is_tuple(Def) -> Def;
        error -> erlang:error({no_such_rpc, ServiceName, RpcName})
    end.


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
fqbin_to_service_name(<<"event_store.client.projections.Projections">>) -> 'event_store.client.projections.Projections';
fqbin_to_service_name(X) -> error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
service_name_to_fqbin('event_store.client.projections.Projections') -> <<"event_store.client.projections.Projections">>;
service_name_to_fqbin(X) -> error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Create">>) -> {'event_store.client.projections.Projections', 'Create'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Update">>) -> {'event_store.client.projections.Projections', 'Update'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Delete">>) -> {'event_store.client.projections.Projections', 'Delete'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Statistics">>) -> {'event_store.client.projections.Projections', 'Statistics'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Disable">>) -> {'event_store.client.projections.Projections', 'Disable'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Enable">>) -> {'event_store.client.projections.Projections', 'Enable'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Reset">>) -> {'event_store.client.projections.Projections', 'Reset'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"State">>) -> {'event_store.client.projections.Projections', 'State'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"Result">>) -> {'event_store.client.projections.Projections', 'Result'};
fqbins_to_service_and_rpc_name(<<"event_store.client.projections.Projections">>, <<"RestartSubsystem">>) -> {'event_store.client.projections.Projections', 'RestartSubsystem'};
fqbins_to_service_and_rpc_name(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Create') -> {<<"event_store.client.projections.Projections">>, <<"Create">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Update') -> {<<"event_store.client.projections.Projections">>, <<"Update">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Delete') -> {<<"event_store.client.projections.Projections">>, <<"Delete">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Statistics') -> {<<"event_store.client.projections.Projections">>, <<"Statistics">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Disable') -> {<<"event_store.client.projections.Projections">>, <<"Disable">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Enable') -> {<<"event_store.client.projections.Projections">>, <<"Enable">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Reset') -> {<<"event_store.client.projections.Projections">>, <<"Reset">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'State') -> {<<"event_store.client.projections.Projections">>, <<"State">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'Result') -> {<<"event_store.client.projections.Projections">>, <<"Result">>};
service_and_rpc_name_to_fqbins('event_store.client.projections.Projections', 'RestartSubsystem') -> {<<"event_store.client.projections.Projections">>, <<"RestartSubsystem">>};
service_and_rpc_name_to_fqbins(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"event_store.client.projections.CreateReq.Options">>) -> 'event_store.client.projections.CreateReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.CreateReq.Options.Continuous">>) -> 'event_store.client.projections.CreateReq.Options.Continuous';
fqbin_to_msg_name(<<"event_store.client.projections.CreateReq.Options.Transient">>) -> 'event_store.client.projections.CreateReq.Options.Transient';
fqbin_to_msg_name(<<"event_store.client.projections.CreateReq">>) -> 'event_store.client.projections.CreateReq';
fqbin_to_msg_name(<<"event_store.client.projections.CreateResp">>) -> 'event_store.client.projections.CreateResp';
fqbin_to_msg_name(<<"event_store.client.projections.UpdateReq.Options">>) -> 'event_store.client.projections.UpdateReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.UpdateReq">>) -> 'event_store.client.projections.UpdateReq';
fqbin_to_msg_name(<<"event_store.client.projections.UpdateResp">>) -> 'event_store.client.projections.UpdateResp';
fqbin_to_msg_name(<<"event_store.client.projections.DeleteReq.Options">>) -> 'event_store.client.projections.DeleteReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.DeleteReq">>) -> 'event_store.client.projections.DeleteReq';
fqbin_to_msg_name(<<"event_store.client.projections.DeleteResp">>) -> 'event_store.client.projections.DeleteResp';
fqbin_to_msg_name(<<"event_store.client.projections.StatisticsReq.Options">>) -> 'event_store.client.projections.StatisticsReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.StatisticsReq">>) -> 'event_store.client.projections.StatisticsReq';
fqbin_to_msg_name(<<"event_store.client.projections.StatisticsResp.Details">>) -> 'event_store.client.projections.StatisticsResp.Details';
fqbin_to_msg_name(<<"event_store.client.projections.StatisticsResp">>) -> 'event_store.client.projections.StatisticsResp';
fqbin_to_msg_name(<<"event_store.client.projections.StateReq.Options">>) -> 'event_store.client.projections.StateReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.StateReq">>) -> 'event_store.client.projections.StateReq';
fqbin_to_msg_name(<<"event_store.client.projections.StateResp">>) -> 'event_store.client.projections.StateResp';
fqbin_to_msg_name(<<"event_store.client.projections.ResultReq.Options">>) -> 'event_store.client.projections.ResultReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.ResultReq">>) -> 'event_store.client.projections.ResultReq';
fqbin_to_msg_name(<<"event_store.client.projections.ResultResp">>) -> 'event_store.client.projections.ResultResp';
fqbin_to_msg_name(<<"event_store.client.projections.ResetReq.Options">>) -> 'event_store.client.projections.ResetReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.ResetReq">>) -> 'event_store.client.projections.ResetReq';
fqbin_to_msg_name(<<"event_store.client.projections.ResetResp">>) -> 'event_store.client.projections.ResetResp';
fqbin_to_msg_name(<<"event_store.client.projections.EnableReq.Options">>) -> 'event_store.client.projections.EnableReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.EnableReq">>) -> 'event_store.client.projections.EnableReq';
fqbin_to_msg_name(<<"event_store.client.projections.EnableResp">>) -> 'event_store.client.projections.EnableResp';
fqbin_to_msg_name(<<"event_store.client.projections.DisableReq.Options">>) -> 'event_store.client.projections.DisableReq.Options';
fqbin_to_msg_name(<<"event_store.client.projections.DisableReq">>) -> 'event_store.client.projections.DisableReq';
fqbin_to_msg_name(<<"event_store.client.projections.DisableResp">>) -> 'event_store.client.projections.DisableResp';
fqbin_to_msg_name(<<"google.protobuf.Struct">>) -> 'google.protobuf.Struct';
fqbin_to_msg_name(<<"google.protobuf.Value">>) -> 'google.protobuf.Value';
fqbin_to_msg_name(<<"google.protobuf.ListValue">>) -> 'google.protobuf.ListValue';
fqbin_to_msg_name(<<"event_store.client.UUID.Structured">>) -> 'event_store.client.UUID.Structured';
fqbin_to_msg_name(<<"event_store.client.UUID">>) -> 'event_store.client.UUID';
fqbin_to_msg_name(<<"event_store.client.Empty">>) -> 'event_store.client.Empty';
fqbin_to_msg_name(<<"event_store.client.StreamIdentifier">>) -> 'event_store.client.StreamIdentifier';
fqbin_to_msg_name(<<"event_store.client.AllStreamPosition">>) -> 'event_store.client.AllStreamPosition';
fqbin_to_msg_name(<<"event_store.client.WrongExpectedVersion">>) -> 'event_store.client.WrongExpectedVersion';
fqbin_to_msg_name(<<"event_store.client.AccessDenied">>) -> 'event_store.client.AccessDenied';
fqbin_to_msg_name(<<"event_store.client.StreamDeleted">>) -> 'event_store.client.StreamDeleted';
fqbin_to_msg_name(<<"event_store.client.Timeout">>) -> 'event_store.client.Timeout';
fqbin_to_msg_name(<<"event_store.client.Unknown">>) -> 'event_store.client.Unknown';
fqbin_to_msg_name(<<"event_store.client.InvalidTransaction">>) -> 'event_store.client.InvalidTransaction';
fqbin_to_msg_name(<<"event_store.client.MaximumAppendSizeExceeded">>) -> 'event_store.client.MaximumAppendSizeExceeded';
fqbin_to_msg_name(<<"event_store.client.BadRequest">>) -> 'event_store.client.BadRequest';
fqbin_to_msg_name(<<"google.protobuf.Empty">>) -> 'google.protobuf.Empty';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('event_store.client.projections.CreateReq.Options') -> <<"event_store.client.projections.CreateReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.CreateReq.Options.Continuous') -> <<"event_store.client.projections.CreateReq.Options.Continuous">>;
msg_name_to_fqbin('event_store.client.projections.CreateReq.Options.Transient') -> <<"event_store.client.projections.CreateReq.Options.Transient">>;
msg_name_to_fqbin('event_store.client.projections.CreateReq') -> <<"event_store.client.projections.CreateReq">>;
msg_name_to_fqbin('event_store.client.projections.CreateResp') -> <<"event_store.client.projections.CreateResp">>;
msg_name_to_fqbin('event_store.client.projections.UpdateReq.Options') -> <<"event_store.client.projections.UpdateReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.UpdateReq') -> <<"event_store.client.projections.UpdateReq">>;
msg_name_to_fqbin('event_store.client.projections.UpdateResp') -> <<"event_store.client.projections.UpdateResp">>;
msg_name_to_fqbin('event_store.client.projections.DeleteReq.Options') -> <<"event_store.client.projections.DeleteReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.DeleteReq') -> <<"event_store.client.projections.DeleteReq">>;
msg_name_to_fqbin('event_store.client.projections.DeleteResp') -> <<"event_store.client.projections.DeleteResp">>;
msg_name_to_fqbin('event_store.client.projections.StatisticsReq.Options') -> <<"event_store.client.projections.StatisticsReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.StatisticsReq') -> <<"event_store.client.projections.StatisticsReq">>;
msg_name_to_fqbin('event_store.client.projections.StatisticsResp.Details') -> <<"event_store.client.projections.StatisticsResp.Details">>;
msg_name_to_fqbin('event_store.client.projections.StatisticsResp') -> <<"event_store.client.projections.StatisticsResp">>;
msg_name_to_fqbin('event_store.client.projections.StateReq.Options') -> <<"event_store.client.projections.StateReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.StateReq') -> <<"event_store.client.projections.StateReq">>;
msg_name_to_fqbin('event_store.client.projections.StateResp') -> <<"event_store.client.projections.StateResp">>;
msg_name_to_fqbin('event_store.client.projections.ResultReq.Options') -> <<"event_store.client.projections.ResultReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.ResultReq') -> <<"event_store.client.projections.ResultReq">>;
msg_name_to_fqbin('event_store.client.projections.ResultResp') -> <<"event_store.client.projections.ResultResp">>;
msg_name_to_fqbin('event_store.client.projections.ResetReq.Options') -> <<"event_store.client.projections.ResetReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.ResetReq') -> <<"event_store.client.projections.ResetReq">>;
msg_name_to_fqbin('event_store.client.projections.ResetResp') -> <<"event_store.client.projections.ResetResp">>;
msg_name_to_fqbin('event_store.client.projections.EnableReq.Options') -> <<"event_store.client.projections.EnableReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.EnableReq') -> <<"event_store.client.projections.EnableReq">>;
msg_name_to_fqbin('event_store.client.projections.EnableResp') -> <<"event_store.client.projections.EnableResp">>;
msg_name_to_fqbin('event_store.client.projections.DisableReq.Options') -> <<"event_store.client.projections.DisableReq.Options">>;
msg_name_to_fqbin('event_store.client.projections.DisableReq') -> <<"event_store.client.projections.DisableReq">>;
msg_name_to_fqbin('event_store.client.projections.DisableResp') -> <<"event_store.client.projections.DisableResp">>;
msg_name_to_fqbin('google.protobuf.Struct') -> <<"google.protobuf.Struct">>;
msg_name_to_fqbin('google.protobuf.Value') -> <<"google.protobuf.Value">>;
msg_name_to_fqbin('google.protobuf.ListValue') -> <<"google.protobuf.ListValue">>;
msg_name_to_fqbin('event_store.client.UUID.Structured') -> <<"event_store.client.UUID.Structured">>;
msg_name_to_fqbin('event_store.client.UUID') -> <<"event_store.client.UUID">>;
msg_name_to_fqbin('event_store.client.Empty') -> <<"event_store.client.Empty">>;
msg_name_to_fqbin('event_store.client.StreamIdentifier') -> <<"event_store.client.StreamIdentifier">>;
msg_name_to_fqbin('event_store.client.AllStreamPosition') -> <<"event_store.client.AllStreamPosition">>;
msg_name_to_fqbin('event_store.client.WrongExpectedVersion') -> <<"event_store.client.WrongExpectedVersion">>;
msg_name_to_fqbin('event_store.client.AccessDenied') -> <<"event_store.client.AccessDenied">>;
msg_name_to_fqbin('event_store.client.StreamDeleted') -> <<"event_store.client.StreamDeleted">>;
msg_name_to_fqbin('event_store.client.Timeout') -> <<"event_store.client.Timeout">>;
msg_name_to_fqbin('event_store.client.Unknown') -> <<"event_store.client.Unknown">>;
msg_name_to_fqbin('event_store.client.InvalidTransaction') -> <<"event_store.client.InvalidTransaction">>;
msg_name_to_fqbin('event_store.client.MaximumAppendSizeExceeded') -> <<"event_store.client.MaximumAppendSizeExceeded">>;
msg_name_to_fqbin('event_store.client.BadRequest') -> <<"event_store.client.BadRequest">>;
msg_name_to_fqbin('google.protobuf.Empty') -> <<"google.protobuf.Empty">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


fqbin_to_enum_name(<<"google.protobuf.NullValue">>) -> 'google.protobuf.NullValue';
fqbin_to_enum_name(E) -> error({gpb_error, {badenum, E}}).


enum_name_to_fqbin('google.protobuf.NullValue') -> <<"google.protobuf.NullValue">>;
enum_name_to_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_package_name() -> 'event_store.client.projections'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> true.


source_basename() -> "projections.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["projections.proto", "struct.proto", "shared.proto", "empty.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["projections", "struct", "shared", "empty"].


get_msg_containment("projections") ->
    ['event_store.client.projections.CreateReq',
     'event_store.client.projections.CreateReq.Options',
     'event_store.client.projections.CreateReq.Options.Continuous',
     'event_store.client.projections.CreateReq.Options.Transient',
     'event_store.client.projections.CreateResp',
     'event_store.client.projections.DeleteReq',
     'event_store.client.projections.DeleteReq.Options',
     'event_store.client.projections.DeleteResp',
     'event_store.client.projections.DisableReq',
     'event_store.client.projections.DisableReq.Options',
     'event_store.client.projections.DisableResp',
     'event_store.client.projections.EnableReq',
     'event_store.client.projections.EnableReq.Options',
     'event_store.client.projections.EnableResp',
     'event_store.client.projections.ResetReq',
     'event_store.client.projections.ResetReq.Options',
     'event_store.client.projections.ResetResp',
     'event_store.client.projections.ResultReq',
     'event_store.client.projections.ResultReq.Options',
     'event_store.client.projections.ResultResp',
     'event_store.client.projections.StateReq',
     'event_store.client.projections.StateReq.Options',
     'event_store.client.projections.StateResp',
     'event_store.client.projections.StatisticsReq',
     'event_store.client.projections.StatisticsReq.Options',
     'event_store.client.projections.StatisticsResp',
     'event_store.client.projections.StatisticsResp.Details',
     'event_store.client.projections.UpdateReq',
     'event_store.client.projections.UpdateReq.Options',
     'event_store.client.projections.UpdateResp'];
get_msg_containment("struct") -> ['google.protobuf.ListValue', 'google.protobuf.Struct', 'google.protobuf.Value'];
get_msg_containment("shared") ->
    ['event_store.client.AccessDenied',
     'event_store.client.AllStreamPosition',
     'event_store.client.BadRequest',
     'event_store.client.Empty',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.StreamDeleted',
     'event_store.client.StreamIdentifier',
     'event_store.client.Timeout',
     'event_store.client.UUID',
     'event_store.client.UUID.Structured',
     'event_store.client.Unknown',
     'event_store.client.WrongExpectedVersion'];
get_msg_containment("empty") -> ['google.protobuf.Empty'];
get_msg_containment(P) -> error({gpb_error, {badproto, P}}).


get_pkg_containment("projections") -> 'event_store.client.projections';
get_pkg_containment("struct") -> 'google.protobuf';
get_pkg_containment("shared") -> 'event_store.client';
get_pkg_containment("empty") -> 'google.protobuf';
get_pkg_containment(P) -> error({gpb_error, {badproto, P}}).


get_service_containment("projections") -> ['event_store.client.projections.Projections'];
get_service_containment("struct") -> [];
get_service_containment("shared") -> [];
get_service_containment("empty") -> [];
get_service_containment(P) -> error({gpb_error, {badproto, P}}).


get_rpc_containment("projections") ->
    [{'event_store.client.projections.Projections', 'Create'},
     {'event_store.client.projections.Projections', 'Update'},
     {'event_store.client.projections.Projections', 'Delete'},
     {'event_store.client.projections.Projections', 'Statistics'},
     {'event_store.client.projections.Projections', 'Disable'},
     {'event_store.client.projections.Projections', 'Enable'},
     {'event_store.client.projections.Projections', 'Reset'},
     {'event_store.client.projections.Projections', 'State'},
     {'event_store.client.projections.Projections', 'Result'},
     {'event_store.client.projections.Projections', 'RestartSubsystem'}];
get_rpc_containment("struct") -> [];
get_rpc_containment("shared") -> [];
get_rpc_containment("empty") -> [];
get_rpc_containment(P) -> error({gpb_error, {badproto, P}}).


get_enum_containment("projections") -> [];
get_enum_containment("struct") -> ['google.protobuf.NullValue'];
get_enum_containment("shared") -> [];
get_enum_containment("empty") -> [];
get_enum_containment(P) -> error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.UpdateResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StatisticsResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StateResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResultResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResetResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.EnableResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DisableResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DeleteResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.CreateResp">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.UpdateReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StatisticsReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StateReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResultReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResetReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.EnableReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DisableReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DeleteReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.CreateReq">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamIdentifier">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.UpdateReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StatisticsResp.Details">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StatisticsReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.StateReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResultReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.ResetReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.EnableReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DisableReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.DeleteReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.CreateReq.Options.Continuous">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.CreateReq.Options">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID.Structured">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Timeout">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamDeleted">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.MaximumAppendSizeExceeded">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.BadRequest">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AccessDenied">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Struct">>) -> "struct";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.projections.CreateReq.Options.Transient">>) -> "projections";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Value">>) -> "struct";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.ListValue">>) -> "struct";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Empty">>) -> "empty";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Empty">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.WrongExpectedVersion">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Unknown">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.InvalidTransaction">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AllStreamPosition">>) -> "shared";
get_proto_by_msg_name_as_fqbin(E) -> error({gpb_error, {badmsg, E}}).


get_proto_by_service_name_as_fqbin(<<"event_store.client.projections.Projections">>) -> "projections";
get_proto_by_service_name_as_fqbin(E) -> error({gpb_error, {badservice, E}}).


get_proto_by_enum_name_as_fqbin(<<"google.protobuf.NullValue">>) -> "struct";
get_proto_by_enum_name_as_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_protos_by_pkg_name_as_fqbin(<<"event_store.client.projections">>) -> ["projections"];
get_protos_by_pkg_name_as_fqbin(<<"event_store.client">>) -> ["shared"];
get_protos_by_pkg_name_as_fqbin(<<"google.protobuf">>) -> ["empty", "struct"];
get_protos_by_pkg_name_as_fqbin(E) -> error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.18.0".

gpb_version_as_list() ->
    [4,18,0].

gpb_version_source() ->
    "file".
