%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.17.0
-module(users).

-export([encode_msg/1, encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3, merge_msgs/4]).
-export([verify_msg/1, verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).

-include("users.hrl").
-include_lib("gpb/include/gpb.hrl").

%% enumerated types

-export_type([]).

%% message types
-type 'event_store.client.users.CreateReq.Options'() :: #'event_store.client.users.CreateReq.Options'{}.

-type 'event_store.client.users.CreateReq'() :: #'event_store.client.users.CreateReq'{}.

-type 'event_store.client.users.CreateResp'() :: #'event_store.client.users.CreateResp'{}.

-type 'event_store.client.users.UpdateReq.Options'() :: #'event_store.client.users.UpdateReq.Options'{}.

-type 'event_store.client.users.UpdateReq'() :: #'event_store.client.users.UpdateReq'{}.

-type 'event_store.client.users.UpdateResp'() :: #'event_store.client.users.UpdateResp'{}.

-type 'event_store.client.users.DeleteReq.Options'() :: #'event_store.client.users.DeleteReq.Options'{}.

-type 'event_store.client.users.DeleteReq'() :: #'event_store.client.users.DeleteReq'{}.

-type 'event_store.client.users.DeleteResp'() :: #'event_store.client.users.DeleteResp'{}.

-type 'event_store.client.users.EnableReq.Options'() :: #'event_store.client.users.EnableReq.Options'{}.

-type 'event_store.client.users.EnableReq'() :: #'event_store.client.users.EnableReq'{}.

-type 'event_store.client.users.EnableResp'() :: #'event_store.client.users.EnableResp'{}.

-type 'event_store.client.users.DisableReq.Options'() :: #'event_store.client.users.DisableReq.Options'{}.

-type 'event_store.client.users.DisableReq'() :: #'event_store.client.users.DisableReq'{}.

-type 'event_store.client.users.DisableResp'() :: #'event_store.client.users.DisableResp'{}.

-type 'event_store.client.users.DetailsReq.Options'() :: #'event_store.client.users.DetailsReq.Options'{}.

-type 'event_store.client.users.DetailsReq'() :: #'event_store.client.users.DetailsReq'{}.

-type 'event_store.client.users.DetailsResp.UserDetails'() :: #'event_store.client.users.DetailsResp.UserDetails'{}.

-type 'event_store.client.users.DetailsResp.UserDetails.DateTime'() :: #'event_store.client.users.DetailsResp.UserDetails.DateTime'{}.

-type 'event_store.client.users.DetailsResp'() :: #'event_store.client.users.DetailsResp'{}.

-type 'event_store.client.users.ChangePasswordReq.Options'() :: #'event_store.client.users.ChangePasswordReq.Options'{}.

-type 'event_store.client.users.ChangePasswordReq'() :: #'event_store.client.users.ChangePasswordReq'{}.

-type 'event_store.client.users.ChangePasswordResp'() :: #'event_store.client.users.ChangePasswordResp'{}.

-type 'event_store.client.users.ResetPasswordReq.Options'() :: #'event_store.client.users.ResetPasswordReq.Options'{}.

-type 'event_store.client.users.ResetPasswordReq'() :: #'event_store.client.users.ResetPasswordReq'{}.

-type 'event_store.client.users.ResetPasswordResp'() :: #'event_store.client.users.ResetPasswordResp'{}.

-export_type(['event_store.client.users.CreateReq.Options'/0, 'event_store.client.users.CreateReq'/0, 'event_store.client.users.CreateResp'/0, 'event_store.client.users.UpdateReq.Options'/0, 'event_store.client.users.UpdateReq'/0, 'event_store.client.users.UpdateResp'/0, 'event_store.client.users.DeleteReq.Options'/0, 'event_store.client.users.DeleteReq'/0, 'event_store.client.users.DeleteResp'/0, 'event_store.client.users.EnableReq.Options'/0, 'event_store.client.users.EnableReq'/0, 'event_store.client.users.EnableResp'/0, 'event_store.client.users.DisableReq.Options'/0, 'event_store.client.users.DisableReq'/0, 'event_store.client.users.DisableResp'/0, 'event_store.client.users.DetailsReq.Options'/0, 'event_store.client.users.DetailsReq'/0, 'event_store.client.users.DetailsResp.UserDetails'/0, 'event_store.client.users.DetailsResp.UserDetails.DateTime'/0, 'event_store.client.users.DetailsResp'/0, 'event_store.client.users.ChangePasswordReq.Options'/0, 'event_store.client.users.ChangePasswordReq'/0, 'event_store.client.users.ChangePasswordResp'/0, 'event_store.client.users.ResetPasswordReq.Options'/0, 'event_store.client.users.ResetPasswordReq'/0, 'event_store.client.users.ResetPasswordResp'/0]).
-type '$msg_name'() :: 'event_store.client.users.CreateReq.Options' | 'event_store.client.users.CreateReq' | 'event_store.client.users.CreateResp' | 'event_store.client.users.UpdateReq.Options' | 'event_store.client.users.UpdateReq' | 'event_store.client.users.UpdateResp' | 'event_store.client.users.DeleteReq.Options' | 'event_store.client.users.DeleteReq' | 'event_store.client.users.DeleteResp' | 'event_store.client.users.EnableReq.Options' | 'event_store.client.users.EnableReq' | 'event_store.client.users.EnableResp' | 'event_store.client.users.DisableReq.Options' | 'event_store.client.users.DisableReq' | 'event_store.client.users.DisableResp' | 'event_store.client.users.DetailsReq.Options' | 'event_store.client.users.DetailsReq' | 'event_store.client.users.DetailsResp.UserDetails' | 'event_store.client.users.DetailsResp.UserDetails.DateTime' | 'event_store.client.users.DetailsResp' | 'event_store.client.users.ChangePasswordReq.Options' | 'event_store.client.users.ChangePasswordReq' | 'event_store.client.users.ChangePasswordResp' | 'event_store.client.users.ResetPasswordReq.Options' | 'event_store.client.users.ResetPasswordReq' | 'event_store.client.users.ResetPasswordResp'.
-type '$msg'() :: 'event_store.client.users.CreateReq.Options'() | 'event_store.client.users.CreateReq'() | 'event_store.client.users.CreateResp'() | 'event_store.client.users.UpdateReq.Options'() | 'event_store.client.users.UpdateReq'() | 'event_store.client.users.UpdateResp'() | 'event_store.client.users.DeleteReq.Options'() | 'event_store.client.users.DeleteReq'() | 'event_store.client.users.DeleteResp'() | 'event_store.client.users.EnableReq.Options'() | 'event_store.client.users.EnableReq'() | 'event_store.client.users.EnableResp'() | 'event_store.client.users.DisableReq.Options'() | 'event_store.client.users.DisableReq'() | 'event_store.client.users.DisableResp'() | 'event_store.client.users.DetailsReq.Options'() | 'event_store.client.users.DetailsReq'() | 'event_store.client.users.DetailsResp.UserDetails'() | 'event_store.client.users.DetailsResp.UserDetails.DateTime'() | 'event_store.client.users.DetailsResp'() | 'event_store.client.users.ChangePasswordReq.Options'() | 'event_store.client.users.ChangePasswordReq'() | 'event_store.client.users.ChangePasswordResp'() | 'event_store.client.users.ResetPasswordReq.Options'() | 'event_store.client.users.ResetPasswordReq'() | 'event_store.client.users.ResetPasswordResp'().
-export_type(['$msg_name'/0, '$msg'/0]).

-spec encode_msg('$msg'()) -> binary().
encode_msg(Msg) when tuple_size(Msg) >= 1 -> encode_msg(Msg, element(1, Msg), []).

-spec encode_msg('$msg'(), '$msg_name'() | list()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) -> encode_msg(Msg, MsgName, []);
encode_msg(Msg, Opts) when tuple_size(Msg) >= 1, is_list(Opts) -> encode_msg(Msg, element(1, Msg), Opts).

-spec encode_msg('$msg'(), '$msg_name'(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
        true -> verify_msg(Msg, MsgName, Opts);
        false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.users.CreateReq.Options' -> 'encode_msg_event_store.client.users.CreateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.CreateReq' -> 'encode_msg_event_store.client.users.CreateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.CreateResp' -> 'encode_msg_event_store.client.users.CreateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.UpdateReq.Options' -> 'encode_msg_event_store.client.users.UpdateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.UpdateReq' -> 'encode_msg_event_store.client.users.UpdateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.UpdateResp' -> 'encode_msg_event_store.client.users.UpdateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DeleteReq.Options' -> 'encode_msg_event_store.client.users.DeleteReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DeleteReq' -> 'encode_msg_event_store.client.users.DeleteReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DeleteResp' -> 'encode_msg_event_store.client.users.DeleteResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.EnableReq.Options' -> 'encode_msg_event_store.client.users.EnableReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.EnableReq' -> 'encode_msg_event_store.client.users.EnableReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.EnableResp' -> 'encode_msg_event_store.client.users.EnableResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DisableReq.Options' -> 'encode_msg_event_store.client.users.DisableReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DisableReq' -> 'encode_msg_event_store.client.users.DisableReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DisableResp' -> 'encode_msg_event_store.client.users.DisableResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DetailsReq.Options' -> 'encode_msg_event_store.client.users.DetailsReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DetailsReq' -> 'encode_msg_event_store.client.users.DetailsReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DetailsResp.UserDetails' -> 'encode_msg_event_store.client.users.DetailsResp.UserDetails'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DetailsResp.UserDetails.DateTime' -> 'encode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.DetailsResp' -> 'encode_msg_event_store.client.users.DetailsResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ChangePasswordReq.Options' -> 'encode_msg_event_store.client.users.ChangePasswordReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ChangePasswordReq' -> 'encode_msg_event_store.client.users.ChangePasswordReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ChangePasswordResp' -> 'encode_msg_event_store.client.users.ChangePasswordResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ResetPasswordReq.Options' -> 'encode_msg_event_store.client.users.ResetPasswordReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ResetPasswordReq' -> 'encode_msg_event_store.client.users.ResetPasswordReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.users.ResetPasswordResp' -> 'encode_msg_event_store.client.users.ResetPasswordResp'(id(Msg, TrUserData), TrUserData)
    end.


'encode_msg_event_store.client.users.CreateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.CreateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.CreateReq.Options'(#'event_store.client.users.CreateReq.Options'{login_name = F1, password = F2, full_name = F3, groups = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case is_empty_string(TrF3) of
                        true -> B2;
                        false -> e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                    end
                end
         end,
    begin
        TrF4 = id(F4, TrUserData),
        if TrF4 == [] -> B3;
           true -> 'e_field_event_store.client.users.CreateReq.Options_groups'(TrF4, B3, TrUserData)
        end
    end.

'encode_msg_event_store.client.users.CreateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.CreateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.CreateReq'(#'event_store.client.users.CreateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.CreateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.CreateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.UpdateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.UpdateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.UpdateReq.Options'(#'event_store.client.users.UpdateReq.Options'{login_name = F1, password = F2, full_name = F3, groups = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case is_empty_string(TrF3) of
                        true -> B2;
                        false -> e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
                    end
                end
         end,
    begin
        TrF4 = id(F4, TrUserData),
        if TrF4 == [] -> B3;
           true -> 'e_field_event_store.client.users.UpdateReq.Options_groups'(TrF4, B3, TrUserData)
        end
    end.

'encode_msg_event_store.client.users.UpdateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.UpdateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.UpdateReq'(#'event_store.client.users.UpdateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.UpdateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.UpdateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.DeleteReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DeleteReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DeleteReq.Options'(#'event_store.client.users.DeleteReq.Options'{login_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DeleteReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DeleteReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DeleteReq'(#'event_store.client.users.DeleteReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.DeleteReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DeleteResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.EnableReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.EnableReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.EnableReq.Options'(#'event_store.client.users.EnableReq.Options'{login_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.EnableReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.EnableReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.EnableReq'(#'event_store.client.users.EnableReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.EnableReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.EnableResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.DisableReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DisableReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DisableReq.Options'(#'event_store.client.users.DisableReq.Options'{login_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DisableReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DisableReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DisableReq'(#'event_store.client.users.DisableReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.DisableReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DisableResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.DetailsReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DetailsReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DetailsReq.Options'(#'event_store.client.users.DetailsReq.Options'{login_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DetailsReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DetailsReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DetailsReq'(#'event_store.client.users.DetailsReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.DetailsReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DetailsResp.UserDetails'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DetailsResp.UserDetails'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DetailsResp.UserDetails'(#'event_store.client.users.DetailsResp.UserDetails'{login_name = F1, full_name = F2, groups = F3, last_updated = F4, disabled = F5}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             if TrF3 == [] -> B2;
                true -> 'e_field_event_store.client.users.DetailsResp.UserDetails_groups'(TrF3, B2, TrUserData)
             end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    if TrF4 =:= undefined -> B3;
                       true -> 'e_mfield_event_store.client.users.DetailsResp.UserDetails_last_updated'(TrF4, <<B3/binary, 34>>, TrUserData)
                    end
                end
         end,
    if F5 == undefined -> B4;
       true ->
           begin
               TrF5 = id(F5, TrUserData),
               if TrF5 =:= false -> B4;
                  true -> e_type_bool(TrF5, <<B4/binary, 40>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(#'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= 0 -> Bin;
                  true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.DetailsResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.DetailsResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.DetailsResp'(#'event_store.client.users.DetailsResp'{user_details = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.DetailsResp_user_details'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.ChangePasswordReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.ChangePasswordReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.ChangePasswordReq.Options'(#'event_store.client.users.ChangePasswordReq.Options'{login_name = F1, current_password = F2, new_password = F3}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F3 == undefined -> B2;
       true ->
           begin
               TrF3 = id(F3, TrUserData),
               case is_empty_string(TrF3) of
                   true -> B2;
                   false -> e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.ChangePasswordReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.ChangePasswordReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.ChangePasswordReq'(#'event_store.client.users.ChangePasswordReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.ChangePasswordReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.ChangePasswordResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.users.ResetPasswordReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.ResetPasswordReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.ResetPasswordReq.Options'(#'event_store.client.users.ResetPasswordReq.Options'{login_name = F1, new_password = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case is_empty_string(TrF2) of
                   true -> B1;
                   false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.ResetPasswordReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.users.ResetPasswordReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.users.ResetPasswordReq'(#'event_store.client.users.ResetPasswordReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.users.ResetPasswordReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.users.ResetPasswordResp'(_Msg, _TrUserData) -> <<>>.

'e_field_event_store.client.users.CreateReq.Options_groups'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.users.CreateReq.Options_groups'(Rest, Bin3, TrUserData);
'e_field_event_store.client.users.CreateReq.Options_groups'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.users.CreateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.CreateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.users.UpdateReq.Options_groups'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.users.UpdateReq.Options_groups'(Rest, Bin3, TrUserData);
'e_field_event_store.client.users.UpdateReq.Options_groups'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.users.UpdateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.UpdateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.DeleteReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.DeleteReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.EnableReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.EnableReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.DisableReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.DisableReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.DetailsReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.DetailsReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.users.DetailsResp.UserDetails_groups'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.users.DetailsResp.UserDetails_groups'(Rest, Bin3, TrUserData);
'e_field_event_store.client.users.DetailsResp.UserDetails_groups'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.users.DetailsResp.UserDetails_last_updated'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.DetailsResp_user_details'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.DetailsResp.UserDetails'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.ChangePasswordReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.ChangePasswordReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.users.ResetPasswordReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.users.ResetPasswordReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 -> e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) -> e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) -> <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) -> <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) -> <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) -> <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) -> <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) -> <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) -> <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) -> <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) -> <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_unknown_elems/2}).
e_unknown_elems([Elem | Rest], Bin) ->
    BinR = case Elem of
               {varint, FNum, N} ->
                   BinF = e_varint(FNum bsl 3, Bin),
                   e_varint(N, BinF);
               {length_delimited, FNum, Data} ->
                   BinF = e_varint(FNum bsl 3 bor 2, Bin),
                   BinL = e_varint(byte_size(Data), BinF),
                   <<BinL/binary, Data/binary>>;
               {group, FNum, GroupFields} ->
                   Bin1 = e_varint(FNum bsl 3 bor 3, Bin),
                   Bin2 = e_unknown_elems(GroupFields, Bin1),
                   e_varint(FNum bsl 3 bor 4, Bin2);
               {fixed32, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 5, Bin),
                   <<BinF/binary, V:32/little>>;
               {fixed64, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 1, Bin),
                   <<BinF/binary, V:64/little>>
           end,
    e_unknown_elems(Rest, BinR);
e_unknown_elems([], Bin) -> Bin.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).

is_empty_string("") -> true;
is_empty_string(<<>>) -> true;
is_empty_string(L) when is_list(L) -> not string_has_chars(L);
is_empty_string(B) when is_binary(B) -> false.

string_has_chars([C | _]) when is_integer(C) -> true;
string_has_chars([H | T]) ->
    case string_has_chars(H) of
        true -> true;
        false -> string_has_chars(T)
    end;
string_has_chars(B) when is_binary(B), byte_size(B) =/= 0 -> true;
string_has_chars(C) when is_integer(C) -> true;
string_has_chars(<<>>) -> false;
string_has_chars([]) -> false.


decode_msg(Bin, MsgName) when is_binary(Bin) -> decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason ->
        StackTrace = erlang:get_stacktrace(),
        error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('event_store.client.users.CreateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.CreateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.CreateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.CreateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.CreateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.CreateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.UpdateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.UpdateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.UpdateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.UpdateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.UpdateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.UpdateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DeleteReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DeleteReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DeleteReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DeleteReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DeleteResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DeleteResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.EnableReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.EnableReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.EnableReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.EnableReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.EnableResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.EnableResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DisableReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DisableReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DisableReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DisableReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DisableResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DisableResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DetailsReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DetailsReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DetailsReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DetailsReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DetailsResp.UserDetails', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DetailsResp.UserDetails'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DetailsResp.UserDetails.DateTime', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.DetailsResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.DetailsResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ChangePasswordReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ChangePasswordReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ChangePasswordReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ChangePasswordReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ChangePasswordResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ChangePasswordResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ResetPasswordReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ResetPasswordReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ResetPasswordReq', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ResetPasswordReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.users.ResetPasswordResp', Bin, TrUserData) -> id('decode_msg_event_store.client.users.ResetPasswordResp'(Bin, TrUserData), TrUserData).



'decode_msg_event_store.client.users.CreateReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Bin, 0, 0, 0, id([], TrUserData), id([], TrUserData), id([], TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.CreateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.users.CreateReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.CreateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.users.CreateReq.Options_password'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.CreateReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.users.CreateReq.Options_full_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.CreateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.users.CreateReq.Options_groups'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, R1, TrUserData) ->
    #'event_store.client.users.CreateReq.Options'{login_name = F@_1, password = F@_2, full_name = F@_3, groups = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dg_read_field_def_event_store.client.users.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.users.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.users.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.CreateReq.Options_login_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.users.CreateReq.Options_password'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.users.CreateReq.Options_full_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.users.CreateReq.Options_groups'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.users.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.users.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.users.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, R1, TrUserData) ->
    #'event_store.client.users.CreateReq.Options'{login_name = F@_1, password = F@_2, full_name = F@_3, groups = lists_reverse(R1, TrUserData)}.

'd_field_event_store.client.users.CreateReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.CreateReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.CreateReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, TrUserData).

'd_field_event_store.client.users.CreateReq.Options_password'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.CreateReq.Options_password'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.CreateReq.Options_password'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, TrUserData).

'd_field_event_store.client.users.CreateReq.Options_full_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.CreateReq.Options_full_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.CreateReq.Options_full_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.users.CreateReq.Options_groups'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.CreateReq.Options_groups'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.CreateReq.Options_groups'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, F@_3, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_event_store.client.users.CreateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'skip_varint_event_store.client.users.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.users.CreateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.users.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.users.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.users.CreateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.users.CreateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.users.CreateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.users.CreateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.CreateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.CreateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.CreateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.CreateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.CreateReq'{options = F@_1}.

'd_field_event_store.client.users.CreateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.CreateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.CreateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.CreateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.CreateReq'(RestF,
                                                            0,
                                                            0,
                                                            F,
                                                            if Prev == undefined -> NewFValue;
                                                               true -> 'merge_msg_event_store.client.users.CreateReq.Options'(Prev, NewFValue, TrUserData)
                                                            end,
                                                            TrUserData).

'skip_varint_event_store.client.users.CreateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.CreateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.CreateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.CreateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.CreateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.CreateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.CreateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.CreateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.CreateResp'{};
'dfp_read_field_def_event_store.client.users.CreateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.CreateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.CreateResp'{}.

'skip_varint_event_store.client.users.CreateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.CreateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.CreateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.CreateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.CreateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.CreateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.CreateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.CreateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.UpdateReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Bin, 0, 0, 0, id([], TrUserData), id([], TrUserData), id([], TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.users.UpdateReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.users.UpdateReq.Options_password'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.users.UpdateReq.Options_full_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.users.UpdateReq.Options_groups'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, R1, TrUserData) ->
    #'event_store.client.users.UpdateReq.Options'{login_name = F@_1, password = F@_2, full_name = F@_3, groups = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dg_read_field_def_event_store.client.users.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.users.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.users.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.UpdateReq.Options_login_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.users.UpdateReq.Options_password'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.users.UpdateReq.Options_full_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.users.UpdateReq.Options_groups'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.users.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.users.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.users.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, R1, TrUserData) ->
    #'event_store.client.users.UpdateReq.Options'{login_name = F@_1, password = F@_2, full_name = F@_3, groups = lists_reverse(R1, TrUserData)}.

'd_field_event_store.client.users.UpdateReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.UpdateReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.UpdateReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, TrUserData).

'd_field_event_store.client.users.UpdateReq.Options_password'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.UpdateReq.Options_password'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.UpdateReq.Options_password'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, TrUserData).

'd_field_event_store.client.users.UpdateReq.Options_full_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.UpdateReq.Options_full_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.UpdateReq.Options_full_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.users.UpdateReq.Options_groups'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.UpdateReq.Options_groups'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.users.UpdateReq.Options_groups'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, F@_3, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_event_store.client.users.UpdateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'skip_varint_event_store.client.users.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.users.UpdateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.users.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.users.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.users.UpdateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.users.UpdateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.users.UpdateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.users.UpdateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.UpdateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.UpdateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.UpdateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.UpdateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.UpdateReq'{options = F@_1}.

'd_field_event_store.client.users.UpdateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.UpdateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.UpdateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.UpdateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.UpdateReq'(RestF,
                                                            0,
                                                            0,
                                                            F,
                                                            if Prev == undefined -> NewFValue;
                                                               true -> 'merge_msg_event_store.client.users.UpdateReq.Options'(Prev, NewFValue, TrUserData)
                                                            end,
                                                            TrUserData).

'skip_varint_event_store.client.users.UpdateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.UpdateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.UpdateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.UpdateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.UpdateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.UpdateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.UpdateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.UpdateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.UpdateResp'{};
'dfp_read_field_def_event_store.client.users.UpdateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.UpdateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.UpdateResp'{}.

'skip_varint_event_store.client.users.UpdateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.UpdateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.UpdateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.UpdateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.UpdateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.UpdateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.UpdateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.UpdateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.DeleteReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Bin, 0, 0, 0, id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DeleteReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DeleteReq.Options'{login_name = F@_1};
'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DeleteReq.Options_login_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DeleteReq.Options'{login_name = F@_1}.

'd_field_event_store.client.users.DeleteReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DeleteReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DeleteReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.users.DeleteReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DeleteReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DeleteReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DeleteReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DeleteReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DeleteReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DeleteReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DeleteReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DeleteReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DeleteReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DeleteReq'{options = F@_1}.

'd_field_event_store.client.users.DeleteReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DeleteReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DeleteReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.DeleteReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DeleteReq'(RestF,
                                                            0,
                                                            0,
                                                            F,
                                                            if Prev == undefined -> NewFValue;
                                                               true -> 'merge_msg_event_store.client.users.DeleteReq.Options'(Prev, NewFValue, TrUserData)
                                                            end,
                                                            TrUserData).

'skip_varint_event_store.client.users.DeleteReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DeleteReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DeleteReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DeleteReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DeleteReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DeleteReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DeleteReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DeleteResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.DeleteResp'{};
'dfp_read_field_def_event_store.client.users.DeleteResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.DeleteResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.DeleteResp'{}.

'skip_varint_event_store.client.users.DeleteResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.DeleteResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.DeleteResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DeleteResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.DeleteResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DeleteResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.DeleteResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.DeleteResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.EnableReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Bin, 0, 0, 0, id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.EnableReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.EnableReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.EnableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.EnableReq.Options'{login_name = F@_1};
'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.EnableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.EnableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.EnableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.EnableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.EnableReq.Options_login_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.EnableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.EnableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.EnableReq.Options'{login_name = F@_1}.

'd_field_event_store.client.users.EnableReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.EnableReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.EnableReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.EnableReq.Options'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.users.EnableReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.EnableReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.EnableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.EnableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.EnableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.EnableReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.EnableReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.EnableReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.EnableReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.EnableReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.EnableReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.EnableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.EnableReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.EnableReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.EnableReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.EnableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.EnableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.EnableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.EnableReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.EnableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.EnableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.EnableReq'{options = F@_1}.

'd_field_event_store.client.users.EnableReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.EnableReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.EnableReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.EnableReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.EnableReq'(RestF,
                                                            0,
                                                            0,
                                                            F,
                                                            if Prev == undefined -> NewFValue;
                                                               true -> 'merge_msg_event_store.client.users.EnableReq.Options'(Prev, NewFValue, TrUserData)
                                                            end,
                                                            TrUserData).

'skip_varint_event_store.client.users.EnableReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.EnableReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.EnableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.EnableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.EnableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.EnableReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.EnableReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.EnableReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.EnableReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.EnableReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.EnableResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.EnableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.EnableResp'{};
'dfp_read_field_def_event_store.client.users.EnableResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.EnableResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.EnableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.EnableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.EnableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.EnableResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.EnableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.EnableResp'{}.

'skip_varint_event_store.client.users.EnableResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.EnableResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.EnableResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.EnableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.EnableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.EnableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.EnableResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.EnableResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.EnableResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.EnableResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.EnableResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.EnableResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.DisableReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Bin, 0, 0, 0, id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DisableReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DisableReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DisableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DisableReq.Options'{login_name = F@_1};
'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DisableReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DisableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.DisableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DisableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DisableReq.Options_login_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DisableReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DisableReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DisableReq.Options'{login_name = F@_1}.

'd_field_event_store.client.users.DisableReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DisableReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DisableReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DisableReq.Options'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.users.DisableReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DisableReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DisableReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.DisableReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DisableReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DisableReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DisableReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DisableReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DisableReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DisableReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DisableReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DisableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DisableReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.DisableReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DisableReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DisableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DisableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DisableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DisableReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DisableReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DisableReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DisableReq'{options = F@_1}.

'd_field_event_store.client.users.DisableReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DisableReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DisableReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.DisableReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DisableReq'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             if Prev == undefined -> NewFValue;
                                                                true -> 'merge_msg_event_store.client.users.DisableReq.Options'(Prev, NewFValue, TrUserData)
                                                             end,
                                                             TrUserData).

'skip_varint_event_store.client.users.DisableReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DisableReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DisableReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DisableReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DisableReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DisableReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DisableReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DisableReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DisableReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DisableReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DisableResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.DisableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.DisableResp'{};
'dfp_read_field_def_event_store.client.users.DisableResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.DisableResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.DisableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DisableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.DisableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.DisableResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.DisableResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.DisableResp'{}.

'skip_varint_event_store.client.users.DisableResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.DisableResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.DisableResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.DisableResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DisableResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.DisableResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DisableResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.DisableResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DisableResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.DisableResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.DisableResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DisableResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.DetailsReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Bin, 0, 0, 0, id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DetailsReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsReq.Options'{login_name = F@_1};
'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DetailsReq.Options'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DetailsReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.DetailsReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DetailsReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DetailsReq.Options_login_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DetailsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DetailsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DetailsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DetailsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DetailsReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DetailsReq.Options'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsReq.Options'{login_name = F@_1}.

'd_field_event_store.client.users.DetailsReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DetailsReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DetailsReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.users.DetailsReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DetailsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DetailsReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DetailsReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.DetailsReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DetailsReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DetailsReq.Options'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DetailsReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DetailsReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq.Options'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DetailsReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DetailsReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DetailsReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.DetailsReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DetailsReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DetailsReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DetailsReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DetailsReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DetailsReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DetailsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DetailsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DetailsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DetailsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DetailsReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DetailsReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsReq'{options = F@_1}.

'd_field_event_store.client.users.DetailsReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DetailsReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DetailsReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.DetailsReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsReq'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             if Prev == undefined -> NewFValue;
                                                                true -> 'merge_msg_event_store.client.users.DetailsReq.Options'(Prev, NewFValue, TrUserData)
                                                             end,
                                                             TrUserData).

'skip_varint_event_store.client.users.DetailsReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DetailsReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DetailsReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DetailsReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DetailsReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DetailsReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DetailsReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DetailsReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DetailsReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DetailsReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DetailsReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DetailsResp.UserDetails'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Bin, 0, 0, 0, id([], TrUserData), id([], TrUserData), id([], TrUserData), id(undefined, TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_login_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_full_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_groups'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_last_updated'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_disabled'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<>>, 0, 0, _, F@_1, F@_2, R1, F@_4, F@_5, TrUserData) ->
    #'event_store.client.users.DetailsResp.UserDetails'{login_name = F@_1, full_name = F@_2, groups = lists_reverse(R1, TrUserData), last_updated = F@_4, disabled = F@_5};
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DetailsResp.UserDetails_login_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
        18 -> 'd_field_event_store.client.users.DetailsResp.UserDetails_full_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
        26 -> 'd_field_event_store.client.users.DetailsResp.UserDetails_groups'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
        34 -> 'd_field_event_store.client.users.DetailsResp.UserDetails_last_updated'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
        40 -> 'd_field_event_store.client.users.DetailsResp.UserDetails_disabled'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
                1 -> 'skip_64_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
                3 -> 'skip_group_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
                5 -> 'skip_32_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails'(<<>>, 0, 0, _, F@_1, F@_2, R1, F@_4, F@_5, TrUserData) ->
    #'event_store.client.users.DetailsResp.UserDetails'{login_name = F@_1, full_name = F@_2, groups = lists_reverse(R1, TrUserData), last_updated = F@_4, disabled = F@_5}.

'd_field_event_store.client.users.DetailsResp.UserDetails_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, F@_5, TrUserData).

'd_field_event_store.client.users.DetailsResp.UserDetails_full_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_full_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails_full_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, F@_5, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, F@_5, TrUserData).

'd_field_event_store.client.users.DetailsResp.UserDetails_groups'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_groups'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails_groups'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, F@_4, F@_5, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(RestF, 0, 0, F, F@_1, F@_2, cons(NewFValue, Prev, TrUserData), F@_4, F@_5, TrUserData).

'd_field_event_store.client.users.DetailsResp.UserDetails_last_updated'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_last_updated'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails_last_updated'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, F@_5, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(RestF,
                                                                          0,
                                                                          0,
                                                                          F,
                                                                          F@_1,
                                                                          F@_2,
                                                                          F@_3,
                                                                          if Prev == undefined -> NewFValue;
                                                                             true -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Prev, NewFValue, TrUserData)
                                                                          end,
                                                                          F@_5,
                                                                          TrUserData).

'd_field_event_store.client.users.DetailsResp.UserDetails_disabled'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails_disabled'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails_disabled'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, TrUserData).

'skip_varint_event_store.client.users.DetailsResp.UserDetails'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'skip_varint_event_store.client.users.DetailsResp.UserDetails'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'skip_varint_event_store.client.users.DetailsResp.UserDetails'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData);
'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'skip_group_event_store.client.users.DetailsResp.UserDetails'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'skip_32_event_store.client.users.DetailsResp.UserDetails'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'skip_64_event_store.client.users.DetailsResp.UserDetails'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, TrUserData).

'decode_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Bin, 0, 0, 0, id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.users.DetailsResp.UserDetails.DateTime_ticks_since_epoch'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = F@_1};
'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.users.DetailsResp.UserDetails.DateTime_ticks_since_epoch'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = F@_1}.

'd_field_event_store.client.users.DetailsResp.UserDetails.DateTime_ticks_since_epoch'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.DetailsResp.UserDetails.DateTime_ticks_since_epoch'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DetailsResp.UserDetails.DateTime_ticks_since_epoch'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DetailsResp.UserDetails.DateTime'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DetailsResp.UserDetails.DateTime'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp.UserDetails.DateTime'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.DetailsResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.DetailsResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.DetailsResp_user_details'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.DetailsResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsResp'{user_details = F@_1};
'dfp_read_field_def_event_store.client.users.DetailsResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.DetailsResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.DetailsResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.DetailsResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.DetailsResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.DetailsResp_user_details'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.DetailsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.DetailsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.DetailsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.DetailsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.DetailsResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.DetailsResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.DetailsResp'{user_details = F@_1}.

'd_field_event_store.client.users.DetailsResp_user_details'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.DetailsResp_user_details'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.DetailsResp_user_details'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.DetailsResp.UserDetails'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.DetailsResp'(RestF,
                                                              0,
                                                              0,
                                                              F,
                                                              if Prev == undefined -> NewFValue;
                                                                 true -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails'(Prev, NewFValue, TrUserData)
                                                              end,
                                                              TrUserData).

'skip_varint_event_store.client.users.DetailsResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.DetailsResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.DetailsResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.DetailsResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.DetailsResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.DetailsResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.DetailsResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.DetailsResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.DetailsResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.DetailsResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.DetailsResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.DetailsResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.ChangePasswordReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Bin, 0, 0, 0, id([], TrUserData), id([], TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_current_password'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_new_password'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.users.ChangePasswordReq.Options'{login_name = F@_1, current_password = F@_2, new_password = F@_3};
'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dg_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.ChangePasswordReq.Options_login_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_event_store.client.users.ChangePasswordReq.Options_current_password'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        26 -> 'd_field_event_store.client.users.ChangePasswordReq.Options_new_password'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.ChangePasswordReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.users.ChangePasswordReq.Options'{login_name = F@_1, current_password = F@_2, new_password = F@_3}.

'd_field_event_store.client.users.ChangePasswordReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.users.ChangePasswordReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, TrUserData).

'd_field_event_store.client.users.ChangePasswordReq.Options_current_password'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_current_password'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.users.ChangePasswordReq.Options_current_password'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, TrUserData).

'd_field_event_store.client.users.ChangePasswordReq.Options_new_password'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.ChangePasswordReq.Options_new_password'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.users.ChangePasswordReq.Options_new_password'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, TrUserData).

'skip_varint_event_store.client.users.ChangePasswordReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'skip_varint_event_store.client.users.ChangePasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.users.ChangePasswordReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.users.ChangePasswordReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.ChangePasswordReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.users.ChangePasswordReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.users.ChangePasswordReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.users.ChangePasswordReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.users.ChangePasswordReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.users.ChangePasswordReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.ChangePasswordReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.ChangePasswordReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.ChangePasswordReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.ChangePasswordReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.ChangePasswordReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.ChangePasswordReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.ChangePasswordReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.ChangePasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.ChangePasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.ChangePasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.ChangePasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.ChangePasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.ChangePasswordReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.ChangePasswordReq'{options = F@_1}.

'd_field_event_store.client.users.ChangePasswordReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.ChangePasswordReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.ChangePasswordReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.ChangePasswordReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    if Prev == undefined -> NewFValue;
                                                                       true -> 'merge_msg_event_store.client.users.ChangePasswordReq.Options'(Prev, NewFValue, TrUserData)
                                                                    end,
                                                                    TrUserData).

'skip_varint_event_store.client.users.ChangePasswordReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.ChangePasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.ChangePasswordReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.ChangePasswordReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.ChangePasswordReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.ChangePasswordReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.ChangePasswordReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.ChangePasswordReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.ChangePasswordReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.ChangePasswordResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.ChangePasswordResp'{};
'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.ChangePasswordResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.ChangePasswordResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.ChangePasswordResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.ChangePasswordResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.ChangePasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.ChangePasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.ChangePasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.ChangePasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.ChangePasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.ChangePasswordResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.ChangePasswordResp'{}.

'skip_varint_event_store.client.users.ChangePasswordResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.ChangePasswordResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.ChangePasswordResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.ChangePasswordResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.ChangePasswordResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.ChangePasswordResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.ChangePasswordResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.ChangePasswordResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.ChangePasswordResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ChangePasswordResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.users.ResetPasswordReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Bin, 0, 0, 0, id([], TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.users.ResetPasswordReq.Options_login_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.users.ResetPasswordReq.Options_new_password'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.users.ResetPasswordReq.Options'{login_name = F@_1, new_password = F@_2};
'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.ResetPasswordReq.Options_login_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.users.ResetPasswordReq.Options_new_password'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.ResetPasswordReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.users.ResetPasswordReq.Options'{login_name = F@_1, new_password = F@_2}.

'd_field_event_store.client.users.ResetPasswordReq.Options_login_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.ResetPasswordReq.Options_login_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.users.ResetPasswordReq.Options_login_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.users.ResetPasswordReq.Options_new_password'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.users.ResetPasswordReq.Options_new_password'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.users.ResetPasswordReq.Options_new_password'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Utf8:Len/binary, Rest2/binary>> = Rest, {id(unicode:characters_to_list(Utf8, unicode), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.users.ResetPasswordReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.users.ResetPasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.users.ResetPasswordReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.users.ResetPasswordReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.ResetPasswordReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.users.ResetPasswordReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.users.ResetPasswordReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.users.ResetPasswordReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.users.ResetPasswordReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.users.ResetPasswordReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.users.ResetPasswordReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.ResetPasswordReq'{options = F@_1};
'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.users.ResetPasswordReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.users.ResetPasswordReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.ResetPasswordReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.users.ResetPasswordReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.users.ResetPasswordReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.users.ResetPasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.users.ResetPasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.users.ResetPasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.users.ResetPasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.users.ResetPasswordReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.users.ResetPasswordReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.users.ResetPasswordReq'{options = F@_1}.

'd_field_event_store.client.users.ResetPasswordReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.users.ResetPasswordReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.users.ResetPasswordReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.users.ResetPasswordReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(RestF,
                                                                   0,
                                                                   0,
                                                                   F,
                                                                   if Prev == undefined -> NewFValue;
                                                                      true -> 'merge_msg_event_store.client.users.ResetPasswordReq.Options'(Prev, NewFValue, TrUserData)
                                                                   end,
                                                                   TrUserData).

'skip_varint_event_store.client.users.ResetPasswordReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.users.ResetPasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.users.ResetPasswordReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.users.ResetPasswordReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.users.ResetPasswordReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.users.ResetPasswordReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.users.ResetPasswordReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.users.ResetPasswordReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.users.ResetPasswordReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.users.ResetPasswordResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.ResetPasswordResp'{};
'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.users.ResetPasswordResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.users.ResetPasswordResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.users.ResetPasswordResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.users.ResetPasswordResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.users.ResetPasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.users.ResetPasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.users.ResetPasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.users.ResetPasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.users.ResetPasswordResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.users.ResetPasswordResp'(<<>>, 0, 0, _, _) -> #'event_store.client.users.ResetPasswordResp'{}.

'skip_varint_event_store.client.users.ResetPasswordResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.users.ResetPasswordResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.users.ResetPasswordResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.users.ResetPasswordResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.users.ResetPasswordResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.users.ResetPasswordResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.users.ResetPasswordResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.users.ResetPasswordResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.users.ResetPasswordResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.users.ResetPasswordResp'(Rest, Z1, Z2, F, TrUserData).

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New) when element(1, Prev) =:= element(1, New) -> merge_msgs(Prev, New, element(1, Prev), []).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) -> merge_msgs(Prev, New, MsgName, []);
merge_msgs(Prev, New, Opts) when element(1, Prev) =:= element(1, New), is_list(Opts) -> merge_msgs(Prev, New, element(1, Prev), Opts).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.users.CreateReq.Options' -> 'merge_msg_event_store.client.users.CreateReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.CreateReq' -> 'merge_msg_event_store.client.users.CreateReq'(Prev, New, TrUserData);
        'event_store.client.users.CreateResp' -> 'merge_msg_event_store.client.users.CreateResp'(Prev, New, TrUserData);
        'event_store.client.users.UpdateReq.Options' -> 'merge_msg_event_store.client.users.UpdateReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.UpdateReq' -> 'merge_msg_event_store.client.users.UpdateReq'(Prev, New, TrUserData);
        'event_store.client.users.UpdateResp' -> 'merge_msg_event_store.client.users.UpdateResp'(Prev, New, TrUserData);
        'event_store.client.users.DeleteReq.Options' -> 'merge_msg_event_store.client.users.DeleteReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.DeleteReq' -> 'merge_msg_event_store.client.users.DeleteReq'(Prev, New, TrUserData);
        'event_store.client.users.DeleteResp' -> 'merge_msg_event_store.client.users.DeleteResp'(Prev, New, TrUserData);
        'event_store.client.users.EnableReq.Options' -> 'merge_msg_event_store.client.users.EnableReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.EnableReq' -> 'merge_msg_event_store.client.users.EnableReq'(Prev, New, TrUserData);
        'event_store.client.users.EnableResp' -> 'merge_msg_event_store.client.users.EnableResp'(Prev, New, TrUserData);
        'event_store.client.users.DisableReq.Options' -> 'merge_msg_event_store.client.users.DisableReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.DisableReq' -> 'merge_msg_event_store.client.users.DisableReq'(Prev, New, TrUserData);
        'event_store.client.users.DisableResp' -> 'merge_msg_event_store.client.users.DisableResp'(Prev, New, TrUserData);
        'event_store.client.users.DetailsReq.Options' -> 'merge_msg_event_store.client.users.DetailsReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.DetailsReq' -> 'merge_msg_event_store.client.users.DetailsReq'(Prev, New, TrUserData);
        'event_store.client.users.DetailsResp.UserDetails' -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails'(Prev, New, TrUserData);
        'event_store.client.users.DetailsResp.UserDetails.DateTime' -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Prev, New, TrUserData);
        'event_store.client.users.DetailsResp' -> 'merge_msg_event_store.client.users.DetailsResp'(Prev, New, TrUserData);
        'event_store.client.users.ChangePasswordReq.Options' -> 'merge_msg_event_store.client.users.ChangePasswordReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.ChangePasswordReq' -> 'merge_msg_event_store.client.users.ChangePasswordReq'(Prev, New, TrUserData);
        'event_store.client.users.ChangePasswordResp' -> 'merge_msg_event_store.client.users.ChangePasswordResp'(Prev, New, TrUserData);
        'event_store.client.users.ResetPasswordReq.Options' -> 'merge_msg_event_store.client.users.ResetPasswordReq.Options'(Prev, New, TrUserData);
        'event_store.client.users.ResetPasswordReq' -> 'merge_msg_event_store.client.users.ResetPasswordReq'(Prev, New, TrUserData);
        'event_store.client.users.ResetPasswordResp' -> 'merge_msg_event_store.client.users.ResetPasswordResp'(Prev, New, TrUserData)
    end.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.CreateReq.Options'/3}).
'merge_msg_event_store.client.users.CreateReq.Options'(#'event_store.client.users.CreateReq.Options'{login_name = PFlogin_name, password = PFpassword, full_name = PFfull_name, groups = PFgroups},
                                                       #'event_store.client.users.CreateReq.Options'{login_name = NFlogin_name, password = NFpassword, full_name = NFfull_name, groups = NFgroups}, TrUserData) ->
    #'event_store.client.users.CreateReq.Options'{login_name =
                                                      if NFlogin_name =:= undefined -> PFlogin_name;
                                                         true -> NFlogin_name
                                                      end,
                                                  password =
                                                      if NFpassword =:= undefined -> PFpassword;
                                                         true -> NFpassword
                                                      end,
                                                  full_name =
                                                      if NFfull_name =:= undefined -> PFfull_name;
                                                         true -> NFfull_name
                                                      end,
                                                  groups =
                                                      if PFgroups /= undefined, NFgroups /= undefined -> 'erlang_++'(PFgroups, NFgroups, TrUserData);
                                                         PFgroups == undefined -> NFgroups;
                                                         NFgroups == undefined -> PFgroups
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.CreateReq'/3}).
'merge_msg_event_store.client.users.CreateReq'(#'event_store.client.users.CreateReq'{options = PFoptions}, #'event_store.client.users.CreateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.CreateReq'{options =
                                              if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.CreateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                 PFoptions == undefined -> NFoptions;
                                                 NFoptions == undefined -> PFoptions
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.CreateResp'/3}).
'merge_msg_event_store.client.users.CreateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.UpdateReq.Options'/3}).
'merge_msg_event_store.client.users.UpdateReq.Options'(#'event_store.client.users.UpdateReq.Options'{login_name = PFlogin_name, password = PFpassword, full_name = PFfull_name, groups = PFgroups},
                                                       #'event_store.client.users.UpdateReq.Options'{login_name = NFlogin_name, password = NFpassword, full_name = NFfull_name, groups = NFgroups}, TrUserData) ->
    #'event_store.client.users.UpdateReq.Options'{login_name =
                                                      if NFlogin_name =:= undefined -> PFlogin_name;
                                                         true -> NFlogin_name
                                                      end,
                                                  password =
                                                      if NFpassword =:= undefined -> PFpassword;
                                                         true -> NFpassword
                                                      end,
                                                  full_name =
                                                      if NFfull_name =:= undefined -> PFfull_name;
                                                         true -> NFfull_name
                                                      end,
                                                  groups =
                                                      if PFgroups /= undefined, NFgroups /= undefined -> 'erlang_++'(PFgroups, NFgroups, TrUserData);
                                                         PFgroups == undefined -> NFgroups;
                                                         NFgroups == undefined -> PFgroups
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.UpdateReq'/3}).
'merge_msg_event_store.client.users.UpdateReq'(#'event_store.client.users.UpdateReq'{options = PFoptions}, #'event_store.client.users.UpdateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.UpdateReq'{options =
                                              if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.UpdateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                 PFoptions == undefined -> NFoptions;
                                                 NFoptions == undefined -> PFoptions
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.UpdateResp'/3}).
'merge_msg_event_store.client.users.UpdateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DeleteReq.Options'/3}).
'merge_msg_event_store.client.users.DeleteReq.Options'(#'event_store.client.users.DeleteReq.Options'{login_name = PFlogin_name}, #'event_store.client.users.DeleteReq.Options'{login_name = NFlogin_name}, _) ->
    #'event_store.client.users.DeleteReq.Options'{login_name =
                                                      if NFlogin_name =:= undefined -> PFlogin_name;
                                                         true -> NFlogin_name
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DeleteReq'/3}).
'merge_msg_event_store.client.users.DeleteReq'(#'event_store.client.users.DeleteReq'{options = PFoptions}, #'event_store.client.users.DeleteReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.DeleteReq'{options =
                                              if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.DeleteReq.Options'(PFoptions, NFoptions, TrUserData);
                                                 PFoptions == undefined -> NFoptions;
                                                 NFoptions == undefined -> PFoptions
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DeleteResp'/3}).
'merge_msg_event_store.client.users.DeleteResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.EnableReq.Options'/3}).
'merge_msg_event_store.client.users.EnableReq.Options'(#'event_store.client.users.EnableReq.Options'{login_name = PFlogin_name}, #'event_store.client.users.EnableReq.Options'{login_name = NFlogin_name}, _) ->
    #'event_store.client.users.EnableReq.Options'{login_name =
                                                      if NFlogin_name =:= undefined -> PFlogin_name;
                                                         true -> NFlogin_name
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.EnableReq'/3}).
'merge_msg_event_store.client.users.EnableReq'(#'event_store.client.users.EnableReq'{options = PFoptions}, #'event_store.client.users.EnableReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.EnableReq'{options =
                                              if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.EnableReq.Options'(PFoptions, NFoptions, TrUserData);
                                                 PFoptions == undefined -> NFoptions;
                                                 NFoptions == undefined -> PFoptions
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.EnableResp'/3}).
'merge_msg_event_store.client.users.EnableResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DisableReq.Options'/3}).
'merge_msg_event_store.client.users.DisableReq.Options'(#'event_store.client.users.DisableReq.Options'{login_name = PFlogin_name}, #'event_store.client.users.DisableReq.Options'{login_name = NFlogin_name}, _) ->
    #'event_store.client.users.DisableReq.Options'{login_name =
                                                       if NFlogin_name =:= undefined -> PFlogin_name;
                                                          true -> NFlogin_name
                                                       end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DisableReq'/3}).
'merge_msg_event_store.client.users.DisableReq'(#'event_store.client.users.DisableReq'{options = PFoptions}, #'event_store.client.users.DisableReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.DisableReq'{options =
                                               if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.DisableReq.Options'(PFoptions, NFoptions, TrUserData);
                                                  PFoptions == undefined -> NFoptions;
                                                  NFoptions == undefined -> PFoptions
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DisableResp'/3}).
'merge_msg_event_store.client.users.DisableResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DetailsReq.Options'/3}).
'merge_msg_event_store.client.users.DetailsReq.Options'(#'event_store.client.users.DetailsReq.Options'{login_name = PFlogin_name}, #'event_store.client.users.DetailsReq.Options'{login_name = NFlogin_name}, _) ->
    #'event_store.client.users.DetailsReq.Options'{login_name =
                                                       if NFlogin_name =:= undefined -> PFlogin_name;
                                                          true -> NFlogin_name
                                                       end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DetailsReq'/3}).
'merge_msg_event_store.client.users.DetailsReq'(#'event_store.client.users.DetailsReq'{options = PFoptions}, #'event_store.client.users.DetailsReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.DetailsReq'{options =
                                               if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.DetailsReq.Options'(PFoptions, NFoptions, TrUserData);
                                                  PFoptions == undefined -> NFoptions;
                                                  NFoptions == undefined -> PFoptions
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DetailsResp.UserDetails'/3}).
'merge_msg_event_store.client.users.DetailsResp.UserDetails'(#'event_store.client.users.DetailsResp.UserDetails'{login_name = PFlogin_name, full_name = PFfull_name, groups = PFgroups, last_updated = PFlast_updated, disabled = PFdisabled},
                                                             #'event_store.client.users.DetailsResp.UserDetails'{login_name = NFlogin_name, full_name = NFfull_name, groups = NFgroups, last_updated = NFlast_updated, disabled = NFdisabled}, TrUserData) ->
    #'event_store.client.users.DetailsResp.UserDetails'{login_name =
                                                            if NFlogin_name =:= undefined -> PFlogin_name;
                                                               true -> NFlogin_name
                                                            end,
                                                        full_name =
                                                            if NFfull_name =:= undefined -> PFfull_name;
                                                               true -> NFfull_name
                                                            end,
                                                        groups =
                                                            if PFgroups /= undefined, NFgroups /= undefined -> 'erlang_++'(PFgroups, NFgroups, TrUserData);
                                                               PFgroups == undefined -> NFgroups;
                                                               NFgroups == undefined -> PFgroups
                                                            end,
                                                        last_updated =
                                                            if PFlast_updated /= undefined, NFlast_updated /= undefined -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(PFlast_updated, NFlast_updated, TrUserData);
                                                               PFlast_updated == undefined -> NFlast_updated;
                                                               NFlast_updated == undefined -> PFlast_updated
                                                            end,
                                                        disabled =
                                                            if NFdisabled =:= undefined -> PFdisabled;
                                                               true -> NFdisabled
                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'/3}).
'merge_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(#'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = PFticks_since_epoch},
                                                                      #'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = NFticks_since_epoch}, _) ->
    #'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch =
                                                                     if NFticks_since_epoch =:= undefined -> PFticks_since_epoch;
                                                                        true -> NFticks_since_epoch
                                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.DetailsResp'/3}).
'merge_msg_event_store.client.users.DetailsResp'(#'event_store.client.users.DetailsResp'{user_details = PFuser_details}, #'event_store.client.users.DetailsResp'{user_details = NFuser_details}, TrUserData) ->
    #'event_store.client.users.DetailsResp'{user_details =
                                                if PFuser_details /= undefined, NFuser_details /= undefined -> 'merge_msg_event_store.client.users.DetailsResp.UserDetails'(PFuser_details, NFuser_details, TrUserData);
                                                   PFuser_details == undefined -> NFuser_details;
                                                   NFuser_details == undefined -> PFuser_details
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ChangePasswordReq.Options'/3}).
'merge_msg_event_store.client.users.ChangePasswordReq.Options'(#'event_store.client.users.ChangePasswordReq.Options'{login_name = PFlogin_name, current_password = PFcurrent_password, new_password = PFnew_password},
                                                               #'event_store.client.users.ChangePasswordReq.Options'{login_name = NFlogin_name, current_password = NFcurrent_password, new_password = NFnew_password}, _) ->
    #'event_store.client.users.ChangePasswordReq.Options'{login_name =
                                                              if NFlogin_name =:= undefined -> PFlogin_name;
                                                                 true -> NFlogin_name
                                                              end,
                                                          current_password =
                                                              if NFcurrent_password =:= undefined -> PFcurrent_password;
                                                                 true -> NFcurrent_password
                                                              end,
                                                          new_password =
                                                              if NFnew_password =:= undefined -> PFnew_password;
                                                                 true -> NFnew_password
                                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ChangePasswordReq'/3}).
'merge_msg_event_store.client.users.ChangePasswordReq'(#'event_store.client.users.ChangePasswordReq'{options = PFoptions}, #'event_store.client.users.ChangePasswordReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.ChangePasswordReq'{options =
                                                      if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.ChangePasswordReq.Options'(PFoptions, NFoptions, TrUserData);
                                                         PFoptions == undefined -> NFoptions;
                                                         NFoptions == undefined -> PFoptions
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ChangePasswordResp'/3}).
'merge_msg_event_store.client.users.ChangePasswordResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ResetPasswordReq.Options'/3}).
'merge_msg_event_store.client.users.ResetPasswordReq.Options'(#'event_store.client.users.ResetPasswordReq.Options'{login_name = PFlogin_name, new_password = PFnew_password},
                                                              #'event_store.client.users.ResetPasswordReq.Options'{login_name = NFlogin_name, new_password = NFnew_password}, _) ->
    #'event_store.client.users.ResetPasswordReq.Options'{login_name =
                                                             if NFlogin_name =:= undefined -> PFlogin_name;
                                                                true -> NFlogin_name
                                                             end,
                                                         new_password =
                                                             if NFnew_password =:= undefined -> PFnew_password;
                                                                true -> NFnew_password
                                                             end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ResetPasswordReq'/3}).
'merge_msg_event_store.client.users.ResetPasswordReq'(#'event_store.client.users.ResetPasswordReq'{options = PFoptions}, #'event_store.client.users.ResetPasswordReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.users.ResetPasswordReq'{options =
                                                     if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.users.ResetPasswordReq.Options'(PFoptions, NFoptions, TrUserData);
                                                        PFoptions == undefined -> NFoptions;
                                                        NFoptions == undefined -> PFoptions
                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.users.ResetPasswordResp'/3}).
'merge_msg_event_store.client.users.ResetPasswordResp'(_Prev, New, _TrUserData) -> New.


verify_msg(Msg) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), []);
verify_msg(X) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName) when is_atom(MsgName) -> verify_msg(Msg, MsgName, []);
verify_msg(Msg, Opts) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), Opts);
verify_msg(X, _Opts) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.users.CreateReq.Options' -> 'v_msg_event_store.client.users.CreateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.CreateReq' -> 'v_msg_event_store.client.users.CreateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.CreateResp' -> 'v_msg_event_store.client.users.CreateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.UpdateReq.Options' -> 'v_msg_event_store.client.users.UpdateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.UpdateReq' -> 'v_msg_event_store.client.users.UpdateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.UpdateResp' -> 'v_msg_event_store.client.users.UpdateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DeleteReq.Options' -> 'v_msg_event_store.client.users.DeleteReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DeleteReq' -> 'v_msg_event_store.client.users.DeleteReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DeleteResp' -> 'v_msg_event_store.client.users.DeleteResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.EnableReq.Options' -> 'v_msg_event_store.client.users.EnableReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.EnableReq' -> 'v_msg_event_store.client.users.EnableReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.EnableResp' -> 'v_msg_event_store.client.users.EnableResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DisableReq.Options' -> 'v_msg_event_store.client.users.DisableReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DisableReq' -> 'v_msg_event_store.client.users.DisableReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DisableResp' -> 'v_msg_event_store.client.users.DisableResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DetailsReq.Options' -> 'v_msg_event_store.client.users.DetailsReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DetailsReq' -> 'v_msg_event_store.client.users.DetailsReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DetailsResp.UserDetails' -> 'v_msg_event_store.client.users.DetailsResp.UserDetails'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DetailsResp.UserDetails.DateTime' -> 'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(Msg, [MsgName], TrUserData);
        'event_store.client.users.DetailsResp' -> 'v_msg_event_store.client.users.DetailsResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ChangePasswordReq.Options' -> 'v_msg_event_store.client.users.ChangePasswordReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ChangePasswordReq' -> 'v_msg_event_store.client.users.ChangePasswordReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ChangePasswordResp' -> 'v_msg_event_store.client.users.ChangePasswordResp'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ResetPasswordReq.Options' -> 'v_msg_event_store.client.users.ResetPasswordReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ResetPasswordReq' -> 'v_msg_event_store.client.users.ResetPasswordReq'(Msg, [MsgName], TrUserData);
        'event_store.client.users.ResetPasswordResp' -> 'v_msg_event_store.client.users.ResetPasswordResp'(Msg, [MsgName], TrUserData);
        _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,'v_msg_event_store.client.users.CreateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.CreateReq.Options'/3}).
'v_msg_event_store.client.users.CreateReq.Options'(#'event_store.client.users.CreateReq.Options'{login_name = F1, password = F2, full_name = F3, groups = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [password | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [full_name | Path], TrUserData)
    end,
    if is_list(F4) ->
           _ = [v_type_string(Elem, [groups | Path], TrUserData) || Elem <- F4],
           ok;
       true -> mk_type_error({invalid_list_of, string}, F4, [groups | Path])
    end,
    ok;
'v_msg_event_store.client.users.CreateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.CreateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.CreateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.CreateReq'/3}).
'v_msg_event_store.client.users.CreateReq'(#'event_store.client.users.CreateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.CreateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.CreateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.CreateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.CreateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.CreateResp'/3}).
'v_msg_event_store.client.users.CreateResp'(#'event_store.client.users.CreateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.CreateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.CreateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.UpdateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.UpdateReq.Options'/3}).
'v_msg_event_store.client.users.UpdateReq.Options'(#'event_store.client.users.UpdateReq.Options'{login_name = F1, password = F2, full_name = F3, groups = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [password | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [full_name | Path], TrUserData)
    end,
    if is_list(F4) ->
           _ = [v_type_string(Elem, [groups | Path], TrUserData) || Elem <- F4],
           ok;
       true -> mk_type_error({invalid_list_of, string}, F4, [groups | Path])
    end,
    ok;
'v_msg_event_store.client.users.UpdateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.UpdateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.UpdateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.UpdateReq'/3}).
'v_msg_event_store.client.users.UpdateReq'(#'event_store.client.users.UpdateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.UpdateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.UpdateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.UpdateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.UpdateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.UpdateResp'/3}).
'v_msg_event_store.client.users.UpdateResp'(#'event_store.client.users.UpdateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.UpdateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.UpdateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DeleteReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DeleteReq.Options'/3}).
'v_msg_event_store.client.users.DeleteReq.Options'(#'event_store.client.users.DeleteReq.Options'{login_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DeleteReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DeleteReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DeleteReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DeleteReq'/3}).
'v_msg_event_store.client.users.DeleteReq'(#'event_store.client.users.DeleteReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.DeleteReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DeleteReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DeleteReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DeleteResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DeleteResp'/3}).
'v_msg_event_store.client.users.DeleteResp'(#'event_store.client.users.DeleteResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.DeleteResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DeleteResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.EnableReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.EnableReq.Options'/3}).
'v_msg_event_store.client.users.EnableReq.Options'(#'event_store.client.users.EnableReq.Options'{login_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.EnableReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.EnableReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.EnableReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.EnableReq'/3}).
'v_msg_event_store.client.users.EnableReq'(#'event_store.client.users.EnableReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.EnableReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.EnableReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.EnableReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.EnableResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.EnableResp'/3}).
'v_msg_event_store.client.users.EnableResp'(#'event_store.client.users.EnableResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.EnableResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.EnableResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DisableReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DisableReq.Options'/3}).
'v_msg_event_store.client.users.DisableReq.Options'(#'event_store.client.users.DisableReq.Options'{login_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DisableReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DisableReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DisableReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DisableReq'/3}).
'v_msg_event_store.client.users.DisableReq'(#'event_store.client.users.DisableReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.DisableReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DisableReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DisableReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DisableResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DisableResp'/3}).
'v_msg_event_store.client.users.DisableResp'(#'event_store.client.users.DisableResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.DisableResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DisableResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DetailsReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DetailsReq.Options'/3}).
'v_msg_event_store.client.users.DetailsReq.Options'(#'event_store.client.users.DetailsReq.Options'{login_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DetailsReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DetailsReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DetailsReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DetailsReq'/3}).
'v_msg_event_store.client.users.DetailsReq'(#'event_store.client.users.DetailsReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.DetailsReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DetailsReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DetailsReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DetailsResp.UserDetails'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DetailsResp.UserDetails'/3}).
'v_msg_event_store.client.users.DetailsResp.UserDetails'(#'event_store.client.users.DetailsResp.UserDetails'{login_name = F1, full_name = F2, groups = F3, last_updated = F4, disabled = F5}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [full_name | Path], TrUserData)
    end,
    if is_list(F3) ->
           _ = [v_type_string(Elem, [groups | Path], TrUserData) || Elem <- F3],
           ok;
       true -> mk_type_error({invalid_list_of, string}, F3, [groups | Path])
    end,
    if F4 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(F4, [last_updated | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_bool(F5, [disabled | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DetailsResp.UserDetails'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DetailsResp.UserDetails'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'/3}).
'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(#'event_store.client.users.DetailsResp.UserDetails.DateTime'{ticks_since_epoch = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [ticks_since_epoch | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DetailsResp.UserDetails.DateTime'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DetailsResp.UserDetails.DateTime'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.DetailsResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.DetailsResp'/3}).
'v_msg_event_store.client.users.DetailsResp'(#'event_store.client.users.DetailsResp'{user_details = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.DetailsResp.UserDetails'(F1, [user_details | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.DetailsResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.DetailsResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ChangePasswordReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ChangePasswordReq.Options'/3}).
'v_msg_event_store.client.users.ChangePasswordReq.Options'(#'event_store.client.users.ChangePasswordReq.Options'{login_name = F1, current_password = F2, new_password = F3}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [current_password | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [new_password | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.ChangePasswordReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ChangePasswordReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ChangePasswordReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ChangePasswordReq'/3}).
'v_msg_event_store.client.users.ChangePasswordReq'(#'event_store.client.users.ChangePasswordReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.ChangePasswordReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.ChangePasswordReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ChangePasswordReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ChangePasswordResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ChangePasswordResp'/3}).
'v_msg_event_store.client.users.ChangePasswordResp'(#'event_store.client.users.ChangePasswordResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.ChangePasswordResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ChangePasswordResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ResetPasswordReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ResetPasswordReq.Options'/3}).
'v_msg_event_store.client.users.ResetPasswordReq.Options'(#'event_store.client.users.ResetPasswordReq.Options'{login_name = F1, new_password = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [login_name | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [new_password | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.ResetPasswordReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ResetPasswordReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ResetPasswordReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ResetPasswordReq'/3}).
'v_msg_event_store.client.users.ResetPasswordReq'(#'event_store.client.users.ResetPasswordReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.users.ResetPasswordReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.users.ResetPasswordReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ResetPasswordReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.users.ResetPasswordResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.users.ResetPasswordResp'/3}).
'v_msg_event_store.client.users.ResetPasswordResp'(#'event_store.client.users.ResetPasswordResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.users.ResetPasswordResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.users.ResetPasswordResp'}, X, Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData) when -9223372036854775808 =< N, N =< 9223372036854775807 -> ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int64, signed, 64}, N, Path);
v_type_int64(X, Path, _TrUserData) -> mk_type_error({bad_integer, int64, signed, 64}, X, Path).

-compile({nowarn_unused_function,v_type_bool/3}).
-dialyzer({nowarn_function,v_type_bool/3}).
v_type_bool(false, _Path, _TrUserData) -> ok;
v_type_bool(true, _Path, _TrUserData) -> ok;
v_type_bool(0, _Path, _TrUserData) -> ok;
v_type_bool(1, _Path, _TrUserData) -> ok;
v_type_bool(X, Path, _TrUserData) -> mk_type_error(bad_boolean_value, X, Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
        B when is_binary(B) -> ok;
        {error, _, _} -> mk_type_error(bad_unicode_string, S, Path)
    catch
        error:badarg -> mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) -> mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error, {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) -> lists:append(lists:join(".", lists:map(fun atom_to_list/1, lists:reverse(PathR)))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.


get_msg_defs() ->
    [{{msg, 'event_store.client.users.CreateReq.Options'},
      [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = full_name, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []},
       #field{name = groups, fnum = 4, rnum = 5, type = string, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.users.CreateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.CreateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.CreateResp'}, []},
     {{msg, 'event_store.client.users.UpdateReq.Options'},
      [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = full_name, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []},
       #field{name = groups, fnum = 4, rnum = 5, type = string, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.users.UpdateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.UpdateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.UpdateResp'}, []},
     {{msg, 'event_store.client.users.DeleteReq.Options'}, [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DeleteReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DeleteReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DeleteResp'}, []},
     {{msg, 'event_store.client.users.EnableReq.Options'}, [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.EnableReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.EnableReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.EnableResp'}, []},
     {{msg, 'event_store.client.users.DisableReq.Options'}, [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DisableReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DisableReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DisableResp'}, []},
     {{msg, 'event_store.client.users.DetailsReq.Options'}, [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DetailsReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DetailsReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DetailsResp.UserDetails'},
      [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = full_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = groups, fnum = 3, rnum = 4, type = string, occurrence = repeated, opts = []},
       #field{name = last_updated, fnum = 4, rnum = 5, type = {msg, 'event_store.client.users.DetailsResp.UserDetails.DateTime'}, occurrence = optional, opts = []},
       #field{name = disabled, fnum = 5, rnum = 6, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DetailsResp.UserDetails.DateTime'}, [#field{name = ticks_since_epoch, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.DetailsResp'}, [#field{name = user_details, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DetailsResp.UserDetails'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.ChangePasswordReq.Options'},
      [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
       #field{name = current_password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = new_password, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.ChangePasswordReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.ChangePasswordReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.ChangePasswordResp'}, []},
     {{msg, 'event_store.client.users.ResetPasswordReq.Options'},
      [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = new_password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.ResetPasswordReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.ResetPasswordReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.users.ResetPasswordResp'}, []}].


get_msg_names() ->
    ['event_store.client.users.CreateReq.Options',
     'event_store.client.users.CreateReq',
     'event_store.client.users.CreateResp',
     'event_store.client.users.UpdateReq.Options',
     'event_store.client.users.UpdateReq',
     'event_store.client.users.UpdateResp',
     'event_store.client.users.DeleteReq.Options',
     'event_store.client.users.DeleteReq',
     'event_store.client.users.DeleteResp',
     'event_store.client.users.EnableReq.Options',
     'event_store.client.users.EnableReq',
     'event_store.client.users.EnableResp',
     'event_store.client.users.DisableReq.Options',
     'event_store.client.users.DisableReq',
     'event_store.client.users.DisableResp',
     'event_store.client.users.DetailsReq.Options',
     'event_store.client.users.DetailsReq',
     'event_store.client.users.DetailsResp.UserDetails',
     'event_store.client.users.DetailsResp.UserDetails.DateTime',
     'event_store.client.users.DetailsResp',
     'event_store.client.users.ChangePasswordReq.Options',
     'event_store.client.users.ChangePasswordReq',
     'event_store.client.users.ChangePasswordResp',
     'event_store.client.users.ResetPasswordReq.Options',
     'event_store.client.users.ResetPasswordReq',
     'event_store.client.users.ResetPasswordResp'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['event_store.client.users.CreateReq.Options',
     'event_store.client.users.CreateReq',
     'event_store.client.users.CreateResp',
     'event_store.client.users.UpdateReq.Options',
     'event_store.client.users.UpdateReq',
     'event_store.client.users.UpdateResp',
     'event_store.client.users.DeleteReq.Options',
     'event_store.client.users.DeleteReq',
     'event_store.client.users.DeleteResp',
     'event_store.client.users.EnableReq.Options',
     'event_store.client.users.EnableReq',
     'event_store.client.users.EnableResp',
     'event_store.client.users.DisableReq.Options',
     'event_store.client.users.DisableReq',
     'event_store.client.users.DisableResp',
     'event_store.client.users.DetailsReq.Options',
     'event_store.client.users.DetailsReq',
     'event_store.client.users.DetailsResp.UserDetails',
     'event_store.client.users.DetailsResp.UserDetails.DateTime',
     'event_store.client.users.DetailsResp',
     'event_store.client.users.ChangePasswordReq.Options',
     'event_store.client.users.ChangePasswordReq',
     'event_store.client.users.ChangePasswordResp',
     'event_store.client.users.ResetPasswordReq.Options',
     'event_store.client.users.ResetPasswordReq',
     'event_store.client.users.ResetPasswordResp'].


get_enum_names() -> [].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
        Fs when is_list(Fs) -> Fs;
        error -> erlang:error({no_such_msg, MsgName})
    end.


-spec fetch_enum_def(_) -> no_return().
fetch_enum_def(EnumName) -> erlang:error({no_such_enum, EnumName}).


find_msg_def('event_store.client.users.CreateReq.Options') ->
    [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = full_name, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []},
     #field{name = groups, fnum = 4, rnum = 5, type = string, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.users.CreateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.CreateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.CreateResp') -> [];
find_msg_def('event_store.client.users.UpdateReq.Options') ->
    [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = full_name, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []},
     #field{name = groups, fnum = 4, rnum = 5, type = string, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.users.UpdateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.UpdateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.UpdateResp') -> [];
find_msg_def('event_store.client.users.DeleteReq.Options') -> [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DeleteReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DeleteReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DeleteResp') -> [];
find_msg_def('event_store.client.users.EnableReq.Options') -> [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.EnableReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.EnableReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.EnableResp') -> [];
find_msg_def('event_store.client.users.DisableReq.Options') -> [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DisableReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DisableReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DisableResp') -> [];
find_msg_def('event_store.client.users.DetailsReq.Options') -> [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DetailsReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DetailsReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DetailsResp.UserDetails') ->
    [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = full_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = groups, fnum = 3, rnum = 4, type = string, occurrence = repeated, opts = []},
     #field{name = last_updated, fnum = 4, rnum = 5, type = {msg, 'event_store.client.users.DetailsResp.UserDetails.DateTime'}, occurrence = optional, opts = []},
     #field{name = disabled, fnum = 5, rnum = 6, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DetailsResp.UserDetails.DateTime') -> [#field{name = ticks_since_epoch, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.DetailsResp') -> [#field{name = user_details, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.DetailsResp.UserDetails'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.ChangePasswordReq.Options') ->
    [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []},
     #field{name = current_password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = new_password, fnum = 3, rnum = 4, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.ChangePasswordReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.ChangePasswordReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.ChangePasswordResp') -> [];
find_msg_def('event_store.client.users.ResetPasswordReq.Options') ->
    [#field{name = login_name, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = new_password, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.ResetPasswordReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.users.ResetPasswordReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.users.ResetPasswordResp') -> [];
find_msg_def(_) -> error.


find_enum_def(_) -> error.


-spec enum_symbol_by_value(_, _) -> no_return().
enum_symbol_by_value(E, V) -> erlang:error({no_enum_defs, E, V}).


-spec enum_value_by_symbol(_, _) -> no_return().
enum_value_by_symbol(E, V) -> erlang:error({no_enum_defs, E, V}).



get_service_names() -> ['event_store.client.users.Users'].


get_service_def('event_store.client.users.Users') ->
    {{service, 'event_store.client.users.Users'},
     [#rpc{name = 'Create', input = 'event_store.client.users.CreateReq', output = 'event_store.client.users.CreateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Update', input = 'event_store.client.users.UpdateReq', output = 'event_store.client.users.UpdateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Delete', input = 'event_store.client.users.DeleteReq', output = 'event_store.client.users.DeleteResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Disable', input = 'event_store.client.users.DisableReq', output = 'event_store.client.users.DisableResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Enable', input = 'event_store.client.users.EnableReq', output = 'event_store.client.users.EnableResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Details', input = 'event_store.client.users.DetailsReq', output = 'event_store.client.users.DetailsResp', input_stream = false, output_stream = true, opts = []},
      #rpc{name = 'ChangePassword', input = 'event_store.client.users.ChangePasswordReq', output = 'event_store.client.users.ChangePasswordResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'ResetPassword', input = 'event_store.client.users.ResetPasswordReq', output = 'event_store.client.users.ResetPasswordResp', input_stream = false, output_stream = false, opts = []}]};
get_service_def(_) -> error.


get_rpc_names('event_store.client.users.Users') -> ['Create', 'Update', 'Delete', 'Disable', 'Enable', 'Details', 'ChangePassword', 'ResetPassword'];
get_rpc_names(_) -> error.


find_rpc_def('event_store.client.users.Users', RpcName) -> 'find_rpc_def_event_store.client.users.Users'(RpcName);
find_rpc_def(_, _) -> error.


'find_rpc_def_event_store.client.users.Users'('Create') -> #rpc{name = 'Create', input = 'event_store.client.users.CreateReq', output = 'event_store.client.users.CreateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('Update') -> #rpc{name = 'Update', input = 'event_store.client.users.UpdateReq', output = 'event_store.client.users.UpdateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('Delete') -> #rpc{name = 'Delete', input = 'event_store.client.users.DeleteReq', output = 'event_store.client.users.DeleteResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('Disable') -> #rpc{name = 'Disable', input = 'event_store.client.users.DisableReq', output = 'event_store.client.users.DisableResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('Enable') -> #rpc{name = 'Enable', input = 'event_store.client.users.EnableReq', output = 'event_store.client.users.EnableResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('Details') -> #rpc{name = 'Details', input = 'event_store.client.users.DetailsReq', output = 'event_store.client.users.DetailsResp', input_stream = false, output_stream = true, opts = []};
'find_rpc_def_event_store.client.users.Users'('ChangePassword') ->
    #rpc{name = 'ChangePassword', input = 'event_store.client.users.ChangePasswordReq', output = 'event_store.client.users.ChangePasswordResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'('ResetPassword') ->
    #rpc{name = 'ResetPassword', input = 'event_store.client.users.ResetPasswordReq', output = 'event_store.client.users.ResetPasswordResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.users.Users'(_) -> error.


fetch_rpc_def(ServiceName, RpcName) ->
    case find_rpc_def(ServiceName, RpcName) of
        Def when is_tuple(Def) -> Def;
        error -> erlang:error({no_such_rpc, ServiceName, RpcName})
    end.


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
fqbin_to_service_name(<<"event_store.client.users.Users">>) -> 'event_store.client.users.Users';
fqbin_to_service_name(X) -> error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
service_name_to_fqbin('event_store.client.users.Users') -> <<"event_store.client.users.Users">>;
service_name_to_fqbin(X) -> error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Create">>) -> {'event_store.client.users.Users', 'Create'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Update">>) -> {'event_store.client.users.Users', 'Update'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Delete">>) -> {'event_store.client.users.Users', 'Delete'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Disable">>) -> {'event_store.client.users.Users', 'Disable'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Enable">>) -> {'event_store.client.users.Users', 'Enable'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"Details">>) -> {'event_store.client.users.Users', 'Details'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"ChangePassword">>) -> {'event_store.client.users.Users', 'ChangePassword'};
fqbins_to_service_and_rpc_name(<<"event_store.client.users.Users">>, <<"ResetPassword">>) -> {'event_store.client.users.Users', 'ResetPassword'};
fqbins_to_service_and_rpc_name(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Create') -> {<<"event_store.client.users.Users">>, <<"Create">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Update') -> {<<"event_store.client.users.Users">>, <<"Update">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Delete') -> {<<"event_store.client.users.Users">>, <<"Delete">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Disable') -> {<<"event_store.client.users.Users">>, <<"Disable">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Enable') -> {<<"event_store.client.users.Users">>, <<"Enable">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'Details') -> {<<"event_store.client.users.Users">>, <<"Details">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'ChangePassword') -> {<<"event_store.client.users.Users">>, <<"ChangePassword">>};
service_and_rpc_name_to_fqbins('event_store.client.users.Users', 'ResetPassword') -> {<<"event_store.client.users.Users">>, <<"ResetPassword">>};
service_and_rpc_name_to_fqbins(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"event_store.client.users.CreateReq.Options">>) -> 'event_store.client.users.CreateReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.CreateReq">>) -> 'event_store.client.users.CreateReq';
fqbin_to_msg_name(<<"event_store.client.users.CreateResp">>) -> 'event_store.client.users.CreateResp';
fqbin_to_msg_name(<<"event_store.client.users.UpdateReq.Options">>) -> 'event_store.client.users.UpdateReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.UpdateReq">>) -> 'event_store.client.users.UpdateReq';
fqbin_to_msg_name(<<"event_store.client.users.UpdateResp">>) -> 'event_store.client.users.UpdateResp';
fqbin_to_msg_name(<<"event_store.client.users.DeleteReq.Options">>) -> 'event_store.client.users.DeleteReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.DeleteReq">>) -> 'event_store.client.users.DeleteReq';
fqbin_to_msg_name(<<"event_store.client.users.DeleteResp">>) -> 'event_store.client.users.DeleteResp';
fqbin_to_msg_name(<<"event_store.client.users.EnableReq.Options">>) -> 'event_store.client.users.EnableReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.EnableReq">>) -> 'event_store.client.users.EnableReq';
fqbin_to_msg_name(<<"event_store.client.users.EnableResp">>) -> 'event_store.client.users.EnableResp';
fqbin_to_msg_name(<<"event_store.client.users.DisableReq.Options">>) -> 'event_store.client.users.DisableReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.DisableReq">>) -> 'event_store.client.users.DisableReq';
fqbin_to_msg_name(<<"event_store.client.users.DisableResp">>) -> 'event_store.client.users.DisableResp';
fqbin_to_msg_name(<<"event_store.client.users.DetailsReq.Options">>) -> 'event_store.client.users.DetailsReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.DetailsReq">>) -> 'event_store.client.users.DetailsReq';
fqbin_to_msg_name(<<"event_store.client.users.DetailsResp.UserDetails">>) -> 'event_store.client.users.DetailsResp.UserDetails';
fqbin_to_msg_name(<<"event_store.client.users.DetailsResp.UserDetails.DateTime">>) -> 'event_store.client.users.DetailsResp.UserDetails.DateTime';
fqbin_to_msg_name(<<"event_store.client.users.DetailsResp">>) -> 'event_store.client.users.DetailsResp';
fqbin_to_msg_name(<<"event_store.client.users.ChangePasswordReq.Options">>) -> 'event_store.client.users.ChangePasswordReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.ChangePasswordReq">>) -> 'event_store.client.users.ChangePasswordReq';
fqbin_to_msg_name(<<"event_store.client.users.ChangePasswordResp">>) -> 'event_store.client.users.ChangePasswordResp';
fqbin_to_msg_name(<<"event_store.client.users.ResetPasswordReq.Options">>) -> 'event_store.client.users.ResetPasswordReq.Options';
fqbin_to_msg_name(<<"event_store.client.users.ResetPasswordReq">>) -> 'event_store.client.users.ResetPasswordReq';
fqbin_to_msg_name(<<"event_store.client.users.ResetPasswordResp">>) -> 'event_store.client.users.ResetPasswordResp';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('event_store.client.users.CreateReq.Options') -> <<"event_store.client.users.CreateReq.Options">>;
msg_name_to_fqbin('event_store.client.users.CreateReq') -> <<"event_store.client.users.CreateReq">>;
msg_name_to_fqbin('event_store.client.users.CreateResp') -> <<"event_store.client.users.CreateResp">>;
msg_name_to_fqbin('event_store.client.users.UpdateReq.Options') -> <<"event_store.client.users.UpdateReq.Options">>;
msg_name_to_fqbin('event_store.client.users.UpdateReq') -> <<"event_store.client.users.UpdateReq">>;
msg_name_to_fqbin('event_store.client.users.UpdateResp') -> <<"event_store.client.users.UpdateResp">>;
msg_name_to_fqbin('event_store.client.users.DeleteReq.Options') -> <<"event_store.client.users.DeleteReq.Options">>;
msg_name_to_fqbin('event_store.client.users.DeleteReq') -> <<"event_store.client.users.DeleteReq">>;
msg_name_to_fqbin('event_store.client.users.DeleteResp') -> <<"event_store.client.users.DeleteResp">>;
msg_name_to_fqbin('event_store.client.users.EnableReq.Options') -> <<"event_store.client.users.EnableReq.Options">>;
msg_name_to_fqbin('event_store.client.users.EnableReq') -> <<"event_store.client.users.EnableReq">>;
msg_name_to_fqbin('event_store.client.users.EnableResp') -> <<"event_store.client.users.EnableResp">>;
msg_name_to_fqbin('event_store.client.users.DisableReq.Options') -> <<"event_store.client.users.DisableReq.Options">>;
msg_name_to_fqbin('event_store.client.users.DisableReq') -> <<"event_store.client.users.DisableReq">>;
msg_name_to_fqbin('event_store.client.users.DisableResp') -> <<"event_store.client.users.DisableResp">>;
msg_name_to_fqbin('event_store.client.users.DetailsReq.Options') -> <<"event_store.client.users.DetailsReq.Options">>;
msg_name_to_fqbin('event_store.client.users.DetailsReq') -> <<"event_store.client.users.DetailsReq">>;
msg_name_to_fqbin('event_store.client.users.DetailsResp.UserDetails') -> <<"event_store.client.users.DetailsResp.UserDetails">>;
msg_name_to_fqbin('event_store.client.users.DetailsResp.UserDetails.DateTime') -> <<"event_store.client.users.DetailsResp.UserDetails.DateTime">>;
msg_name_to_fqbin('event_store.client.users.DetailsResp') -> <<"event_store.client.users.DetailsResp">>;
msg_name_to_fqbin('event_store.client.users.ChangePasswordReq.Options') -> <<"event_store.client.users.ChangePasswordReq.Options">>;
msg_name_to_fqbin('event_store.client.users.ChangePasswordReq') -> <<"event_store.client.users.ChangePasswordReq">>;
msg_name_to_fqbin('event_store.client.users.ChangePasswordResp') -> <<"event_store.client.users.ChangePasswordResp">>;
msg_name_to_fqbin('event_store.client.users.ResetPasswordReq.Options') -> <<"event_store.client.users.ResetPasswordReq.Options">>;
msg_name_to_fqbin('event_store.client.users.ResetPasswordReq') -> <<"event_store.client.users.ResetPasswordReq">>;
msg_name_to_fqbin('event_store.client.users.ResetPasswordResp') -> <<"event_store.client.users.ResetPasswordResp">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


-spec fqbin_to_enum_name(_) -> no_return().
fqbin_to_enum_name(E) -> error({gpb_error, {badenum, E}}).


-spec enum_name_to_fqbin(_) -> no_return().
enum_name_to_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_package_name() -> 'event_store.client.users'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> true.


source_basename() -> "users.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["users.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["users"].


get_msg_containment("users") ->
    ['event_store.client.users.ChangePasswordReq',
     'event_store.client.users.ChangePasswordReq.Options',
     'event_store.client.users.ChangePasswordResp',
     'event_store.client.users.CreateReq',
     'event_store.client.users.CreateReq.Options',
     'event_store.client.users.CreateResp',
     'event_store.client.users.DeleteReq',
     'event_store.client.users.DeleteReq.Options',
     'event_store.client.users.DeleteResp',
     'event_store.client.users.DetailsReq',
     'event_store.client.users.DetailsReq.Options',
     'event_store.client.users.DetailsResp',
     'event_store.client.users.DetailsResp.UserDetails',
     'event_store.client.users.DetailsResp.UserDetails.DateTime',
     'event_store.client.users.DisableReq',
     'event_store.client.users.DisableReq.Options',
     'event_store.client.users.DisableResp',
     'event_store.client.users.EnableReq',
     'event_store.client.users.EnableReq.Options',
     'event_store.client.users.EnableResp',
     'event_store.client.users.ResetPasswordReq',
     'event_store.client.users.ResetPasswordReq.Options',
     'event_store.client.users.ResetPasswordResp',
     'event_store.client.users.UpdateReq',
     'event_store.client.users.UpdateReq.Options',
     'event_store.client.users.UpdateResp'];
get_msg_containment(P) -> error({gpb_error, {badproto, P}}).


get_pkg_containment("users") -> 'event_store.client.users';
get_pkg_containment(P) -> error({gpb_error, {badproto, P}}).


get_service_containment("users") -> ['event_store.client.users.Users'];
get_service_containment(P) -> error({gpb_error, {badproto, P}}).


get_rpc_containment("users") ->
    [{'event_store.client.users.Users', 'Create'},
     {'event_store.client.users.Users', 'Update'},
     {'event_store.client.users.Users', 'Delete'},
     {'event_store.client.users.Users', 'Disable'},
     {'event_store.client.users.Users', 'Enable'},
     {'event_store.client.users.Users', 'Details'},
     {'event_store.client.users.Users', 'ChangePassword'},
     {'event_store.client.users.Users', 'ResetPassword'}];
get_rpc_containment(P) -> error({gpb_error, {badproto, P}}).


get_enum_containment("users") -> [];
get_enum_containment(P) -> error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.UpdateResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ResetPasswordResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.EnableResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DisableResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DetailsResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DeleteResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.CreateResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ChangePasswordResp">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.UpdateReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ResetPasswordReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.EnableReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DisableReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DetailsReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DeleteReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.CreateReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ChangePasswordReq">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.UpdateReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ResetPasswordReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.EnableReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DisableReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DetailsResp.UserDetails">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DetailsReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DeleteReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.CreateReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.ChangePasswordReq.Options">>) -> "users";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.users.DetailsResp.UserDetails.DateTime">>) -> "users";
get_proto_by_msg_name_as_fqbin(E) -> error({gpb_error, {badmsg, E}}).


get_proto_by_service_name_as_fqbin(<<"event_store.client.users.Users">>) -> "users";
get_proto_by_service_name_as_fqbin(E) -> error({gpb_error, {badservice, E}}).


-spec get_proto_by_enum_name_as_fqbin(_) -> no_return().
get_proto_by_enum_name_as_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_protos_by_pkg_name_as_fqbin(<<"event_store.client.users">>) -> ["users"];
get_protos_by_pkg_name_as_fqbin(E) -> error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.17.0".

gpb_version_as_list() ->
    [4,17,0].
