%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.18.0
%% Version source: file
-module(spear_proto_streams).

-export([encode_msg/1, encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3, merge_msgs/4]).
-export([verify_msg/1, verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export(['enum_symbol_by_value_event_store.client.streams.ReadReq.Options.ReadDirection'/1, 'enum_value_by_symbol_event_store.client.streams.ReadReq.Options.ReadDirection'/1]).
-export(['enum_symbol_by_value_google.rpc.Code'/1, 'enum_value_by_symbol_google.rpc.Code'/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).
-export([gpb_version_source/0]).

-include("spear_proto_streams.hrl").
-include_lib("gpb/include/gpb.hrl").

%% enumerated types
-type 'event_store.client.streams.ReadReq.Options.ReadDirection'() :: 'Forwards' | 'Backwards'.
-type 'google.rpc.Code'() :: 'OK' | 'CANCELLED' | 'UNKNOWN' | 'INVALID_ARGUMENT' | 'DEADLINE_EXCEEDED' | 'NOT_FOUND' | 'ALREADY_EXISTS' | 'PERMISSION_DENIED' | 'UNAUTHENTICATED' | 'RESOURCE_EXHAUSTED' | 'FAILED_PRECONDITION' | 'ABORTED' | 'OUT_OF_RANGE' | 'UNIMPLEMENTED' | 'INTERNAL' | 'UNAVAILABLE' | 'DATA_LOSS'.
-export_type(['event_store.client.streams.ReadReq.Options.ReadDirection'/0, 'google.rpc.Code'/0]).

%% message types
-type 'event_store.client.streams.ReadReq.Options'() :: #'event_store.client.streams.ReadReq.Options'{}.

-type 'event_store.client.streams.ReadReq.Options.UUIDOption'() :: #'event_store.client.streams.ReadReq.Options.UUIDOption'{}.

-type 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'() :: #'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{}.

-type 'event_store.client.streams.ReadReq.Options.FilterOptions'() :: #'event_store.client.streams.ReadReq.Options.FilterOptions'{}.

-type 'event_store.client.streams.ReadReq.Options.Position'() :: #'event_store.client.streams.ReadReq.Options.Position'{}.

-type 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'() :: #'event_store.client.streams.ReadReq.Options.SubscriptionOptions'{}.

-type 'event_store.client.streams.ReadReq.Options.AllOptions'() :: #'event_store.client.streams.ReadReq.Options.AllOptions'{}.

-type 'event_store.client.streams.ReadReq.Options.StreamOptions'() :: #'event_store.client.streams.ReadReq.Options.StreamOptions'{}.

-type 'event_store.client.streams.ReadReq'() :: #'event_store.client.streams.ReadReq'{}.

-type 'event_store.client.streams.ReadResp.ReadEvent'() :: #'event_store.client.streams.ReadResp.ReadEvent'{}.

-type 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'() :: #'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{}.

-type 'event_store.client.streams.ReadResp.SubscriptionConfirmation'() :: #'event_store.client.streams.ReadResp.SubscriptionConfirmation'{}.

-type 'event_store.client.streams.ReadResp.Checkpoint'() :: #'event_store.client.streams.ReadResp.Checkpoint'{}.

-type 'event_store.client.streams.ReadResp.StreamNotFound'() :: #'event_store.client.streams.ReadResp.StreamNotFound'{}.

-type 'event_store.client.streams.ReadResp'() :: #'event_store.client.streams.ReadResp'{}.

-type 'event_store.client.streams.AppendReq.Options'() :: #'event_store.client.streams.AppendReq.Options'{}.

-type 'event_store.client.streams.AppendReq.ProposedMessage'() :: #'event_store.client.streams.AppendReq.ProposedMessage'{}.

-type 'event_store.client.streams.AppendReq'() :: #'event_store.client.streams.AppendReq'{}.

-type 'event_store.client.streams.AppendResp.Position'() :: #'event_store.client.streams.AppendResp.Position'{}.

-type 'event_store.client.streams.AppendResp.Success'() :: #'event_store.client.streams.AppendResp.Success'{}.

-type 'event_store.client.streams.AppendResp.WrongExpectedVersion'() :: #'event_store.client.streams.AppendResp.WrongExpectedVersion'{}.

-type 'event_store.client.streams.AppendResp'() :: #'event_store.client.streams.AppendResp'{}.

-type 'event_store.client.streams.BatchAppendReq.Options'() :: #'event_store.client.streams.BatchAppendReq.Options'{}.

-type 'event_store.client.streams.BatchAppendReq.ProposedMessage'() :: #'event_store.client.streams.BatchAppendReq.ProposedMessage'{}.

-type 'event_store.client.streams.BatchAppendReq'() :: #'event_store.client.streams.BatchAppendReq'{}.

-type 'event_store.client.streams.BatchAppendResp.Success'() :: #'event_store.client.streams.BatchAppendResp.Success'{}.

-type 'event_store.client.streams.BatchAppendResp'() :: #'event_store.client.streams.BatchAppendResp'{}.

-type 'event_store.client.streams.DeleteReq.Options'() :: #'event_store.client.streams.DeleteReq.Options'{}.

-type 'event_store.client.streams.DeleteReq'() :: #'event_store.client.streams.DeleteReq'{}.

-type 'event_store.client.streams.DeleteResp.Position'() :: #'event_store.client.streams.DeleteResp.Position'{}.

-type 'event_store.client.streams.DeleteResp'() :: #'event_store.client.streams.DeleteResp'{}.

-type 'event_store.client.streams.TombstoneReq.Options'() :: #'event_store.client.streams.TombstoneReq.Options'{}.

-type 'event_store.client.streams.TombstoneReq'() :: #'event_store.client.streams.TombstoneReq'{}.

-type 'event_store.client.streams.TombstoneResp.Position'() :: #'event_store.client.streams.TombstoneResp.Position'{}.

-type 'event_store.client.streams.TombstoneResp'() :: #'event_store.client.streams.TombstoneResp'{}.

-type 'event_store.client.UUID.Structured'() :: #'event_store.client.UUID.Structured'{}.

-type 'event_store.client.UUID'() :: #'event_store.client.UUID'{}.

-type 'event_store.client.Empty'() :: #'event_store.client.Empty'{}.

-type 'event_store.client.StreamIdentifier'() :: #'event_store.client.StreamIdentifier'{}.

-type 'event_store.client.AllStreamPosition'() :: #'event_store.client.AllStreamPosition'{}.

-type 'event_store.client.WrongExpectedVersion'() :: #'event_store.client.WrongExpectedVersion'{}.

-type 'event_store.client.AccessDenied'() :: #'event_store.client.AccessDenied'{}.

-type 'event_store.client.StreamDeleted'() :: #'event_store.client.StreamDeleted'{}.

-type 'event_store.client.Timeout'() :: #'event_store.client.Timeout'{}.

-type 'event_store.client.Unknown'() :: #'event_store.client.Unknown'{}.

-type 'event_store.client.InvalidTransaction'() :: #'event_store.client.InvalidTransaction'{}.

-type 'event_store.client.MaximumAppendSizeExceeded'() :: #'event_store.client.MaximumAppendSizeExceeded'{}.

-type 'event_store.client.BadRequest'() :: #'event_store.client.BadRequest'{}.

-type 'google.rpc.Status'() :: #'google.rpc.Status'{}.

-type 'google.protobuf.Empty'() :: #'google.protobuf.Empty'{}.

-type 'google.protobuf.Timestamp'() :: #'google.protobuf.Timestamp'{}.

-type 'google.protobuf.Any'() :: #'google.protobuf.Any'{}.

-export_type(['event_store.client.streams.ReadReq.Options'/0, 'event_store.client.streams.ReadReq.Options.UUIDOption'/0, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'/0, 'event_store.client.streams.ReadReq.Options.FilterOptions'/0, 'event_store.client.streams.ReadReq.Options.Position'/0, 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'/0, 'event_store.client.streams.ReadReq.Options.AllOptions'/0, 'event_store.client.streams.ReadReq.Options.StreamOptions'/0, 'event_store.client.streams.ReadReq'/0, 'event_store.client.streams.ReadResp.ReadEvent'/0, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'/0, 'event_store.client.streams.ReadResp.SubscriptionConfirmation'/0, 'event_store.client.streams.ReadResp.Checkpoint'/0, 'event_store.client.streams.ReadResp.StreamNotFound'/0, 'event_store.client.streams.ReadResp'/0, 'event_store.client.streams.AppendReq.Options'/0, 'event_store.client.streams.AppendReq.ProposedMessage'/0, 'event_store.client.streams.AppendReq'/0, 'event_store.client.streams.AppendResp.Position'/0, 'event_store.client.streams.AppendResp.Success'/0, 'event_store.client.streams.AppendResp.WrongExpectedVersion'/0, 'event_store.client.streams.AppendResp'/0, 'event_store.client.streams.BatchAppendReq.Options'/0, 'event_store.client.streams.BatchAppendReq.ProposedMessage'/0, 'event_store.client.streams.BatchAppendReq'/0, 'event_store.client.streams.BatchAppendResp.Success'/0, 'event_store.client.streams.BatchAppendResp'/0, 'event_store.client.streams.DeleteReq.Options'/0, 'event_store.client.streams.DeleteReq'/0, 'event_store.client.streams.DeleteResp.Position'/0, 'event_store.client.streams.DeleteResp'/0, 'event_store.client.streams.TombstoneReq.Options'/0, 'event_store.client.streams.TombstoneReq'/0, 'event_store.client.streams.TombstoneResp.Position'/0, 'event_store.client.streams.TombstoneResp'/0, 'event_store.client.UUID.Structured'/0, 'event_store.client.UUID'/0, 'event_store.client.Empty'/0, 'event_store.client.StreamIdentifier'/0, 'event_store.client.AllStreamPosition'/0, 'event_store.client.WrongExpectedVersion'/0, 'event_store.client.AccessDenied'/0, 'event_store.client.StreamDeleted'/0, 'event_store.client.Timeout'/0, 'event_store.client.Unknown'/0, 'event_store.client.InvalidTransaction'/0, 'event_store.client.MaximumAppendSizeExceeded'/0, 'event_store.client.BadRequest'/0, 'google.rpc.Status'/0, 'google.protobuf.Empty'/0, 'google.protobuf.Timestamp'/0, 'google.protobuf.Any'/0]).
-type '$msg_name'() :: 'event_store.client.streams.ReadReq.Options' | 'event_store.client.streams.ReadReq.Options.UUIDOption' | 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression' | 'event_store.client.streams.ReadReq.Options.FilterOptions' | 'event_store.client.streams.ReadReq.Options.Position' | 'event_store.client.streams.ReadReq.Options.SubscriptionOptions' | 'event_store.client.streams.ReadReq.Options.AllOptions' | 'event_store.client.streams.ReadReq.Options.StreamOptions' | 'event_store.client.streams.ReadReq' | 'event_store.client.streams.ReadResp.ReadEvent' | 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent' | 'event_store.client.streams.ReadResp.SubscriptionConfirmation' | 'event_store.client.streams.ReadResp.Checkpoint' | 'event_store.client.streams.ReadResp.StreamNotFound' | 'event_store.client.streams.ReadResp' | 'event_store.client.streams.AppendReq.Options' | 'event_store.client.streams.AppendReq.ProposedMessage' | 'event_store.client.streams.AppendReq' | 'event_store.client.streams.AppendResp.Position' | 'event_store.client.streams.AppendResp.Success' | 'event_store.client.streams.AppendResp.WrongExpectedVersion' | 'event_store.client.streams.AppendResp' | 'event_store.client.streams.BatchAppendReq.Options' | 'event_store.client.streams.BatchAppendReq.ProposedMessage' | 'event_store.client.streams.BatchAppendReq' | 'event_store.client.streams.BatchAppendResp.Success' | 'event_store.client.streams.BatchAppendResp' | 'event_store.client.streams.DeleteReq.Options' | 'event_store.client.streams.DeleteReq' | 'event_store.client.streams.DeleteResp.Position' | 'event_store.client.streams.DeleteResp' | 'event_store.client.streams.TombstoneReq.Options' | 'event_store.client.streams.TombstoneReq' | 'event_store.client.streams.TombstoneResp.Position' | 'event_store.client.streams.TombstoneResp' | 'event_store.client.UUID.Structured' | 'event_store.client.UUID' | 'event_store.client.Empty' | 'event_store.client.StreamIdentifier' | 'event_store.client.AllStreamPosition' | 'event_store.client.WrongExpectedVersion' | 'event_store.client.AccessDenied' | 'event_store.client.StreamDeleted' | 'event_store.client.Timeout' | 'event_store.client.Unknown' | 'event_store.client.InvalidTransaction' | 'event_store.client.MaximumAppendSizeExceeded' | 'event_store.client.BadRequest' | 'google.rpc.Status' | 'google.protobuf.Empty' | 'google.protobuf.Timestamp' | 'google.protobuf.Any'.
-type '$msg'() :: 'event_store.client.streams.ReadReq.Options'() | 'event_store.client.streams.ReadReq.Options.UUIDOption'() | 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'() | 'event_store.client.streams.ReadReq.Options.FilterOptions'() | 'event_store.client.streams.ReadReq.Options.Position'() | 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'() | 'event_store.client.streams.ReadReq.Options.AllOptions'() | 'event_store.client.streams.ReadReq.Options.StreamOptions'() | 'event_store.client.streams.ReadReq'() | 'event_store.client.streams.ReadResp.ReadEvent'() | 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'() | 'event_store.client.streams.ReadResp.SubscriptionConfirmation'() | 'event_store.client.streams.ReadResp.Checkpoint'() | 'event_store.client.streams.ReadResp.StreamNotFound'() | 'event_store.client.streams.ReadResp'() | 'event_store.client.streams.AppendReq.Options'() | 'event_store.client.streams.AppendReq.ProposedMessage'() | 'event_store.client.streams.AppendReq'() | 'event_store.client.streams.AppendResp.Position'() | 'event_store.client.streams.AppendResp.Success'() | 'event_store.client.streams.AppendResp.WrongExpectedVersion'() | 'event_store.client.streams.AppendResp'() | 'event_store.client.streams.BatchAppendReq.Options'() | 'event_store.client.streams.BatchAppendReq.ProposedMessage'() | 'event_store.client.streams.BatchAppendReq'() | 'event_store.client.streams.BatchAppendResp.Success'() | 'event_store.client.streams.BatchAppendResp'() | 'event_store.client.streams.DeleteReq.Options'() | 'event_store.client.streams.DeleteReq'() | 'event_store.client.streams.DeleteResp.Position'() | 'event_store.client.streams.DeleteResp'() | 'event_store.client.streams.TombstoneReq.Options'() | 'event_store.client.streams.TombstoneReq'() | 'event_store.client.streams.TombstoneResp.Position'() | 'event_store.client.streams.TombstoneResp'() | 'event_store.client.UUID.Structured'() | 'event_store.client.UUID'() | 'event_store.client.Empty'() | 'event_store.client.StreamIdentifier'() | 'event_store.client.AllStreamPosition'() | 'event_store.client.WrongExpectedVersion'() | 'event_store.client.AccessDenied'() | 'event_store.client.StreamDeleted'() | 'event_store.client.Timeout'() | 'event_store.client.Unknown'() | 'event_store.client.InvalidTransaction'() | 'event_store.client.MaximumAppendSizeExceeded'() | 'event_store.client.BadRequest'() | 'google.rpc.Status'() | 'google.protobuf.Empty'() | 'google.protobuf.Timestamp'() | 'google.protobuf.Any'().
-export_type(['$msg_name'/0, '$msg'/0]).

-record('map<string,string>',{key, value}).
-dialyzer({no_underspecs, encode_msg/1}).
-spec encode_msg('$msg'()) -> binary().
encode_msg(Msg) when tuple_size(Msg) >= 1 -> encode_msg(Msg, element(1, Msg), []).

-dialyzer({no_underspecs, encode_msg/2}).
-spec encode_msg('$msg'(), '$msg_name'() | list()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) -> encode_msg(Msg, MsgName, []);
encode_msg(Msg, Opts) when tuple_size(Msg) >= 1, is_list(Opts) -> encode_msg(Msg, element(1, Msg), Opts).

-dialyzer({no_underspecs, encode_msg/3}).
-spec encode_msg('$msg'(), '$msg_name'(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
        true -> verify_msg(Msg, MsgName, Opts);
        false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.streams.ReadReq.Options' -> 'encode_msg_event_store.client.streams.ReadReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.UUIDOption' -> 'encode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions.Expression' -> 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions' -> 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.Position' -> 'encode_msg_event_store.client.streams.ReadReq.Options.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.SubscriptionOptions' -> 'encode_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.AllOptions' -> 'encode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq.Options.StreamOptions' -> 'encode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadReq' -> 'encode_msg_event_store.client.streams.ReadReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent' -> 'encode_msg_event_store.client.streams.ReadResp.ReadEvent'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent' -> 'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp.SubscriptionConfirmation' -> 'encode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp.Checkpoint' -> 'encode_msg_event_store.client.streams.ReadResp.Checkpoint'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp.StreamNotFound' -> 'encode_msg_event_store.client.streams.ReadResp.StreamNotFound'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.ReadResp' -> 'encode_msg_event_store.client.streams.ReadResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendReq.Options' -> 'encode_msg_event_store.client.streams.AppendReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendReq.ProposedMessage' -> 'encode_msg_event_store.client.streams.AppendReq.ProposedMessage'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendReq' -> 'encode_msg_event_store.client.streams.AppendReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendResp.Position' -> 'encode_msg_event_store.client.streams.AppendResp.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendResp.Success' -> 'encode_msg_event_store.client.streams.AppendResp.Success'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendResp.WrongExpectedVersion' -> 'encode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.AppendResp' -> 'encode_msg_event_store.client.streams.AppendResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.BatchAppendReq.Options' -> 'encode_msg_event_store.client.streams.BatchAppendReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.BatchAppendReq.ProposedMessage' -> 'encode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.BatchAppendReq' -> 'encode_msg_event_store.client.streams.BatchAppendReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.BatchAppendResp.Success' -> 'encode_msg_event_store.client.streams.BatchAppendResp.Success'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.BatchAppendResp' -> 'encode_msg_event_store.client.streams.BatchAppendResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.DeleteReq.Options' -> 'encode_msg_event_store.client.streams.DeleteReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.DeleteReq' -> 'encode_msg_event_store.client.streams.DeleteReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.DeleteResp.Position' -> 'encode_msg_event_store.client.streams.DeleteResp.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.DeleteResp' -> 'encode_msg_event_store.client.streams.DeleteResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.TombstoneReq.Options' -> 'encode_msg_event_store.client.streams.TombstoneReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.TombstoneReq' -> 'encode_msg_event_store.client.streams.TombstoneReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.TombstoneResp.Position' -> 'encode_msg_event_store.client.streams.TombstoneResp.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.streams.TombstoneResp' -> 'encode_msg_event_store.client.streams.TombstoneResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID.Structured' -> 'encode_msg_event_store.client.UUID.Structured'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID' -> 'encode_msg_event_store.client.UUID'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Empty' -> 'encode_msg_event_store.client.Empty'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamIdentifier' -> 'encode_msg_event_store.client.StreamIdentifier'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AllStreamPosition' -> 'encode_msg_event_store.client.AllStreamPosition'(id(Msg, TrUserData), TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'encode_msg_event_store.client.WrongExpectedVersion'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AccessDenied' -> 'encode_msg_event_store.client.AccessDenied'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamDeleted' -> 'encode_msg_event_store.client.StreamDeleted'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Timeout' -> 'encode_msg_event_store.client.Timeout'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Unknown' -> 'encode_msg_event_store.client.Unknown'(id(Msg, TrUserData), TrUserData);
        'event_store.client.InvalidTransaction' -> 'encode_msg_event_store.client.InvalidTransaction'(id(Msg, TrUserData), TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(id(Msg, TrUserData), TrUserData);
        'event_store.client.BadRequest' -> 'encode_msg_event_store.client.BadRequest'(id(Msg, TrUserData), TrUserData);
        'google.rpc.Status' -> 'encode_msg_google.rpc.Status'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Empty' -> 'encode_msg_google.protobuf.Empty'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Timestamp' -> 'encode_msg_google.protobuf.Timestamp'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Any' -> 'encode_msg_google.protobuf.Any'(id(Msg, TrUserData), TrUserData)
    end.


'encode_msg_event_store.client.streams.ReadReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options'(#'event_store.client.streams.ReadReq.Options'{stream_option = F1, read_direction = F2, resolve_links = F3, count_option = F4, filter_option = F5, uuid_option = F6}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options_stream'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options_all'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= 'Forwards'; TrF2 =:= 0 -> B1;
                       true -> 'e_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(TrF2, <<B1/binary, 24>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= false -> B2;
                       true -> e_type_bool(TrF3, <<B2/binary, 32>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 =:= undefined -> B3;
            true ->
                case id(F4, TrUserData) of
                    {count, TF4} -> begin TrTF4 = id(TF4, TrUserData), e_varint(TrTF4, <<B3/binary, 40>>, TrUserData) end;
                    {subscription, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options_subscription'(TrTF4, <<B3/binary, 50>>, TrUserData) end
                end
         end,
    B5 = if F5 =:= undefined -> B4;
            true ->
                case id(F5, TrUserData) of
                    {filter, TF5} -> begin TrTF5 = id(TF5, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options_filter'(TrTF5, <<B4/binary, 58>>, TrUserData) end;
                    {no_filter, TF5} -> begin TrTF5 = id(TF5, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options_no_filter'(TrTF5, <<B4/binary, 66>>, TrUserData) end
                end
         end,
    if F6 == undefined -> B5;
       true ->
           begin
               TrF6 = id(F6, TrUserData),
               if TrF6 =:= undefined -> B5;
                  true -> 'e_mfield_event_store.client.streams.ReadReq.Options_uuid_option'(TrF6, <<B5/binary, 74>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(#'event_store.client.streams.ReadReq.Options.UUIDOption'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {structured, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {string, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.UUIDOption_string'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(#'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = F1, prefix = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    begin
        TrF2 = id(F2, TrUserData),
        if TrF2 == [] -> B1;
           true -> 'e_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(TrF2, B1, TrUserData)
        end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(#'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = F1, window = F2, checkpointIntervalMultiplier = F3}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream_identifier, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {event_type, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    B2 = if F2 =:= undefined -> B1;
            true ->
                case id(F2, TrUserData) of
                    {max, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
                    {count, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_count'(TrTF2, <<B1/binary, 34>>, TrUserData) end
                end
         end,
    if F3 == undefined -> B2;
       true ->
           begin
               TrF3 = id(F3, TrUserData),
               if TrF3 =:= 0 -> B2;
                  true -> e_varint(TrF3, <<B2/binary, 40>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.Position'(#'event_store.client.streams.ReadReq.Options.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(#'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_position'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {start, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_start'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
               {'end', TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_end'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(#'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = F1, revision_option = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {start, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_start'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {'end', TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_end'(TrTF2, <<B1/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.ReadReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadReq'(#'event_store.client.streams.ReadReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.streams.ReadReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp.ReadEvent'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp.ReadEvent'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp.ReadEvent'(#'event_store.client.streams.ReadResp.ReadEvent'{event = F1, link = F2, position = F3}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.ReadResp.ReadEvent_event'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.streams.ReadResp.ReadEvent_link'(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F3 =:= undefined -> B2;
       true ->
           case id(F3, TrUserData) of
               {commit_position, TF3} -> begin TrTF3 = id(TF3, TrUserData), e_varint(TrTF3, <<B2/binary, 24>>, TrUserData) end;
               {no_position, TF3} -> begin TrTF3 = id(TF3, TrUserData), 'e_mfield_event_store.client.streams.ReadResp.ReadEvent_no_position'(TrTF3, <<B2/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = F1, stream_identifier = F2, stream_revision = F3, prepare_position = F4, commit_position = F5, metadata = F6,
                                                                                                                                        custom_metadata = F7, data = F8},
                                                                         Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= 0 -> B2;
                       true -> e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    if TrF4 =:= 0 -> B3;
                       true -> e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
                    end
                end
         end,
    B5 = if F5 == undefined -> B4;
            true ->
                begin
                    TrF5 = id(F5, TrUserData),
                    if TrF5 =:= 0 -> B4;
                       true -> e_varint(TrF5, <<B4/binary, 40>>, TrUserData)
                    end
                end
         end,
    B6 = begin
             TrF6 = id(F6, TrUserData),
             if TrF6 == [] -> B5;
                true -> 'e_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(TrF6, B5, TrUserData)
             end
         end,
    B7 = if F7 == undefined -> B6;
            true ->
                begin
                    TrF7 = id(F7, TrUserData),
                    case iolist_size(TrF7) of
                        0 -> B6;
                        _ -> e_type_bytes(TrF7, <<B6/binary, 58>>, TrUserData)
                    end
                end
         end,
    if F8 == undefined -> B7;
       true ->
           begin
               TrF8 = id(F8, TrUserData),
               case iolist_size(TrF8) of
                   0 -> B7;
                   _ -> e_type_bytes(TrF8, <<B7/binary, 66>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(#'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp.Checkpoint'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp.Checkpoint'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp.Checkpoint'(#'event_store.client.streams.ReadResp.Checkpoint'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp.StreamNotFound'(#'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.ReadResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.ReadResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.ReadResp'(#'event_store.client.streams.ReadResp'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {event, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadResp_event'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {confirmation, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadResp_confirmation'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
               {checkpoint, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadResp_checkpoint'(TrTF1, <<Bin/binary, 26>>, TrUserData) end;
               {stream_not_found, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.ReadResp_stream_not_found'(TrTF1, <<Bin/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.AppendReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendReq.Options'(#'event_store.client.streams.AppendReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.AppendReq.Options_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendReq.Options_no_stream'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendReq.Options_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendReq.Options_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendReq.ProposedMessage'(#'event_store.client.streams.AppendReq.ProposedMessage'{id = F1, metadata = F2, custom_metadata = F3, data = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.AppendReq.ProposedMessage_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             if TrF2 == [] -> B1;
                true -> 'e_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(TrF2, B1, TrUserData)
             end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case iolist_size(TrF3) of
                        0 -> B2;
                        _ -> e_type_bytes(TrF3, <<B2/binary, 26>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               case iolist_size(TrF4) of
                   0 -> B3;
                   _ -> e_type_bytes(TrF4, <<B3/binary, 34>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.AppendReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendReq'(#'event_store.client.streams.AppendReq'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {options, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendReq_options'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {proposed_message, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendReq_proposed_message'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.AppendResp.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendResp.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendResp.Position'(#'event_store.client.streams.AppendResp.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.AppendResp.Success'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendResp.Success'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendResp.Success'(#'event_store.client.streams.AppendResp.Success'{current_revision_option = F1, position_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_revision, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {no_stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.Success_no_stream'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {position, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.Success_position'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {no_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.Success_no_position'(TrTF2, <<B1/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(#'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = F1, expected_revision_option_20_6_0 = F2, current_revision_option = F3,
                                                                                                                                      expected_revision_option = F4},
                                                                        Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_revision_20_6_0, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {no_stream_20_6_0, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    B2 = if F2 =:= undefined -> B1;
            true ->
                case id(F2, TrUserData) of
                    {expected_revision_20_6_0, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
                    {any_20_6_0, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
                    {stream_exists_20_6_0, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(TrTF2, <<B1/binary, 42>>, TrUserData) end
                end
         end,
    B3 = if F3 =:= undefined -> B2;
            true ->
                case id(F3, TrUserData) of
                    {current_revision, TF3} -> begin TrTF3 = id(TF3, TrUserData), e_varint(TrTF3, <<B2/binary, 48>>, TrUserData) end;
                    {current_no_stream, TF3} -> begin TrTF3 = id(TF3, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(TrTF3, <<B2/binary, 58>>, TrUserData) end
                end
         end,
    if F4 =:= undefined -> B3;
       true ->
           case id(F4, TrUserData) of
               {expected_revision, TF4} -> begin TrTF4 = id(TF4, TrUserData), e_varint(TrTF4, <<B3/binary, 64>>, TrUserData) end;
               {expected_any, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(TrTF4, <<B3/binary, 74>>, TrUserData) end;
               {expected_stream_exists, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(TrTF4, <<B3/binary, 82>>, TrUserData) end;
               {expected_no_stream, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(TrTF4, <<B3/binary, 90>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.AppendResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.AppendResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.AppendResp'(#'event_store.client.streams.AppendResp'{result = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {success, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendResp_success'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {wrong_expected_version, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.AppendResp_wrong_expected_version'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.BatchAppendReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.BatchAppendReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.BatchAppendReq.Options'(#'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = F1, expected_stream_position = F2, deadline = F3}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 =:= undefined -> B1;
            true ->
                case id(F2, TrUserData) of
                    {stream_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
                    {no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendReq.Options_no_stream'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
                    {any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendReq.Options_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
                    {stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendReq.Options_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end
                end
         end,
    if F3 == undefined -> B2;
       true ->
           begin
               TrF3 = id(F3, TrUserData),
               if TrF3 =:= undefined -> B2;
                  true -> 'e_mfield_event_store.client.streams.BatchAppendReq.Options_deadline'(TrF3, <<B2/binary, 50>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(#'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = F1, metadata = F2, custom_metadata = F3, data = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             if TrF2 == [] -> B1;
                true -> 'e_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(TrF2, B1, TrUserData)
             end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case iolist_size(TrF3) of
                        0 -> B2;
                        _ -> e_type_bytes(TrF3, <<B2/binary, 26>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               case iolist_size(TrF4) of
                   0 -> B3;
                   _ -> e_type_bytes(TrF4, <<B3/binary, 34>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.BatchAppendReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.BatchAppendReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.BatchAppendReq'(#'event_store.client.streams.BatchAppendReq'{correlation_id = F1, options = F2, proposed_messages = F3, is_final = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendReq_correlation_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendReq_options'(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = begin
             TrF3 = id(F3, TrUserData),
             if TrF3 == [] -> B2;
                true -> 'e_field_event_store.client.streams.BatchAppendReq_proposed_messages'(TrF3, B2, TrUserData)
             end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               if TrF4 =:= false -> B3;
                  true -> e_type_bool(TrF4, <<B3/binary, 32>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.BatchAppendResp.Success'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.BatchAppendResp.Success'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.BatchAppendResp.Success'(#'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = F1, position_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_revision, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {no_stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp.Success_no_stream'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {position, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp.Success_position'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {no_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp.Success_no_position'(TrTF2, <<B1/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.BatchAppendResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.BatchAppendResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.BatchAppendResp'(#'event_store.client.streams.BatchAppendResp'{correlation_id = F1, result = F2, stream_identifier = F3, expected_stream_position = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendResp_correlation_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 =:= undefined -> B1;
            true ->
                case id(F2, TrUserData) of
                    {error, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp_error'(TrTF2, <<B1/binary, 18>>, TrUserData) end;
                    {success, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp_success'(TrTF2, <<B1/binary, 26>>, TrUserData) end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= undefined -> B2;
                       true -> 'e_mfield_event_store.client.streams.BatchAppendResp_stream_identifier'(TrF3, <<B2/binary, 34>>, TrUserData)
                    end
                end
         end,
    if F4 =:= undefined -> B3;
       true ->
           case id(F4, TrUserData) of
               {stream_position, TF4} -> begin TrTF4 = id(TF4, TrUserData), e_varint(TrTF4, <<B3/binary, 40>>, TrUserData) end;
               {no_stream, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp_no_stream'(TrTF4, <<B3/binary, 50>>, TrUserData) end;
               {any, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp_any'(TrTF4, <<B3/binary, 58>>, TrUserData) end;
               {stream_exists, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.streams.BatchAppendResp_stream_exists'(TrTF4, <<B3/binary, 66>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.DeleteReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.DeleteReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.DeleteReq.Options'(#'event_store.client.streams.DeleteReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.DeleteReq.Options_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.DeleteReq.Options_no_stream'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.DeleteReq.Options_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.DeleteReq.Options_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.DeleteReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.DeleteReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.DeleteReq'(#'event_store.client.streams.DeleteReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.streams.DeleteReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.DeleteResp.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.DeleteResp.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.DeleteResp.Position'(#'event_store.client.streams.DeleteResp.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.DeleteResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.DeleteResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.DeleteResp'(#'event_store.client.streams.DeleteResp'{position_option = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.DeleteResp_position'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {no_position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.DeleteResp_no_position'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.TombstoneReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.TombstoneReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.TombstoneReq.Options'(#'event_store.client.streams.TombstoneReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.streams.TombstoneReq.Options_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.TombstoneReq.Options_no_stream'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.TombstoneReq.Options_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.streams.TombstoneReq.Options_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.streams.TombstoneReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.TombstoneReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.TombstoneReq'(#'event_store.client.streams.TombstoneReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.streams.TombstoneReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.TombstoneResp.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.TombstoneResp.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.TombstoneResp.Position'(#'event_store.client.streams.TombstoneResp.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.streams.TombstoneResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.streams.TombstoneResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.streams.TombstoneResp'(#'event_store.client.streams.TombstoneResp'{position_option = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.TombstoneResp_position'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {no_position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.streams.TombstoneResp_no_position'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.UUID.Structured'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_type_int64(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.UUID'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {structured, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.UUID_structured'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {string, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_string(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.Empty'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamIdentifier'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case iolist_size(TrF1) of
                   0 -> Bin;
                   _ -> e_type_bytes(TrF1, <<Bin/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.AllStreamPosition'(Msg, TrUserData) -> 'encode_msg_event_store.client.AllStreamPosition'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.WrongExpectedVersion'(Msg, TrUserData) -> 'encode_msg_event_store.client.WrongExpectedVersion'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_stream_revision, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {current_no_stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {expected_stream_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
               {expected_any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {expected_stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end;
               {expected_no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(TrTF2, <<B1/binary, 50>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.AccessDenied'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamDeleted'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamDeleted'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.StreamDeleted_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.Timeout'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.Unknown'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.InvalidTransaction'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, TrUserData) -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= 0 -> Bin;
                  true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.BadRequest'(Msg, TrUserData) -> 'encode_msg_event_store.client.BadRequest'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_google.rpc.Status'(Msg, TrUserData) -> 'encode_msg_google.rpc.Status'(Msg, <<>>, TrUserData).


'encode_msg_google.rpc.Status'(#'google.rpc.Status'{code = F1, message = F2, details = F3}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 'OK'; TrF1 =:= 0 -> Bin;
                       true -> 'e_enum_google.rpc.Code'(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F3 == undefined -> B2;
       true ->
           begin
               TrF3 = id(F3, TrUserData),
               if TrF3 =:= undefined -> B2;
                  true -> 'e_mfield_google.rpc.Status_details'(TrF3, <<B2/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_google.protobuf.Empty'(_Msg, _TrUserData) -> <<>>.

'encode_msg_google.protobuf.Timestamp'(Msg, TrUserData) -> 'encode_msg_google.protobuf.Timestamp'(Msg, <<>>, TrUserData).


'encode_msg_google.protobuf.Timestamp'(#'google.protobuf.Timestamp'{seconds = F1, nanos = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_type_int32(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_google.protobuf.Any'(Msg, TrUserData) -> 'encode_msg_google.protobuf.Any'(Msg, <<>>, TrUserData).


'encode_msg_google.protobuf.Any'(#'google.protobuf.Any'{type_url = F1, value = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case iolist_size(TrF2) of
                   0 -> B1;
                   _ -> e_type_bytes(TrF2, <<B1/binary, 18>>, TrUserData)
               end
           end
    end.

'e_mfield_event_store.client.streams.ReadReq.Options_stream'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options_all'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options_subscription'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options_filter'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options_no_filter'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options_uuid_option'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options.UUIDOption_string'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(Rest, Bin3, TrUserData);
'e_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options.FilterOptions_count'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options.AllOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq.Options.StreamOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent_event'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent_link'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_map<string,string>'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = 'e_mfield_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'('tr_encode_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata[x]'(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, Bin3, TrUserData);
'e_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp_event'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.ReadEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp_confirmation'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp_checkpoint'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.Checkpoint'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.ReadResp_stream_not_found'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendReq.Options_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendReq.Options_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendReq.Options_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendReq.ProposedMessage_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendReq.ProposedMessage_metadata'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_map<string,string>'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = 'e_mfield_event_store.client.streams.AppendReq.ProposedMessage_metadata'('tr_encode_event_store.client.streams.AppendReq.ProposedMessage.metadata[x]'(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(Rest, Bin3, TrUserData);
'e_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.streams.AppendReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.AppendReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendReq_proposed_message'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendResp.Success_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.Success_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.AppendResp.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendResp.Success_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.AppendResp_success'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.AppendResp.Success'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.AppendResp_wrong_expected_version'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq.Options_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendReq.Options_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendReq.Options_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendReq.Options_deadline'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Timestamp'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_map<string,string>'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = 'e_mfield_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'('tr_encode_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata[x]'(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(Rest, Bin3, TrUserData);
'e_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.streams.BatchAppendReq_correlation_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.BatchAppendReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendReq_proposed_messages'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.streams.BatchAppendReq_proposed_messages'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = 'e_mfield_event_store.client.streams.BatchAppendReq_proposed_messages'(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.streams.BatchAppendReq_proposed_messages'(Rest, Bin3, TrUserData);
'e_field_event_store.client.streams.BatchAppendReq_proposed_messages'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.streams.BatchAppendResp.Success_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendResp.Success_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.AllStreamPosition'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendResp.Success_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendResp_correlation_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendResp_error'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.rpc.Status'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendResp_success'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.BatchAppendResp.Success'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendResp_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.BatchAppendResp_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendResp_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.BatchAppendResp_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.DeleteReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.DeleteReq.Options_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.DeleteReq.Options_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.DeleteReq.Options_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.DeleteReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.DeleteReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.DeleteResp_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.DeleteResp.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.DeleteResp_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.TombstoneReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.TombstoneReq.Options_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.TombstoneReq.Options_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.TombstoneReq.Options_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.streams.TombstoneReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.TombstoneReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.TombstoneResp_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.streams.TombstoneResp.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.streams.TombstoneResp_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.UUID_structured'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.StreamDeleted_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_google.rpc.Status_details'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_google.protobuf.Any'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'encode_msg_map<string,string>'(#'map<string,string>'{key = F1, value = F2}, Bin, TrUserData) ->
    B1 = begin TrF1 = id(F1, TrUserData), e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData) end,
    begin TrF2 = id(F2, TrUserData), e_type_string(TrF2, <<B1/binary, 18>>, TrUserData) end.

'e_enum_event_store.client.streams.ReadReq.Options.ReadDirection'('Forwards', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_event_store.client.streams.ReadReq.Options.ReadDirection'('Backwards', Bin, _TrUserData) -> <<Bin/binary, 1>>;
'e_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(V, Bin, _TrUserData) -> e_varint(V, Bin).

'e_enum_google.rpc.Code'('OK', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_google.rpc.Code'('CANCELLED', Bin, _TrUserData) -> <<Bin/binary, 1>>;
'e_enum_google.rpc.Code'('UNKNOWN', Bin, _TrUserData) -> <<Bin/binary, 2>>;
'e_enum_google.rpc.Code'('INVALID_ARGUMENT', Bin, _TrUserData) -> <<Bin/binary, 3>>;
'e_enum_google.rpc.Code'('DEADLINE_EXCEEDED', Bin, _TrUserData) -> <<Bin/binary, 4>>;
'e_enum_google.rpc.Code'('NOT_FOUND', Bin, _TrUserData) -> <<Bin/binary, 5>>;
'e_enum_google.rpc.Code'('ALREADY_EXISTS', Bin, _TrUserData) -> <<Bin/binary, 6>>;
'e_enum_google.rpc.Code'('PERMISSION_DENIED', Bin, _TrUserData) -> <<Bin/binary, 7>>;
'e_enum_google.rpc.Code'('UNAUTHENTICATED', Bin, _TrUserData) -> <<Bin/binary, 16>>;
'e_enum_google.rpc.Code'('RESOURCE_EXHAUSTED', Bin, _TrUserData) -> <<Bin/binary, 8>>;
'e_enum_google.rpc.Code'('FAILED_PRECONDITION', Bin, _TrUserData) -> <<Bin/binary, 9>>;
'e_enum_google.rpc.Code'('ABORTED', Bin, _TrUserData) -> <<Bin/binary, 10>>;
'e_enum_google.rpc.Code'('OUT_OF_RANGE', Bin, _TrUserData) -> <<Bin/binary, 11>>;
'e_enum_google.rpc.Code'('UNIMPLEMENTED', Bin, _TrUserData) -> <<Bin/binary, 12>>;
'e_enum_google.rpc.Code'('INTERNAL', Bin, _TrUserData) -> <<Bin/binary, 13>>;
'e_enum_google.rpc.Code'('UNAVAILABLE', Bin, _TrUserData) -> <<Bin/binary, 14>>;
'e_enum_google.rpc.Code'('DATA_LOSS', Bin, _TrUserData) -> <<Bin/binary, 15>>;
'e_enum_google.rpc.Code'(V, Bin, _TrUserData) -> e_varint(V, Bin).

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 -> e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) -> e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) -> <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) -> <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) -> <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) -> <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) -> <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) -> <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) -> <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) -> <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) -> <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_unknown_elems/2}).
e_unknown_elems([Elem | Rest], Bin) ->
    BinR = case Elem of
               {varint, FNum, N} ->
                   BinF = e_varint(FNum bsl 3, Bin),
                   e_varint(N, BinF);
               {length_delimited, FNum, Data} ->
                   BinF = e_varint(FNum bsl 3 bor 2, Bin),
                   BinL = e_varint(byte_size(Data), BinF),
                   <<BinL/binary, Data/binary>>;
               {group, FNum, GroupFields} ->
                   Bin1 = e_varint(FNum bsl 3 bor 3, Bin),
                   Bin2 = e_unknown_elems(GroupFields, Bin1),
                   e_varint(FNum bsl 3 bor 4, Bin2);
               {fixed32, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 5, Bin),
                   <<BinF/binary, V:32/little>>;
               {fixed64, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 1, Bin),
                   <<BinF/binary, V:64/little>>
           end,
    e_unknown_elems(Rest, BinR);
e_unknown_elems([], Bin) -> Bin.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).

is_empty_string("") -> true;
is_empty_string(<<>>) -> true;
is_empty_string(L) when is_list(L) -> not string_has_chars(L);
is_empty_string(B) when is_binary(B) -> false.

string_has_chars([C | _]) when is_integer(C) -> true;
string_has_chars([H | T]) ->
    case string_has_chars(H) of
        true -> true;
        false -> string_has_chars(T)
    end;
string_has_chars(B) when is_binary(B), byte_size(B) =/= 0 -> true;
string_has_chars(C) when is_integer(C) -> true;
string_has_chars(<<>>) -> false;
string_has_chars([]) -> false.


decode_msg(Bin, MsgName) when is_binary(Bin) -> decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason:StackTrace ->
            erlang:raise(error, Reason, StackTrace);
        Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason ->
            erlang:raise(error, Reason,
                         erlang:get_stacktrace());
        Class:Reason ->
            StackTrace = erlang:get_stacktrace(),
            error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('event_store.client.streams.ReadReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.UUIDOption', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.FilterOptions.Expression', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.FilterOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.SubscriptionOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.AllOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq.Options.StreamOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadReq', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp.ReadEvent', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp.ReadEvent'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp.ReadEvent.RecordedEvent', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp.SubscriptionConfirmation', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp.Checkpoint', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp.Checkpoint'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp.StreamNotFound', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.ReadResp', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.ReadResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendReq.ProposedMessage', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendReq', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendResp.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendResp.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendResp.Success', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendResp.Success'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendResp.WrongExpectedVersion', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.AppendResp', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.AppendResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.BatchAppendReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.BatchAppendReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.BatchAppendReq.ProposedMessage', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.BatchAppendReq', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.BatchAppendReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.BatchAppendResp.Success', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.BatchAppendResp.Success'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.BatchAppendResp', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.BatchAppendResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.DeleteReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.DeleteReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.DeleteReq', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.DeleteReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.DeleteResp.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.DeleteResp.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.DeleteResp', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.DeleteResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.TombstoneReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.TombstoneReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.TombstoneReq', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.TombstoneReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.TombstoneResp.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.TombstoneResp.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.streams.TombstoneResp', Bin, TrUserData) -> id('decode_msg_event_store.client.streams.TombstoneResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID.Structured', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Empty', Bin, TrUserData) -> id('decode_msg_event_store.client.Empty'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamIdentifier', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AllStreamPosition', Bin, TrUserData) -> id('decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.WrongExpectedVersion', Bin, TrUserData) -> id('decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AccessDenied', Bin, TrUserData) -> id('decode_msg_event_store.client.AccessDenied'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamDeleted', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Timeout', Bin, TrUserData) -> id('decode_msg_event_store.client.Timeout'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Unknown', Bin, TrUserData) -> id('decode_msg_event_store.client.Unknown'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.InvalidTransaction', Bin, TrUserData) -> id('decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.MaximumAppendSizeExceeded', Bin, TrUserData) -> id('decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.BadRequest', Bin, TrUserData) -> id('decode_msg_event_store.client.BadRequest'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.rpc.Status', Bin, TrUserData) -> id('decode_msg_google.rpc.Status'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Empty', Bin, TrUserData) -> id('decode_msg_google.protobuf.Empty'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Timestamp', Bin, TrUserData) -> id('decode_msg_google.protobuf.Timestamp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Any', Bin, TrUserData) -> id('decode_msg_google.protobuf.Any'(Bin, TrUserData), TrUserData).



'decode_msg_event_store.client.streams.ReadReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id('Forwards', TrUserData), id(false, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_all'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_read_direction'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_resolve_links'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_subscription'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<58, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_filter'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<66, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_no_filter'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<74, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options_uuid_option'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _) ->
    #'event_store.client.streams.ReadReq.Options'{stream_option = F@_1, read_direction = F@_2, resolve_links = F@_3, count_option = F@_4, filter_option = F@_5, uuid_option = F@_6};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadReq.Options_all'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        24 -> 'd_field_event_store.client.streams.ReadReq.Options_read_direction'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        32 -> 'd_field_event_store.client.streams.ReadReq.Options_resolve_links'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        40 -> 'd_field_event_store.client.streams.ReadReq.Options_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        50 -> 'd_field_event_store.client.streams.ReadReq.Options_subscription'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        58 -> 'd_field_event_store.client.streams.ReadReq.Options_filter'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        66 -> 'd_field_event_store.client.streams.ReadReq.Options_no_filter'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        74 -> 'd_field_event_store.client.streams.ReadReq.Options_uuid_option'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _) ->
    #'event_store.client.streams.ReadReq.Options'{stream_option = F@_1, read_direction = F@_2, resolve_links = F@_3, count_option = F@_4, filter_option = F@_5, uuid_option = F@_6}.

'd_field_event_store.client.streams.ReadReq.Options_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    case Prev of
                                                                        undefined -> id({stream, NewFValue}, TrUserData);
                                                                        {stream, MVPrev} -> id({stream, 'merge_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({stream, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    F@_6,
                                                                    TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    case Prev of
                                                                        undefined -> id({all, NewFValue}, TrUserData);
                                                                        {all, MVPrev} -> id({all, 'merge_msg_event_store.client.streams.ReadReq.Options.AllOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({all, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    F@_6,
                                                                    TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_read_direction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_read_direction'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_read_direction'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, F@_5, F@_6, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_resolve_links'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_resolve_links'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_resolve_links'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF, 0, 0, F, F@_1, F@_2, F@_3, id({count, NewFValue}, TrUserData), F@_5, F@_6, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_subscription'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_subscription'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_subscription'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, F@_5, F@_6, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    case Prev of
                                                                        undefined -> id({subscription, NewFValue}, TrUserData);
                                                                        {subscription, MVPrev} -> id({subscription, 'merge_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({subscription, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_5,
                                                                    F@_6,
                                                                    TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_filter'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_filter'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_filter'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, Prev, F@_6, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    case Prev of
                                                                        undefined -> id({filter, NewFValue}, TrUserData);
                                                                        {filter, MVPrev} -> id({filter, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({filter, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_6,
                                                                    TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_no_filter'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_no_filter'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_no_filter'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, Prev, F@_6, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    case Prev of
                                                                        undefined -> id({no_filter, NewFValue}, TrUserData);
                                                                        {no_filter, MVPrev} -> id({no_filter, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({no_filter, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_6,
                                                                    TrUserData).

'd_field_event_store.client.streams.ReadReq.Options_uuid_option'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options_uuid_option'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options_uuid_option'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    F@_5,
                                                                    if Prev == undefined -> NewFValue;
                                                                       true -> 'merge_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Prev, NewFValue, TrUserData)
                                                                    end,
                                                                    TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'skip_varint_event_store.client.streams.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_string'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq.Options.UUIDOption'{content = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_string'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq.Options.UUIDOption'{content = F@_1}.

'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               case Prev of
                                                                                   undefined -> id({structured, NewFValue}, TrUserData);
                                                                                   {structured, MVPrev} -> id({structured, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                   _ -> id({structured, NewFValue}, TrUserData)
                                                                               end,
                                                                               TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_string'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_string'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.UUIDOption_string'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               case Prev of
                                                                                   undefined -> id({string, NewFValue}, TrUserData);
                                                                                   {string, MVPrev} -> id({string, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                   _ -> id({string, NewFValue}, TrUserData)
                                                                               end,
                                                                               TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.UUIDOption'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.UUIDOption'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.UUIDOption'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.UUIDOption'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.UUIDOption'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.UUIDOption'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.UUIDOption'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bin, 0, 0, 0, id(<<>>, TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_regex'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<>>, 0, 0, _, F@_1, R1, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = F@_1, prefix = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_regex'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<>>, 0, 0, _, F@_1, R1, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = F@_1, prefix = lists_reverse(R1, TrUserData)}.

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_regex'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_regex'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_regex'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions.Expression_prefix'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(RestF, 0, 0, F, F@_1, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_max'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_checkpointIntervalMultiplier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = F@_1, window = F@_2, checkpointIntervalMultiplier = F@_3};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        24 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_max'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        34 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        40 -> 'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_checkpointIntervalMultiplier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = F@_1, window = F@_2, checkpointIntervalMultiplier = F@_3}.

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  case Prev of
                                                                                      undefined -> id({stream_identifier, NewFValue}, TrUserData);
                                                                                      {stream_identifier, MVPrev} -> id({stream_identifier, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                      _ -> id({stream_identifier, NewFValue}, TrUserData)
                                                                                  end,
                                                                                  F@_2,
                                                                                  F@_3,
                                                                                  TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_event_type'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  case Prev of
                                                                                      undefined -> id({event_type, NewFValue}, TrUserData);
                                                                                      {event_type, MVPrev} -> id({event_type, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                      _ -> id({event_type, NewFValue}, TrUserData)
                                                                                  end,
                                                                                  F@_2,
                                                                                  F@_3,
                                                                                  TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_max'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_max'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_max'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(RestF, 0, 0, F, F@_1, id({max, NewFValue}, TrUserData), F@_3, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  F@_1,
                                                                                  case Prev of
                                                                                      undefined -> id({count, NewFValue}, TrUserData);
                                                                                      {count, MVPrev} -> id({count, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                      _ -> id({count, NewFValue}, TrUserData)
                                                                                  end,
                                                                                  F@_3,
                                                                                  TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_checkpointIntervalMultiplier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_checkpointIntervalMultiplier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.FilterOptions_checkpointIntervalMultiplier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.FilterOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.FilterOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.FilterOptions'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.FilterOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.FilterOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadReq.Options.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.ReadReq.Options.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.ReadReq.Options.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadReq.Options.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.streams.ReadReq.Options.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq.Options.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<>>, 0, 0, _, _) -> #'event_store.client.streams.ReadReq.Options.SubscriptionOptions'{};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<>>, 0, 0, _, _) -> #'event_store.client.streams.ReadReq.Options.SubscriptionOptions'{}.

'skip_varint_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_start'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_end'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_start'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_event_store.client.streams.ReadReq.Options.AllOptions_end'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = F@_1}.

'd_field_event_store.client.streams.ReadReq.Options.AllOptions_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.AllOptions_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.AllOptions_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               case Prev of
                                                                                   undefined -> id({position, NewFValue}, TrUserData);
                                                                                   {position, MVPrev} -> id({position, 'merge_msg_event_store.client.streams.ReadReq.Options.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                   _ -> id({position, NewFValue}, TrUserData)
                                                                               end,
                                                                               TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.AllOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.AllOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.AllOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               case Prev of
                                                                                   undefined -> id({start, NewFValue}, TrUserData);
                                                                                   {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                   _ -> id({start, NewFValue}, TrUserData)
                                                                               end,
                                                                               TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.AllOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.AllOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.AllOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               case Prev of
                                                                                   undefined -> id({'end', NewFValue}, TrUserData);
                                                                                   {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                   _ -> id({'end', NewFValue}, TrUserData)
                                                                               end,
                                                                               TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.AllOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.AllOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.AllOptions'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.AllOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.AllOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_start'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_end'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2};
'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_start'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_end'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2}.

'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  if Prev == undefined -> NewFValue;
                                                                                     true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                  end,
                                                                                  F@_2,
                                                                                  TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  F@_1,
                                                                                  case Prev of
                                                                                      undefined -> id({start, NewFValue}, TrUserData);
                                                                                      {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                      _ -> id({start, NewFValue}, TrUserData)
                                                                                  end,
                                                                                  TrUserData).

'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadReq.Options.StreamOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(RestF,
                                                                                  0,
                                                                                  0,
                                                                                  F,
                                                                                  F@_1,
                                                                                  case Prev of
                                                                                      undefined -> id({'end', NewFValue}, TrUserData);
                                                                                      {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                      _ -> id({'end', NewFValue}, TrUserData)
                                                                                  end,
                                                                                  TrUserData).

'skip_varint_event_store.client.streams.ReadReq.Options.StreamOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.ReadReq.Options.StreamOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq.Options.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq.Options.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.ReadReq.Options.StreamOptions'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.ReadReq.Options.StreamOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.ReadReq.Options.StreamOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq.Options.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.ReadReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq'{options = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.ReadReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadReq'{options = F@_1}.

'd_field_event_store.client.streams.ReadReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.ReadReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadReq'(RestF,
                                                            0,
                                                            0,
                                                            F,
                                                            if Prev == undefined -> NewFValue;
                                                               true -> 'merge_msg_event_store.client.streams.ReadReq.Options'(Prev, NewFValue, TrUserData)
                                                            end,
                                                            TrUserData).

'skip_varint_event_store.client.streams.ReadReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.ReadReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.ReadResp.ReadEvent'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_event'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_link'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_no_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.ReadResp.ReadEvent'{event = F@_1, link = F@_2, position = F@_3};
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_event'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_link'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        24 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        34 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent_no_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.ReadResp.ReadEvent'{event = F@_1, link = F@_2, position = F@_3}.

'd_field_event_store.client.streams.ReadResp.ReadEvent_event'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent_event'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent_event'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       if Prev == undefined -> NewFValue;
                                                                          true -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Prev, NewFValue, TrUserData)
                                                                       end,
                                                                       F@_2,
                                                                       F@_3,
                                                                       TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent_link'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent_link'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent_link'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       F@_1,
                                                                       if Prev == undefined -> NewFValue;
                                                                          true -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Prev, NewFValue, TrUserData)
                                                                       end,
                                                                       F@_3,
                                                                       TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(RestF, 0, 0, F, F@_1, F@_2, id({commit_position, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       F@_1,
                                                                       F@_2,
                                                                       case Prev of
                                                                           undefined -> id({no_position, NewFValue}, TrUserData);
                                                                           {no_position, MVPrev} -> id({no_position, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                           _ -> id({no_position, NewFValue}, TrUserData)
                                                                       end,
                                                                       TrUserData).

'skip_varint_event_store.client.streams.ReadResp.ReadEvent'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'skip_varint_event_store.client.streams.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.streams.ReadResp.ReadEvent'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.streams.ReadResp.ReadEvent'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.streams.ReadResp.ReadEvent'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.streams.ReadResp.ReadEvent'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bin,
                                                                                     0,
                                                                                     0,
                                                                                     0,
                                                                                     id(undefined, TrUserData),
                                                                                     id(undefined, TrUserData),
                                                                                     id(0, TrUserData),
                                                                                     id(0, TrUserData),
                                                                                     id(0, TrUserData),
                                                                                     'tr_decode_init_default_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'([], TrUserData),
                                                                                     id(<<>>, TrUserData),
                                                                                     id(<<>>, TrUserData),
                                                                                     TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<58, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<66, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_data'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, TrUserData) ->
    #'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = F@_1, stream_identifier = F@_2, stream_revision = F@_3, prepare_position = F@_4, commit_position = F@_5,
                                                                   metadata = 'tr_decode_repeated_finalize_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(R1, TrUserData), custom_metadata = F@_7, data = F@_8};
'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        24 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        32 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        40 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        50 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        58 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        66 -> 'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_data'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, TrUserData) ->
    #'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = F@_1, stream_identifier = F@_2, stream_revision = F@_3, prepare_position = F@_4, commit_position = F@_5,
                                                                   metadata = 'tr_decode_repeated_finalize_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(R1, TrUserData), custom_metadata = F@_7, data = F@_8}.

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     if Prev == undefined -> NewFValue;
                                                                                        true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                                     end,
                                                                                     F@_2,
                                                                                     F@_3,
                                                                                     F@_4,
                                                                                     F@_5,
                                                                                     F@_6,
                                                                                     F@_7,
                                                                                     F@_8,
                                                                                     TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     F@_1,
                                                                                     if Prev == undefined -> NewFValue;
                                                                                        true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                     end,
                                                                                     F@_3,
                                                                                     F@_4,
                                                                                     F@_5,
                                                                                     F@_6,
                                                                                     F@_7,
                                                                                     F@_8,
                                                                                     TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_stream_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, F@_5, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, Prev, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_map<string,string>'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     F@_1,
                                                                                     F@_2,
                                                                                     F@_3,
                                                                                     F@_4,
                                                                                     F@_5,
                                                                                     'tr_decode_repeated_add_elem_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(NewFValue, Prev, TrUserData),
                                                                                     F@_7,
                                                                                     F@_8,
                                                                                     TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, NewFValue, F@_8, TrUserData).

'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_data'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_data'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent_data'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'skip_varint_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'skip_varint_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_group_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_32_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_64_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'decode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.streams.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = F@_1}.

'd_field_event_store.client.streams.ReadResp.SubscriptionConfirmation_subscription_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp.SubscriptionConfirmation_subscription_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadResp.SubscriptionConfirmation'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.ReadResp.Checkpoint'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.Checkpoint_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.Checkpoint_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadResp.Checkpoint'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.ReadResp.Checkpoint_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.ReadResp.Checkpoint_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.ReadResp.Checkpoint'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.streams.ReadResp.Checkpoint_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.Checkpoint_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadResp.Checkpoint_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.ReadResp.Checkpoint_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.Checkpoint_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.ReadResp.Checkpoint_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.ReadResp.Checkpoint'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.ReadResp.Checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.ReadResp.Checkpoint'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp.Checkpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadResp.Checkpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp.Checkpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.ReadResp.Checkpoint'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.ReadResp.Checkpoint'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.ReadResp.Checkpoint'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.Checkpoint'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = F@_1}.

'd_field_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp.StreamNotFound_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(RestF,
                                                                            0,
                                                                            0,
                                                                            F,
                                                                            if Prev == undefined -> NewFValue;
                                                                               true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                            end,
                                                                            TrUserData).

'skip_varint_event_store.client.streams.ReadResp.StreamNotFound'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadResp.StreamNotFound'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadResp.StreamNotFound'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp.StreamNotFound'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.ReadResp.StreamNotFound'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp.StreamNotFound'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadResp.StreamNotFound'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadResp.StreamNotFound'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadResp.StreamNotFound'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp.StreamNotFound'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.ReadResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.ReadResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadResp_event'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadResp_confirmation'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadResp_checkpoint'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.ReadResp_stream_not_found'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.ReadResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp'{content = F@_1};
'dfp_read_field_def_event_store.client.streams.ReadResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.ReadResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.ReadResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.ReadResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.ReadResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.ReadResp_event'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.ReadResp_confirmation'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_event_store.client.streams.ReadResp_checkpoint'(Rest, 0, 0, 0, F@_1, TrUserData);
        34 -> 'd_field_event_store.client.streams.ReadResp_stream_not_found'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.ReadResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.ReadResp'{content = F@_1}.

'd_field_event_store.client.streams.ReadResp_event'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.ReadResp_event'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp_event'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.ReadEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             case Prev of
                                                                 undefined -> id({event, NewFValue}, TrUserData);
                                                                 {event, MVPrev} -> id({event, 'merge_msg_event_store.client.streams.ReadResp.ReadEvent'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                 _ -> id({event, NewFValue}, TrUserData)
                                                             end,
                                                             TrUserData).

'd_field_event_store.client.streams.ReadResp_confirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.ReadResp_confirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp_confirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             case Prev of
                                                                 undefined -> id({confirmation, NewFValue}, TrUserData);
                                                                 {confirmation, MVPrev} -> id({confirmation, 'merge_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                 _ -> id({confirmation, NewFValue}, TrUserData)
                                                             end,
                                                             TrUserData).

'd_field_event_store.client.streams.ReadResp_checkpoint'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.ReadResp_checkpoint'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp_checkpoint'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.Checkpoint'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             case Prev of
                                                                 undefined -> id({checkpoint, NewFValue}, TrUserData);
                                                                 {checkpoint, MVPrev} -> id({checkpoint, 'merge_msg_event_store.client.streams.ReadResp.Checkpoint'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                 _ -> id({checkpoint, NewFValue}, TrUserData)
                                                             end,
                                                             TrUserData).

'd_field_event_store.client.streams.ReadResp_stream_not_found'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.ReadResp_stream_not_found'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.ReadResp_stream_not_found'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.ReadResp.StreamNotFound'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.ReadResp'(RestF,
                                                             0,
                                                             0,
                                                             F,
                                                             case Prev of
                                                                 undefined -> id({stream_not_found, NewFValue}, TrUserData);
                                                                 {stream_not_found, MVPrev} -> id({stream_not_found, 'merge_msg_event_store.client.streams.ReadResp.StreamNotFound'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                 _ -> id({stream_not_found, NewFValue}, TrUserData)
                                                             end,
                                                             TrUserData).

'skip_varint_event_store.client.streams.ReadResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.ReadResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.ReadResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.ReadResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.ReadResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.ReadResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.ReadResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.ReadResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.ReadResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.ReadResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.AppendReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendReq.Options_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendReq.Options_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendReq.Options_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendReq.Options_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2};
'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.AppendReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.AppendReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.AppendReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.AppendReq.Options_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.AppendReq.Options_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.AppendReq.Options_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.streams.AppendReq.Options_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2}.

'd_field_event_store.client.streams.AppendReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      if Prev == undefined -> NewFValue;
                                                                         true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                      end,
                                                                      F@_2,
                                                                      TrUserData).

'd_field_event_store.client.streams.AppendReq.Options_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.Options_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendReq.Options_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.AppendReq.Options_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.Options_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendReq.Options_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                          {no_stream, MVPrev} -> id({no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({no_stream, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'd_field_event_store.client.streams.AppendReq.Options_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.AppendReq.Options_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendReq.Options_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({any, NewFValue}, TrUserData);
                                                                          {any, MVPrev} -> id({any, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({any, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'd_field_event_store.client.streams.AppendReq.Options_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.Options_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendReq.Options_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({stream_exists, NewFValue}, TrUserData);
                                                                          {stream_exists, MVPrev} -> id({stream_exists, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({stream_exists, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'skip_varint_event_store.client.streams.AppendReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.AppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.AppendReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.AppendReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.AppendReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.AppendReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.AppendReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Bin,
                                                                              0,
                                                                              0,
                                                                              0,
                                                                              id(undefined, TrUserData),
                                                                              'tr_decode_init_default_event_store.client.streams.AppendReq.ProposedMessage.metadata'([], TrUserData),
                                                                              id(<<>>, TrUserData),
                                                                              id(<<>>, TrUserData),
                                                                              TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_custom_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_data'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.streams.AppendReq.ProposedMessage'{id = F@_1, metadata = 'tr_decode_repeated_finalize_event_store.client.streams.AppendReq.ProposedMessage.metadata'(R1, TrUserData), custom_metadata = F@_3, data = F@_4};
'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.AppendReq.ProposedMessage_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.streams.AppendReq.ProposedMessage_custom_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.streams.AppendReq.ProposedMessage_data'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.streams.AppendReq.ProposedMessage'{id = F@_1, metadata = 'tr_decode_repeated_finalize_event_store.client.streams.AppendReq.ProposedMessage.metadata'(R1, TrUserData), custom_metadata = F@_3, data = F@_4}.

'd_field_event_store.client.streams.AppendReq.ProposedMessage_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendReq.ProposedMessage_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              if Prev == undefined -> NewFValue;
                                                                                 true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                              end,
                                                                              F@_2,
                                                                              F@_3,
                                                                              F@_4,
                                                                              TrUserData).

'd_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendReq.ProposedMessage_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_map<string,string>'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(RestF, 0, 0, F, F@_1, 'tr_decode_repeated_add_elem_event_store.client.streams.AppendReq.ProposedMessage.metadata'(NewFValue, Prev, TrUserData), F@_3, F@_4, TrUserData).

'd_field_event_store.client.streams.AppendReq.ProposedMessage_custom_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_custom_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendReq.ProposedMessage_custom_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.streams.AppendReq.ProposedMessage_data'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendReq.ProposedMessage_data'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendReq.ProposedMessage_data'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.AppendReq.ProposedMessage'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.streams.AppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.streams.AppendReq.ProposedMessage'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendReq.ProposedMessage'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.AppendReq.ProposedMessage'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendReq.ProposedMessage'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.streams.AppendReq.ProposedMessage'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.streams.AppendReq.ProposedMessage'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.streams.AppendReq.ProposedMessage'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.streams.AppendReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.AppendReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.AppendReq_proposed_message'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.AppendReq'{content = F@_1};
'dfp_read_field_def_event_store.client.streams.AppendReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.AppendReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.AppendReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.AppendReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.AppendReq_proposed_message'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.AppendReq'{content = F@_1}.

'd_field_event_store.client.streams.AppendReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.AppendReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.AppendReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.AppendReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq'(RestF,
                                                              0,
                                                              0,
                                                              F,
                                                              case Prev of
                                                                  undefined -> id({options, NewFValue}, TrUserData);
                                                                  {options, MVPrev} -> id({options, 'merge_msg_event_store.client.streams.AppendReq.Options'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                  _ -> id({options, NewFValue}, TrUserData)
                                                              end,
                                                              TrUserData).

'd_field_event_store.client.streams.AppendReq_proposed_message'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.AppendReq_proposed_message'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.AppendReq_proposed_message'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.AppendReq.ProposedMessage'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendReq'(RestF,
                                                              0,
                                                              0,
                                                              F,
                                                              case Prev of
                                                                  undefined -> id({proposed_message, NewFValue}, TrUserData);
                                                                  {proposed_message, MVPrev} -> id({proposed_message, 'merge_msg_event_store.client.streams.AppendReq.ProposedMessage'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                  _ -> id({proposed_message, NewFValue}, TrUserData)
                                                              end,
                                                              TrUserData).

'skip_varint_event_store.client.streams.AppendReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.AppendReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.AppendReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.AppendReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.AppendReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.AppendReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.AppendReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.AppendResp.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendResp.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.AppendResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.AppendResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.AppendResp.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.AppendResp.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendResp.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.streams.AppendResp.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.AppendResp.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.AppendResp.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.AppendResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.AppendResp.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.AppendResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.AppendResp.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.AppendResp.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.AppendResp.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.AppendResp.Success'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Success_current_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Success_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Success_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.AppendResp.Success_no_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendResp.Success'{current_revision_option = F@_1, position_option = F@_2};
'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.AppendResp.Success'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendResp.Success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.AppendResp.Success'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendResp.Success'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.AppendResp.Success_current_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.streams.AppendResp.Success_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.AppendResp.Success_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.AppendResp.Success_no_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendResp.Success'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.AppendResp.Success'{current_revision_option = F@_1, position_option = F@_2}.

'd_field_event_store.client.streams.AppendResp.Success_current_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Success_current_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Success_current_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(RestF, 0, 0, F, id({current_revision, NewFValue}, TrUserData), F@_2, TrUserData).

'd_field_event_store.client.streams.AppendResp.Success_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Success_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Success_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       case Prev of
                                                                           undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                           {no_stream, MVPrev} -> id({no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                           _ -> id({no_stream, NewFValue}, TrUserData)
                                                                       end,
                                                                       F@_2,
                                                                       TrUserData).

'd_field_event_store.client.streams.AppendResp.Success_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Success_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Success_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.AppendResp.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       F@_1,
                                                                       case Prev of
                                                                           undefined -> id({position, NewFValue}, TrUserData);
                                                                           {position, MVPrev} -> id({position, 'merge_msg_event_store.client.streams.AppendResp.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                           _ -> id({position, NewFValue}, TrUserData)
                                                                       end,
                                                                       TrUserData).

'd_field_event_store.client.streams.AppendResp.Success_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.Success_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.AppendResp.Success_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(RestF,
                                                                       0,
                                                                       0,
                                                                       F,
                                                                       F@_1,
                                                                       case Prev of
                                                                           undefined -> id({no_position, NewFValue}, TrUserData);
                                                                           {no_position, MVPrev} -> id({no_position, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                           _ -> id({no_position, NewFValue}, TrUserData)
                                                                       end,
                                                                       TrUserData).

'skip_varint_event_store.client.streams.AppendResp.Success'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.AppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.AppendResp.Success'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendResp.Success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.AppendResp.Success'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendResp.Success'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.AppendResp.Success'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.AppendResp.Success'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.AppendResp.Success'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision_20_6_0'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision_20_6_0'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<48, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<58, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<74, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<82, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<90, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = F@_1, expected_revision_option_20_6_0 = F@_2, current_revision_option = F@_3, expected_revision_option = F@_4};
'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision_20_6_0'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        24 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision_20_6_0'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        42 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        48 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        58 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        64 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        74 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        82 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        90 -> 'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = F@_1, expected_revision_option_20_6_0 = F@_2, current_revision_option = F@_3, expected_revision_option = F@_4}.

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision_20_6_0'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision_20_6_0'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision_20_6_0'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF, 0, 0, F, id({current_revision_20_6_0, NewFValue}, TrUserData), F@_2, F@_3, F@_4, TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_no_stream_20_6_0'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    case Prev of
                                                                                        undefined -> id({no_stream_20_6_0, NewFValue}, TrUserData);
                                                                                        {no_stream_20_6_0, MVPrev} -> id({no_stream_20_6_0, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({no_stream_20_6_0, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    F@_2,
                                                                                    F@_3,
                                                                                    F@_4,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision_20_6_0'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision_20_6_0'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision_20_6_0'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, id({expected_revision_20_6_0, NewFValue}, TrUserData), F@_3, F@_4, TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_any_20_6_0'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    case Prev of
                                                                                        undefined -> id({any_20_6_0, NewFValue}, TrUserData);
                                                                                        {any_20_6_0, MVPrev} -> id({any_20_6_0, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({any_20_6_0, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    F@_3,
                                                                                    F@_4,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_stream_exists_20_6_0'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    case Prev of
                                                                                        undefined -> id({stream_exists_20_6_0, NewFValue}, TrUserData);
                                                                                        {stream_exists_20_6_0, MVPrev} -> id({stream_exists_20_6_0, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({stream_exists_20_6_0, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    F@_3,
                                                                                    F@_4,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, F@_2, id({current_revision, NewFValue}, TrUserData), F@_4, TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_current_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    F@_2,
                                                                                    case Prev of
                                                                                        undefined -> id({current_no_stream, NewFValue}, TrUserData);
                                                                                        {current_no_stream, MVPrev} -> id({current_no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({current_no_stream, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    F@_4,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, F@_2, F@_3, id({expected_revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    F@_2,
                                                                                    F@_3,
                                                                                    case Prev of
                                                                                        undefined -> id({expected_any, NewFValue}, TrUserData);
                                                                                        {expected_any, MVPrev} -> id({expected_any, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({expected_any, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    F@_2,
                                                                                    F@_3,
                                                                                    case Prev of
                                                                                        undefined -> id({expected_stream_exists, NewFValue}, TrUserData);
                                                                                        {expected_stream_exists, MVPrev} -> id({expected_stream_exists, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({expected_stream_exists, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    TrUserData).

'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.AppendResp.WrongExpectedVersion_expected_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(RestF,
                                                                                    0,
                                                                                    0,
                                                                                    F,
                                                                                    F@_1,
                                                                                    F@_2,
                                                                                    F@_3,
                                                                                    case Prev of
                                                                                        undefined -> id({expected_no_stream, NewFValue}, TrUserData);
                                                                                        {expected_no_stream, MVPrev} -> id({expected_no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                        _ -> id({expected_no_stream, NewFValue}, TrUserData)
                                                                                    end,
                                                                                    TrUserData).

'skip_varint_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.streams.AppendResp.WrongExpectedVersion'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.streams.AppendResp.WrongExpectedVersion'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.AppendResp.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.streams.AppendResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.AppendResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.AppendResp_success'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.AppendResp_wrong_expected_version'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.AppendResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.AppendResp'{result = F@_1};
'dfp_read_field_def_event_store.client.streams.AppendResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.AppendResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.AppendResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.AppendResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.AppendResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.AppendResp_success'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.AppendResp_wrong_expected_version'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.AppendResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.AppendResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.AppendResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.AppendResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.AppendResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.AppendResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.AppendResp'{result = F@_1}.

'd_field_event_store.client.streams.AppendResp_success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.AppendResp_success'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.AppendResp_success'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.AppendResp.Success'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp'(RestF,
                                                               0,
                                                               0,
                                                               F,
                                                               case Prev of
                                                                   undefined -> id({success, NewFValue}, TrUserData);
                                                                   {success, MVPrev} -> id({success, 'merge_msg_event_store.client.streams.AppendResp.Success'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                   _ -> id({success, NewFValue}, TrUserData)
                                                               end,
                                                               TrUserData).

'd_field_event_store.client.streams.AppendResp_wrong_expected_version'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.AppendResp_wrong_expected_version'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.AppendResp_wrong_expected_version'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.AppendResp'(RestF,
                                                               0,
                                                               0,
                                                               F,
                                                               case Prev of
                                                                   undefined -> id({wrong_expected_version, NewFValue}, TrUserData);
                                                                   {wrong_expected_version, MVPrev} -> id({wrong_expected_version, 'merge_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                   _ -> id({wrong_expected_version, NewFValue}, TrUserData)
                                                               end,
                                                               TrUserData).

'skip_varint_event_store.client.streams.AppendResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.AppendResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.AppendResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.AppendResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.AppendResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.AppendResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.AppendResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.AppendResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.AppendResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.AppendResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.AppendResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.AppendResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.BatchAppendReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendReq.Options_any'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_deadline'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = F@_1, expected_stream_position = F@_2, deadline = F@_3};
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dg_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        16 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_stream_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        26 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        34 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_any'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        42 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        50 -> 'd_field_event_store.client.streams.BatchAppendReq.Options_deadline'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.BatchAppendReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = F@_1, expected_stream_position = F@_2, deadline = F@_3}.

'd_field_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF,
                                                                           0,
                                                                           0,
                                                                           F,
                                                                           if Prev == undefined -> NewFValue;
                                                                              true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                           end,
                                                                           F@_2,
                                                                           F@_3,
                                                                           TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.Options_stream_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_stream_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF, 0, 0, F, F@_1, id({stream_position, NewFValue}, TrUserData), F@_3, TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.Options_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF,
                                                                           0,
                                                                           0,
                                                                           F,
                                                                           F@_1,
                                                                           case Prev of
                                                                               undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                               {no_stream, MVPrev} -> id({no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                               _ -> id({no_stream, NewFValue}, TrUserData)
                                                                           end,
                                                                           F@_3,
                                                                           TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.Options_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF,
                                                                           0,
                                                                           0,
                                                                           F,
                                                                           F@_1,
                                                                           case Prev of
                                                                               undefined -> id({any, NewFValue}, TrUserData);
                                                                               {any, MVPrev} -> id({any, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                               _ -> id({any, NewFValue}, TrUserData)
                                                                           end,
                                                                           F@_3,
                                                                           TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.Options_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF,
                                                                           0,
                                                                           0,
                                                                           F,
                                                                           F@_1,
                                                                           case Prev of
                                                                               undefined -> id({stream_exists, NewFValue}, TrUserData);
                                                                               {stream_exists, MVPrev} -> id({stream_exists, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                               _ -> id({stream_exists, NewFValue}, TrUserData)
                                                                           end,
                                                                           F@_3,
                                                                           TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.Options_deadline'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.Options_deadline'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.Options_deadline'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Timestamp'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(RestF,
                                                                           0,
                                                                           0,
                                                                           F,
                                                                           F@_1,
                                                                           F@_2,
                                                                           if Prev == undefined -> NewFValue;
                                                                              true -> 'merge_msg_google.protobuf.Timestamp'(Prev, NewFValue, TrUserData)
                                                                           end,
                                                                           TrUserData).

'skip_varint_event_store.client.streams.BatchAppendReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'skip_varint_event_store.client.streams.BatchAppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.streams.BatchAppendReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.streams.BatchAppendReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.BatchAppendReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.streams.BatchAppendReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.streams.BatchAppendReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.streams.BatchAppendReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.streams.BatchAppendReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Bin,
                                                                                   0,
                                                                                   0,
                                                                                   0,
                                                                                   id(undefined, TrUserData),
                                                                                   'tr_decode_init_default_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'([], TrUserData),
                                                                                   id(<<>>, TrUserData),
                                                                                   id(<<>>, TrUserData),
                                                                                   TrUserData).

'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_custom_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_data'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = F@_1, metadata = 'tr_decode_repeated_finalize_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(R1, TrUserData), custom_metadata = F@_3, data = F@_4};
'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_custom_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_data'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = F@_1, metadata = 'tr_decode_repeated_finalize_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(R1, TrUserData), custom_metadata = F@_3, data = F@_4}.

'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(RestF,
                                                                                   0,
                                                                                   0,
                                                                                   F,
                                                                                   if Prev == undefined -> NewFValue;
                                                                                      true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                                   end,
                                                                                   F@_2,
                                                                                   F@_3,
                                                                                   F@_4,
                                                                                   TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_map<string,string>'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(RestF,
                                                                                   0,
                                                                                   0,
                                                                                   F,
                                                                                   F@_1,
                                                                                   'tr_decode_repeated_add_elem_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(NewFValue, Prev, TrUserData),
                                                                                   F@_3,
                                                                                   F@_4,
                                                                                   TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_custom_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_custom_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_custom_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_data'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_data'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq.ProposedMessage_data'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.streams.BatchAppendReq.ProposedMessage'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.streams.BatchAppendReq.ProposedMessage'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq.ProposedMessage'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.streams.BatchAppendReq'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id([], TrUserData), id(false, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq_correlation_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendReq_options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendReq_proposed_messages'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendReq_is_final'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(<<>>, 0, 0, _, F@_1, F@_2, R1, F@_4, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq'{correlation_id = F@_1, options = F@_2, proposed_messages = lists_reverse(R1, TrUserData), is_final = F@_4};
'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dg_read_field_def_event_store.client.streams.BatchAppendReq'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.streams.BatchAppendReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.BatchAppendReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.streams.BatchAppendReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.BatchAppendReq_correlation_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.streams.BatchAppendReq_options'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.streams.BatchAppendReq_proposed_messages'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        32 -> 'd_field_event_store.client.streams.BatchAppendReq_is_final'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.BatchAppendReq'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.streams.BatchAppendReq'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.BatchAppendReq'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.streams.BatchAppendReq'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.streams.BatchAppendReq'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.BatchAppendReq'(<<>>, 0, 0, _, F@_1, F@_2, R1, F@_4, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq'{correlation_id = F@_1, options = F@_2, proposed_messages = lists_reverse(R1, TrUserData), is_final = F@_4}.

'd_field_event_store.client.streams.BatchAppendReq_correlation_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq_correlation_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq_correlation_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(RestF,
                                                                   0,
                                                                   0,
                                                                   F,
                                                                   if Prev == undefined -> NewFValue;
                                                                      true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                   end,
                                                                   F@_2,
                                                                   F@_3,
                                                                   F@_4,
                                                                   TrUserData).

'd_field_event_store.client.streams.BatchAppendReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.BatchAppendReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(RestF,
                                                                   0,
                                                                   0,
                                                                   F,
                                                                   F@_1,
                                                                   if Prev == undefined -> NewFValue;
                                                                      true -> 'merge_msg_event_store.client.streams.BatchAppendReq.Options'(Prev, NewFValue, TrUserData)
                                                                   end,
                                                                   F@_3,
                                                                   F@_4,
                                                                   TrUserData).

'd_field_event_store.client.streams.BatchAppendReq_proposed_messages'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq_proposed_messages'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq_proposed_messages'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(RestF, 0, 0, F, F@_1, F@_2, cons(NewFValue, Prev, TrUserData), F@_4, TrUserData).

'd_field_event_store.client.streams.BatchAppendReq_is_final'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendReq_is_final'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendReq_is_final'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.BatchAppendReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'skip_varint_event_store.client.streams.BatchAppendReq'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.streams.BatchAppendReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.streams.BatchAppendReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.BatchAppendReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.streams.BatchAppendReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.streams.BatchAppendReq'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.streams.BatchAppendReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.streams.BatchAppendReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendReq'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.streams.BatchAppendResp.Success'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp.Success_current_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp.Success_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp.Success_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp.Success_no_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = F@_1, position_option = F@_2};
'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.BatchAppendResp.Success_current_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.streams.BatchAppendResp.Success_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.BatchAppendResp.Success_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.BatchAppendResp.Success_no_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.BatchAppendResp.Success'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = F@_1, position_option = F@_2}.

'd_field_event_store.client.streams.BatchAppendResp.Success_current_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp.Success_current_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp.Success_current_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(RestF, 0, 0, F, id({current_revision, NewFValue}, TrUserData), F@_2, TrUserData).

'd_field_event_store.client.streams.BatchAppendResp.Success_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp.Success_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp.Success_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(RestF,
                                                                            0,
                                                                            0,
                                                                            F,
                                                                            case Prev of
                                                                                undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                                {no_stream, MVPrev} -> id({no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                _ -> id({no_stream, NewFValue}, TrUserData)
                                                                            end,
                                                                            F@_2,
                                                                            TrUserData).

'd_field_event_store.client.streams.BatchAppendResp.Success_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp.Success_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp.Success_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.AllStreamPosition'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(RestF,
                                                                            0,
                                                                            0,
                                                                            F,
                                                                            F@_1,
                                                                            case Prev of
                                                                                undefined -> id({position, NewFValue}, TrUserData);
                                                                                {position, MVPrev} -> id({position, 'merge_msg_event_store.client.AllStreamPosition'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                _ -> id({position, NewFValue}, TrUserData)
                                                                            end,
                                                                            TrUserData).

'd_field_event_store.client.streams.BatchAppendResp.Success_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp.Success_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp.Success_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(RestF,
                                                                            0,
                                                                            0,
                                                                            F,
                                                                            F@_1,
                                                                            case Prev of
                                                                                undefined -> id({no_position, NewFValue}, TrUserData);
                                                                                {no_position, MVPrev} -> id({no_position, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                _ -> id({no_position, NewFValue}, TrUserData)
                                                                            end,
                                                                            TrUserData).

'skip_varint_event_store.client.streams.BatchAppendResp.Success'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.BatchAppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.BatchAppendResp.Success'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.BatchAppendResp.Success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.BatchAppendResp.Success'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.BatchAppendResp.Success'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.BatchAppendResp.Success'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.BatchAppendResp.Success'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.BatchAppendResp.Success'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp.Success'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.BatchAppendResp'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendResp_correlation_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp_error'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp_success'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendResp_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<58, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'd_field_event_store.client.streams.BatchAppendResp_any'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<66, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.streams.BatchAppendResp'{correlation_id = F@_1, result = F@_2, stream_identifier = F@_3, expected_stream_position = F@_4};
'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dg_read_field_def_event_store.client.streams.BatchAppendResp'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.streams.BatchAppendResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.BatchAppendResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.streams.BatchAppendResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.BatchAppendResp_correlation_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.streams.BatchAppendResp_error'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.streams.BatchAppendResp_success'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.streams.BatchAppendResp_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        40 -> 'd_field_event_store.client.streams.BatchAppendResp_stream_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        50 -> 'd_field_event_store.client.streams.BatchAppendResp_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        58 -> 'd_field_event_store.client.streams.BatchAppendResp_any'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        66 -> 'd_field_event_store.client.streams.BatchAppendResp_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.BatchAppendResp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.streams.BatchAppendResp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.BatchAppendResp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.streams.BatchAppendResp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.streams.BatchAppendResp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.BatchAppendResp'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.streams.BatchAppendResp'{correlation_id = F@_1, result = F@_2, stream_identifier = F@_3, expected_stream_position = F@_4}.

'd_field_event_store.client.streams.BatchAppendResp_correlation_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_correlation_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_correlation_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    if Prev == undefined -> NewFValue;
                                                                       true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                    end,
                                                                    F@_2,
                                                                    F@_3,
                                                                    F@_4,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_error'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_error'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_error'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.rpc.Status'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    case Prev of
                                                                        undefined -> id({error, NewFValue}, TrUserData);
                                                                        {error, MVPrev} -> id({error, 'merge_msg_google.rpc.Status'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({error, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_3,
                                                                    F@_4,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_success'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_success'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_success'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.BatchAppendResp.Success'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    case Prev of
                                                                        undefined -> id({success, NewFValue}, TrUserData);
                                                                        {success, MVPrev} -> id({success, 'merge_msg_event_store.client.streams.BatchAppendResp.Success'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({success, NewFValue}, TrUserData)
                                                                    end,
                                                                    F@_3,
                                                                    F@_4,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    if Prev == undefined -> NewFValue;
                                                                       true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                    end,
                                                                    F@_4,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_stream_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_stream_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF, 0, 0, F, F@_1, F@_2, F@_3, id({stream_position, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    case Prev of
                                                                        undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                        {no_stream, MVPrev} -> id({no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({no_stream, NewFValue}, TrUserData)
                                                                    end,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    case Prev of
                                                                        undefined -> id({any, NewFValue}, TrUserData);
                                                                        {any, MVPrev} -> id({any, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({any, NewFValue}, TrUserData)
                                                                    end,
                                                                    TrUserData).

'd_field_event_store.client.streams.BatchAppendResp_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.BatchAppendResp_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.streams.BatchAppendResp_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(RestF,
                                                                    0,
                                                                    0,
                                                                    F,
                                                                    F@_1,
                                                                    F@_2,
                                                                    F@_3,
                                                                    case Prev of
                                                                        undefined -> id({stream_exists, NewFValue}, TrUserData);
                                                                        {stream_exists, MVPrev} -> id({stream_exists, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                        _ -> id({stream_exists, NewFValue}, TrUserData)
                                                                    end,
                                                                    TrUserData).

'skip_varint_event_store.client.streams.BatchAppendResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'skip_varint_event_store.client.streams.BatchAppendResp'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.streams.BatchAppendResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.streams.BatchAppendResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.BatchAppendResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.streams.BatchAppendResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.streams.BatchAppendResp'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.streams.BatchAppendResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.streams.BatchAppendResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.BatchAppendResp'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.streams.DeleteReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq.Options_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq.Options_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq.Options_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq.Options_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.DeleteReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2};
'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.DeleteReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.DeleteReq.Options_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.DeleteReq.Options_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.DeleteReq.Options_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.streams.DeleteReq.Options_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.DeleteReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2}.

'd_field_event_store.client.streams.DeleteReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      if Prev == undefined -> NewFValue;
                                                                         true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                      end,
                                                                      F@_2,
                                                                      TrUserData).

'd_field_event_store.client.streams.DeleteReq.Options_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteReq.Options_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteReq.Options_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.DeleteReq.Options_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteReq.Options_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteReq.Options_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                          {no_stream, MVPrev} -> id({no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({no_stream, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'd_field_event_store.client.streams.DeleteReq.Options_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.DeleteReq.Options_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteReq.Options_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({any, NewFValue}, TrUserData);
                                                                          {any, MVPrev} -> id({any, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({any, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'd_field_event_store.client.streams.DeleteReq.Options_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteReq.Options_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteReq.Options_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(RestF,
                                                                      0,
                                                                      0,
                                                                      F,
                                                                      F@_1,
                                                                      case Prev of
                                                                          undefined -> id({stream_exists, NewFValue}, TrUserData);
                                                                          {stream_exists, MVPrev} -> id({stream_exists, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                          _ -> id({stream_exists, NewFValue}, TrUserData)
                                                                      end,
                                                                      TrUserData).

'skip_varint_event_store.client.streams.DeleteReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.DeleteReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.DeleteReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.DeleteReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.DeleteReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.DeleteReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.DeleteReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.DeleteReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.DeleteReq'{options = F@_1};
'dfp_read_field_def_event_store.client.streams.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.DeleteReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.DeleteReq'{options = F@_1}.

'd_field_event_store.client.streams.DeleteReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.DeleteReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.DeleteReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.DeleteReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteReq'(RestF,
                                                              0,
                                                              0,
                                                              F,
                                                              if Prev == undefined -> NewFValue;
                                                                 true -> 'merge_msg_event_store.client.streams.DeleteReq.Options'(Prev, NewFValue, TrUserData)
                                                              end,
                                                              TrUserData).

'skip_varint_event_store.client.streams.DeleteReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.DeleteReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.DeleteReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.DeleteReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.DeleteReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.DeleteReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.DeleteReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.DeleteResp.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteResp.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.DeleteResp.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.DeleteResp.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.DeleteResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.DeleteResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.DeleteResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.DeleteResp.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.DeleteResp.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.DeleteResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.DeleteResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.DeleteResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.DeleteResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.DeleteResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.DeleteResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.DeleteResp.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.streams.DeleteResp.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteResp.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteResp.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.DeleteResp.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.DeleteResp.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.DeleteResp.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.DeleteResp.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.DeleteResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.DeleteResp.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.DeleteResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.DeleteResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.DeleteResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.DeleteResp.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.DeleteResp.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.DeleteResp.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.DeleteResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.DeleteResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.DeleteResp_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.DeleteResp_no_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.DeleteResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.DeleteResp'{position_option = F@_1};
'dfp_read_field_def_event_store.client.streams.DeleteResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.DeleteResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.DeleteResp_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.DeleteResp_no_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.DeleteResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.DeleteResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.DeleteResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.DeleteResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.DeleteResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.DeleteResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.DeleteResp'{position_option = F@_1}.

'd_field_event_store.client.streams.DeleteResp_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.DeleteResp_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.DeleteResp_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.DeleteResp.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteResp'(RestF,
                                                               0,
                                                               0,
                                                               F,
                                                               case Prev of
                                                                   undefined -> id({position, NewFValue}, TrUserData);
                                                                   {position, MVPrev} -> id({position, 'merge_msg_event_store.client.streams.DeleteResp.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                   _ -> id({position, NewFValue}, TrUserData)
                                                               end,
                                                               TrUserData).

'd_field_event_store.client.streams.DeleteResp_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.DeleteResp_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.DeleteResp_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.DeleteResp'(RestF,
                                                               0,
                                                               0,
                                                               F,
                                                               case Prev of
                                                                   undefined -> id({no_position, NewFValue}, TrUserData);
                                                                   {no_position, MVPrev} -> id({no_position, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                   _ -> id({no_position, NewFValue}, TrUserData)
                                                               end,
                                                               TrUserData).

'skip_varint_event_store.client.streams.DeleteResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.DeleteResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.DeleteResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.DeleteResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.DeleteResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.DeleteResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.DeleteResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.DeleteResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.DeleteResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.TombstoneReq.Options'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq.Options_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq.Options_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq.Options_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq.Options_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.TombstoneReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2};
'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.TombstoneReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.TombstoneReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.TombstoneReq.Options_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.streams.TombstoneReq.Options_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.streams.TombstoneReq.Options_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.streams.TombstoneReq.Options_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.TombstoneReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.TombstoneReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.TombstoneReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.TombstoneReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.TombstoneReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.TombstoneReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.TombstoneReq.Options'{stream_identifier = F@_1, expected_stream_revision = F@_2}.

'd_field_event_store.client.streams.TombstoneReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(RestF,
                                                                         0,
                                                                         0,
                                                                         F,
                                                                         if Prev == undefined -> NewFValue;
                                                                            true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                         end,
                                                                         F@_2,
                                                                         TrUserData).

'd_field_event_store.client.streams.TombstoneReq.Options_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneReq.Options_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneReq.Options_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.streams.TombstoneReq.Options_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneReq.Options_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneReq.Options_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(RestF,
                                                                         0,
                                                                         0,
                                                                         F,
                                                                         F@_1,
                                                                         case Prev of
                                                                             undefined -> id({no_stream, NewFValue}, TrUserData);
                                                                             {no_stream, MVPrev} -> id({no_stream, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                             _ -> id({no_stream, NewFValue}, TrUserData)
                                                                         end,
                                                                         TrUserData).

'd_field_event_store.client.streams.TombstoneReq.Options_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneReq.Options_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneReq.Options_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(RestF,
                                                                         0,
                                                                         0,
                                                                         F,
                                                                         F@_1,
                                                                         case Prev of
                                                                             undefined -> id({any, NewFValue}, TrUserData);
                                                                             {any, MVPrev} -> id({any, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                             _ -> id({any, NewFValue}, TrUserData)
                                                                         end,
                                                                         TrUserData).

'd_field_event_store.client.streams.TombstoneReq.Options_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneReq.Options_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneReq.Options_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(RestF,
                                                                         0,
                                                                         0,
                                                                         F,
                                                                         F@_1,
                                                                         case Prev of
                                                                             undefined -> id({stream_exists, NewFValue}, TrUserData);
                                                                             {stream_exists, MVPrev} -> id({stream_exists, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                             _ -> id({stream_exists, NewFValue}, TrUserData)
                                                                         end,
                                                                         TrUserData).

'skip_varint_event_store.client.streams.TombstoneReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.TombstoneReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.TombstoneReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.TombstoneReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.TombstoneReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.TombstoneReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.TombstoneReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.TombstoneReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.TombstoneReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.TombstoneReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.TombstoneReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.TombstoneReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.TombstoneReq'{options = F@_1};
'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.TombstoneReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.TombstoneReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.TombstoneReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.TombstoneReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.TombstoneReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.TombstoneReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.TombstoneReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.TombstoneReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.TombstoneReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.TombstoneReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.TombstoneReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.TombstoneReq'{options = F@_1}.

'd_field_event_store.client.streams.TombstoneReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.TombstoneReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.TombstoneReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.TombstoneReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 if Prev == undefined -> NewFValue;
                                                                    true -> 'merge_msg_event_store.client.streams.TombstoneReq.Options'(Prev, NewFValue, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.streams.TombstoneReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.TombstoneReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.TombstoneReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.TombstoneReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.TombstoneReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.TombstoneReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.TombstoneReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.TombstoneReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.TombstoneReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.streams.TombstoneResp.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneResp.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.streams.TombstoneResp.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.TombstoneResp.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.streams.TombstoneResp.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.streams.TombstoneResp.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.streams.TombstoneResp.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.TombstoneResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.streams.TombstoneResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.TombstoneResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.streams.TombstoneResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.streams.TombstoneResp.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.TombstoneResp.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.streams.TombstoneResp.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.streams.TombstoneResp.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneResp.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneResp.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.streams.TombstoneResp.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.streams.TombstoneResp.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.streams.TombstoneResp.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.streams.TombstoneResp.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.streams.TombstoneResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.streams.TombstoneResp.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.streams.TombstoneResp.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.streams.TombstoneResp.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.streams.TombstoneResp.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.streams.TombstoneResp.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.streams.TombstoneResp.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.streams.TombstoneResp.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.streams.TombstoneResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.streams.TombstoneResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.TombstoneResp_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.streams.TombstoneResp_no_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.streams.TombstoneResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.TombstoneResp'{position_option = F@_1};
'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.streams.TombstoneResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.streams.TombstoneResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.streams.TombstoneResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.streams.TombstoneResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.streams.TombstoneResp_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.streams.TombstoneResp_no_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.streams.TombstoneResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.streams.TombstoneResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.streams.TombstoneResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.streams.TombstoneResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.streams.TombstoneResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.streams.TombstoneResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.streams.TombstoneResp'{position_option = F@_1}.

'd_field_event_store.client.streams.TombstoneResp_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.TombstoneResp_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.TombstoneResp_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.streams.TombstoneResp.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneResp'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  case Prev of
                                                                      undefined -> id({position, NewFValue}, TrUserData);
                                                                      {position, MVPrev} -> id({position, 'merge_msg_event_store.client.streams.TombstoneResp.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                      _ -> id({position, NewFValue}, TrUserData)
                                                                  end,
                                                                  TrUserData).

'd_field_event_store.client.streams.TombstoneResp_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.streams.TombstoneResp_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.streams.TombstoneResp_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.streams.TombstoneResp'(RestF,
                                                                  0,
                                                                  0,
                                                                  F,
                                                                  case Prev of
                                                                      undefined -> id({no_position, NewFValue}, TrUserData);
                                                                      {no_position, MVPrev} -> id({no_position, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                      _ -> id({no_position, NewFValue}, TrUserData)
                                                                  end,
                                                                  TrUserData).

'skip_varint_event_store.client.streams.TombstoneResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.streams.TombstoneResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.streams.TombstoneResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.streams.TombstoneResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.streams.TombstoneResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.streams.TombstoneResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.streams.TombstoneResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.streams.TombstoneResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.streams.TombstoneResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.streams.TombstoneResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID.Structured'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2};
'dfp_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2}.

'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.UUID.Structured'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.UUID.Structured'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.UUID.Structured'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.UUID.Structured'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.UUID.Structured'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.UUID'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_structured'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_string'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1};
'dfp_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.UUID_structured'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.UUID_string'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1}.

'd_field_event_store.client.UUID_structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID.Structured'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF,
                                                 0,
                                                 0,
                                                 F,
                                                 case Prev of
                                                     undefined -> id({structured, NewFValue}, TrUserData);
                                                     {structured, MVPrev} -> id({structured, 'merge_msg_event_store.client.UUID.Structured'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                     _ -> id({structured, NewFValue}, TrUserData)
                                                 end,
                                                 TrUserData).

'd_field_event_store.client.UUID_string'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_string'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_string'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF, 0, 0, F, id({string, NewFValue}, TrUserData), TrUserData).

'skip_varint_event_store.client.UUID'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.UUID'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.UUID'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.UUID'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.UUID'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{};
'dfp_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{}.

'skip_varint_event_store.client.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamIdentifier'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1};
'dfp_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        26 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1}.

'd_field_event_store.client.StreamIdentifier_stream_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamIdentifier_stream_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.StreamIdentifier'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamIdentifier'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamIdentifier'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamIdentifier'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamIdentifier'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.AllStreamPosition'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.AllStreamPosition_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.AllStreamPosition_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.AllStreamPosition'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.AllStreamPosition'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.AllStreamPosition'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.AllStreamPosition'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.AllStreamPosition'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2};
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        24 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        50 -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2}.

'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, id({current_stream_revision, NewFValue}, TrUserData), F@_2, TrUserData).

'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 case Prev of
                                                                     undefined -> id({current_no_stream, NewFValue}, TrUserData);
                                                                     {current_no_stream, MVPrev} -> id({current_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({current_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 F@_2,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, id({expected_stream_position, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_any, NewFValue}, TrUserData);
                                                                     {expected_any, MVPrev} -> id({expected_any, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_any, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_stream_exists, NewFValue}, TrUserData);
                                                                     {expected_stream_exists, MVPrev} -> id({expected_stream_exists, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_stream_exists, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_no_stream, NewFValue}, TrUserData);
                                                                     {expected_no_stream, MVPrev} -> id({expected_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.WrongExpectedVersion'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.WrongExpectedVersion'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.WrongExpectedVersion'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.WrongExpectedVersion'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.WrongExpectedVersion'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.AccessDenied'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{};
'dfp_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{}.

'skip_varint_event_store.client.AccessDenied'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.AccessDenied'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.AccessDenied'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.AccessDenied'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.AccessDenied'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamDeleted'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1};
'dfp_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1}.

'd_field_event_store.client.StreamDeleted_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamDeleted_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamDeleted'(RestF,
                                                          0,
                                                          0,
                                                          F,
                                                          if Prev == undefined -> NewFValue;
                                                             true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                          end,
                                                          TrUserData).

'skip_varint_event_store.client.StreamDeleted'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamDeleted'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamDeleted'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamDeleted'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamDeleted'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Timeout'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{};
'dfp_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{}.

'skip_varint_event_store.client.Timeout'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Timeout'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Timeout'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Timeout'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Timeout'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Timeout'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Timeout'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.Unknown'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{};
'dfp_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{}.

'skip_varint_event_store.client.Unknown'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Unknown'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Unknown'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Unknown'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Unknown'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Unknown'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Unknown'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{};
'dfp_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{}.

'skip_varint_event_store.client.InvalidTransaction'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.InvalidTransaction'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.InvalidTransaction'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.InvalidTransaction'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.InvalidTransaction'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Bin, 0, 0, 0, id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1};
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1}.

'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.MaximumAppendSizeExceeded'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.MaximumAppendSizeExceeded'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.MaximumAppendSizeExceeded'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.BadRequest'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.BadRequest'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.BadRequest_message'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1};
'dfp_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.BadRequest_message'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1}.

'd_field_event_store.client.BadRequest_message'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.BadRequest_message'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.BadRequest_message'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.BadRequest'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.BadRequest'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.BadRequest'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.BadRequest'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.BadRequest'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.BadRequest'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.BadRequest'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.BadRequest'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_google.rpc.Status'(Bin, TrUserData) -> 'dfp_read_field_def_google.rpc.Status'(Bin, 0, 0, 0, id('OK', TrUserData), id(<<>>, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_google.rpc.Status'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_google.rpc.Status_code'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_google.rpc.Status'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_google.rpc.Status_message'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_google.rpc.Status'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'd_field_google.rpc.Status_details'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_google.rpc.Status'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'google.rpc.Status'{code = F@_1, message = F@_2, details = F@_3};
'dfp_read_field_def_google.rpc.Status'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dg_read_field_def_google.rpc.Status'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_google.rpc.Status'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.rpc.Status'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_google.rpc.Status'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_google.rpc.Status_code'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_google.rpc.Status_message'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        26 -> 'd_field_google.rpc.Status_details'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.rpc.Status'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_google.rpc.Status'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_google.rpc.Status'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_google.rpc.Status'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_google.rpc.Status'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_google.rpc.Status'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) -> #'google.rpc.Status'{code = F@_1, message = F@_2, details = F@_3}.

'd_field_google.rpc.Status_code'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 -> 'd_field_google.rpc.Status_code'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_google.rpc.Status_code'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_google.rpc.Code'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_google.rpc.Status'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, TrUserData).

'd_field_google.rpc.Status_message'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 -> 'd_field_google.rpc.Status_message'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_google.rpc.Status_message'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_google.rpc.Status'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, TrUserData).

'd_field_google.rpc.Status_details'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 -> 'd_field_google.rpc.Status_details'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_google.rpc.Status_details'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Any'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_google.rpc.Status'(RestF,
                                           0,
                                           0,
                                           F,
                                           F@_1,
                                           F@_2,
                                           if Prev == undefined -> NewFValue;
                                              true -> 'merge_msg_google.protobuf.Any'(Prev, NewFValue, TrUserData)
                                           end,
                                           TrUserData).

'skip_varint_google.rpc.Status'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'skip_varint_google.rpc.Status'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_google.rpc.Status'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_google.rpc.Status'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_google.rpc.Status'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 -> 'skip_length_delimited_google.rpc.Status'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_google.rpc.Status'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.rpc.Status'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_google.rpc.Status'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.rpc.Status'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_google.rpc.Status'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_google.rpc.Status'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_google.rpc.Status'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) -> 'dfp_read_field_def_google.rpc.Status'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_google.protobuf.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{};
'dfp_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{}.

'skip_varint_google.protobuf.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_google.protobuf.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_google.protobuf.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_google.protobuf.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_google.protobuf.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_google.protobuf.Timestamp'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Timestamp'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_google.protobuf.Timestamp'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_google.protobuf.Timestamp_seconds'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_google.protobuf.Timestamp'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_google.protobuf.Timestamp_nanos'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_google.protobuf.Timestamp'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'google.protobuf.Timestamp'{seconds = F@_1, nanos = F@_2};
'dfp_read_field_def_google.protobuf.Timestamp'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_google.protobuf.Timestamp'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_google.protobuf.Timestamp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Timestamp'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_google.protobuf.Timestamp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_google.protobuf.Timestamp_seconds'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_google.protobuf.Timestamp_nanos'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.protobuf.Timestamp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_google.protobuf.Timestamp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_google.protobuf.Timestamp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_google.protobuf.Timestamp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_google.protobuf.Timestamp'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_google.protobuf.Timestamp'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'google.protobuf.Timestamp'{seconds = F@_1, nanos = F@_2}.

'd_field_google.protobuf.Timestamp_seconds'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_google.protobuf.Timestamp_seconds'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_google.protobuf.Timestamp_seconds'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_google.protobuf.Timestamp'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_google.protobuf.Timestamp_nanos'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_google.protobuf.Timestamp_nanos'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_google.protobuf.Timestamp_nanos'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_google.protobuf.Timestamp'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_google.protobuf.Timestamp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_google.protobuf.Timestamp'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_google.protobuf.Timestamp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Timestamp'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_google.protobuf.Timestamp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Timestamp'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_google.protobuf.Timestamp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Timestamp'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_google.protobuf.Timestamp'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Timestamp'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_google.protobuf.Timestamp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Timestamp'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_google.protobuf.Timestamp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Timestamp'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_google.protobuf.Any'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Any'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_google.protobuf.Any'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_google.protobuf.Any_type_url'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_google.protobuf.Any'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_google.protobuf.Any_value'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_google.protobuf.Any'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'google.protobuf.Any'{type_url = F@_1, value = F@_2};
'dfp_read_field_def_google.protobuf.Any'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_google.protobuf.Any'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_google.protobuf.Any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_google.protobuf.Any'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_google.protobuf.Any_type_url'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_google.protobuf.Any_value'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_google.protobuf.Any'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_google.protobuf.Any'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_google.protobuf.Any'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_google.protobuf.Any'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_google.protobuf.Any'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_google.protobuf.Any'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'google.protobuf.Any'{type_url = F@_1, value = F@_2}.

'd_field_google.protobuf.Any_type_url'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_google.protobuf.Any_type_url'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_google.protobuf.Any_type_url'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Any'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_google.protobuf.Any_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_google.protobuf.Any_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_google.protobuf.Any_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_google.protobuf.Any'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_google.protobuf.Any'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_google.protobuf.Any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_google.protobuf.Any'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_google.protobuf.Any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_google.protobuf.Any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Any'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_google.protobuf.Any'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Any'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_google.protobuf.Any'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_google.protobuf.Any'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_google.protobuf.Any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_map<string,string>'(Bin, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_map<string,string>'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,string>_key'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,string>'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,string>_value'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,string>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,string>'{key = F@_1, value = F@_2};
'dfp_read_field_def_map<string,string>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_map<string,string>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_map<string,string>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_map<string,string>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_map<string,string>'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_map<string,string>_key'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_map<string,string>_value'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_map<string,string>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,string>'{key = F@_1, value = F@_2}.

'd_field_map<string,string>_key'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,string>_key'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,string>_key'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,string>'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_map<string,string>_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,string>_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,string>_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,string>'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_map<string,string>'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_map<string,string>'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_map<string,string>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_map<string,string>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_map<string,string>'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_map<string,string>'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_map<string,string>'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_map<string,string>'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_map<string,string>'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_map<string,string>'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'd_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(0) -> 'Forwards';
'd_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(1) -> 'Backwards';
'd_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(V) -> V.

'd_enum_google.rpc.Code'(0) -> 'OK';
'd_enum_google.rpc.Code'(1) -> 'CANCELLED';
'd_enum_google.rpc.Code'(2) -> 'UNKNOWN';
'd_enum_google.rpc.Code'(3) -> 'INVALID_ARGUMENT';
'd_enum_google.rpc.Code'(4) -> 'DEADLINE_EXCEEDED';
'd_enum_google.rpc.Code'(5) -> 'NOT_FOUND';
'd_enum_google.rpc.Code'(6) -> 'ALREADY_EXISTS';
'd_enum_google.rpc.Code'(7) -> 'PERMISSION_DENIED';
'd_enum_google.rpc.Code'(16) -> 'UNAUTHENTICATED';
'd_enum_google.rpc.Code'(8) -> 'RESOURCE_EXHAUSTED';
'd_enum_google.rpc.Code'(9) -> 'FAILED_PRECONDITION';
'd_enum_google.rpc.Code'(10) -> 'ABORTED';
'd_enum_google.rpc.Code'(11) -> 'OUT_OF_RANGE';
'd_enum_google.rpc.Code'(12) -> 'UNIMPLEMENTED';
'd_enum_google.rpc.Code'(13) -> 'INTERNAL';
'd_enum_google.rpc.Code'(14) -> 'UNAVAILABLE';
'd_enum_google.rpc.Code'(15) -> 'DATA_LOSS';
'd_enum_google.rpc.Code'(V) -> V.

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New) when element(1, Prev) =:= element(1, New) -> merge_msgs(Prev, New, element(1, Prev), []).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) -> merge_msgs(Prev, New, MsgName, []);
merge_msgs(Prev, New, Opts) when element(1, Prev) =:= element(1, New), is_list(Opts) -> merge_msgs(Prev, New, element(1, Prev), Opts).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.streams.ReadReq.Options' -> 'merge_msg_event_store.client.streams.ReadReq.Options'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.UUIDOption' -> 'merge_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions.Expression' -> 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions' -> 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.Position' -> 'merge_msg_event_store.client.streams.ReadReq.Options.Position'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.SubscriptionOptions' -> 'merge_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.AllOptions' -> 'merge_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq.Options.StreamOptions' -> 'merge_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Prev, New, TrUserData);
        'event_store.client.streams.ReadReq' -> 'merge_msg_event_store.client.streams.ReadReq'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent' -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent' -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp.SubscriptionConfirmation' -> 'merge_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp.Checkpoint' -> 'merge_msg_event_store.client.streams.ReadResp.Checkpoint'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp.StreamNotFound' -> 'merge_msg_event_store.client.streams.ReadResp.StreamNotFound'(Prev, New, TrUserData);
        'event_store.client.streams.ReadResp' -> 'merge_msg_event_store.client.streams.ReadResp'(Prev, New, TrUserData);
        'event_store.client.streams.AppendReq.Options' -> 'merge_msg_event_store.client.streams.AppendReq.Options'(Prev, New, TrUserData);
        'event_store.client.streams.AppendReq.ProposedMessage' -> 'merge_msg_event_store.client.streams.AppendReq.ProposedMessage'(Prev, New, TrUserData);
        'event_store.client.streams.AppendReq' -> 'merge_msg_event_store.client.streams.AppendReq'(Prev, New, TrUserData);
        'event_store.client.streams.AppendResp.Position' -> 'merge_msg_event_store.client.streams.AppendResp.Position'(Prev, New, TrUserData);
        'event_store.client.streams.AppendResp.Success' -> 'merge_msg_event_store.client.streams.AppendResp.Success'(Prev, New, TrUserData);
        'event_store.client.streams.AppendResp.WrongExpectedVersion' -> 'merge_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Prev, New, TrUserData);
        'event_store.client.streams.AppendResp' -> 'merge_msg_event_store.client.streams.AppendResp'(Prev, New, TrUserData);
        'event_store.client.streams.BatchAppendReq.Options' -> 'merge_msg_event_store.client.streams.BatchAppendReq.Options'(Prev, New, TrUserData);
        'event_store.client.streams.BatchAppendReq.ProposedMessage' -> 'merge_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Prev, New, TrUserData);
        'event_store.client.streams.BatchAppendReq' -> 'merge_msg_event_store.client.streams.BatchAppendReq'(Prev, New, TrUserData);
        'event_store.client.streams.BatchAppendResp.Success' -> 'merge_msg_event_store.client.streams.BatchAppendResp.Success'(Prev, New, TrUserData);
        'event_store.client.streams.BatchAppendResp' -> 'merge_msg_event_store.client.streams.BatchAppendResp'(Prev, New, TrUserData);
        'event_store.client.streams.DeleteReq.Options' -> 'merge_msg_event_store.client.streams.DeleteReq.Options'(Prev, New, TrUserData);
        'event_store.client.streams.DeleteReq' -> 'merge_msg_event_store.client.streams.DeleteReq'(Prev, New, TrUserData);
        'event_store.client.streams.DeleteResp.Position' -> 'merge_msg_event_store.client.streams.DeleteResp.Position'(Prev, New, TrUserData);
        'event_store.client.streams.DeleteResp' -> 'merge_msg_event_store.client.streams.DeleteResp'(Prev, New, TrUserData);
        'event_store.client.streams.TombstoneReq.Options' -> 'merge_msg_event_store.client.streams.TombstoneReq.Options'(Prev, New, TrUserData);
        'event_store.client.streams.TombstoneReq' -> 'merge_msg_event_store.client.streams.TombstoneReq'(Prev, New, TrUserData);
        'event_store.client.streams.TombstoneResp.Position' -> 'merge_msg_event_store.client.streams.TombstoneResp.Position'(Prev, New, TrUserData);
        'event_store.client.streams.TombstoneResp' -> 'merge_msg_event_store.client.streams.TombstoneResp'(Prev, New, TrUserData);
        'event_store.client.UUID.Structured' -> 'merge_msg_event_store.client.UUID.Structured'(Prev, New, TrUserData);
        'event_store.client.UUID' -> 'merge_msg_event_store.client.UUID'(Prev, New, TrUserData);
        'event_store.client.Empty' -> 'merge_msg_event_store.client.Empty'(Prev, New, TrUserData);
        'event_store.client.StreamIdentifier' -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, New, TrUserData);
        'event_store.client.AllStreamPosition' -> 'merge_msg_event_store.client.AllStreamPosition'(Prev, New, TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'merge_msg_event_store.client.WrongExpectedVersion'(Prev, New, TrUserData);
        'event_store.client.AccessDenied' -> 'merge_msg_event_store.client.AccessDenied'(Prev, New, TrUserData);
        'event_store.client.StreamDeleted' -> 'merge_msg_event_store.client.StreamDeleted'(Prev, New, TrUserData);
        'event_store.client.Timeout' -> 'merge_msg_event_store.client.Timeout'(Prev, New, TrUserData);
        'event_store.client.Unknown' -> 'merge_msg_event_store.client.Unknown'(Prev, New, TrUserData);
        'event_store.client.InvalidTransaction' -> 'merge_msg_event_store.client.InvalidTransaction'(Prev, New, TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'merge_msg_event_store.client.MaximumAppendSizeExceeded'(Prev, New, TrUserData);
        'event_store.client.BadRequest' -> 'merge_msg_event_store.client.BadRequest'(Prev, New, TrUserData);
        'google.rpc.Status' -> 'merge_msg_google.rpc.Status'(Prev, New, TrUserData);
        'google.protobuf.Empty' -> 'merge_msg_google.protobuf.Empty'(Prev, New, TrUserData);
        'google.protobuf.Timestamp' -> 'merge_msg_google.protobuf.Timestamp'(Prev, New, TrUserData);
        'google.protobuf.Any' -> 'merge_msg_google.protobuf.Any'(Prev, New, TrUserData)
    end.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options'(#'event_store.client.streams.ReadReq.Options'{stream_option = PFstream_option, read_direction = PFread_direction, resolve_links = PFresolve_links, count_option = PFcount_option,
                                                                                                     filter_option = PFfilter_option, uuid_option = PFuuid_option},
                                                       #'event_store.client.streams.ReadReq.Options'{stream_option = NFstream_option, read_direction = NFread_direction, resolve_links = NFresolve_links, count_option = NFcount_option, filter_option = NFfilter_option, uuid_option = NFuuid_option},
                                                       TrUserData) ->
    #'event_store.client.streams.ReadReq.Options'{stream_option =
                                                      case {PFstream_option, NFstream_option} of
                                                          {{stream, OPFstream_option}, {stream, ONFstream_option}} -> {stream, 'merge_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                          {{all, OPFstream_option}, {all, ONFstream_option}} -> {all, 'merge_msg_event_store.client.streams.ReadReq.Options.AllOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                          {_, undefined} -> PFstream_option;
                                                          _ -> NFstream_option
                                                      end,
                                                  read_direction =
                                                      if NFread_direction =:= undefined -> PFread_direction;
                                                         true -> NFread_direction
                                                      end,
                                                  resolve_links =
                                                      if NFresolve_links =:= undefined -> PFresolve_links;
                                                         true -> NFresolve_links
                                                      end,
                                                  count_option =
                                                      case {PFcount_option, NFcount_option} of
                                                          {{subscription, OPFcount_option}, {subscription, ONFcount_option}} -> {subscription, 'merge_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(OPFcount_option, ONFcount_option, TrUserData)};
                                                          {_, undefined} -> PFcount_option;
                                                          _ -> NFcount_option
                                                      end,
                                                  filter_option =
                                                      case {PFfilter_option, NFfilter_option} of
                                                          {{filter, OPFfilter_option}, {filter, ONFfilter_option}} -> {filter, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(OPFfilter_option, ONFfilter_option, TrUserData)};
                                                          {{no_filter, OPFfilter_option}, {no_filter, ONFfilter_option}} -> {no_filter, 'merge_msg_event_store.client.Empty'(OPFfilter_option, ONFfilter_option, TrUserData)};
                                                          {_, undefined} -> PFfilter_option;
                                                          _ -> NFfilter_option
                                                      end,
                                                  uuid_option =
                                                      if PFuuid_option /= undefined, NFuuid_option /= undefined -> 'merge_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(PFuuid_option, NFuuid_option, TrUserData);
                                                         PFuuid_option == undefined -> NFuuid_option;
                                                         NFuuid_option == undefined -> PFuuid_option
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.UUIDOption'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(#'event_store.client.streams.ReadReq.Options.UUIDOption'{content = PFcontent}, #'event_store.client.streams.ReadReq.Options.UUIDOption'{content = NFcontent}, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.UUIDOption'{content =
                                                                 case {PFcontent, NFcontent} of
                                                                     {{structured, OPFcontent}, {structured, ONFcontent}} -> {structured, 'merge_msg_event_store.client.Empty'(OPFcontent, ONFcontent, TrUserData)};
                                                                     {{string, OPFcontent}, {string, ONFcontent}} -> {string, 'merge_msg_event_store.client.Empty'(OPFcontent, ONFcontent, TrUserData)};
                                                                     {_, undefined} -> PFcontent;
                                                                     _ -> NFcontent
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(#'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = PFregex, prefix = PFprefix},
                                                                                #'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = NFregex, prefix = NFprefix}, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex =
                                                                               if NFregex =:= undefined -> PFregex;
                                                                                  true -> NFregex
                                                                               end,
                                                                           prefix =
                                                                               if PFprefix /= undefined, NFprefix /= undefined -> 'erlang_++'(PFprefix, NFprefix, TrUserData);
                                                                                  PFprefix == undefined -> NFprefix;
                                                                                  NFprefix == undefined -> PFprefix
                                                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(#'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = PFfilter, window = PFwindow, checkpointIntervalMultiplier = PFcheckpointIntervalMultiplier},
                                                                     #'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = NFfilter, window = NFwindow, checkpointIntervalMultiplier = NFcheckpointIntervalMultiplier}, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.FilterOptions'{filter =
                                                                    case {PFfilter, NFfilter} of
                                                                        {{stream_identifier, OPFfilter}, {stream_identifier, ONFfilter}} -> {stream_identifier, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(OPFfilter, ONFfilter, TrUserData)};
                                                                        {{event_type, OPFfilter}, {event_type, ONFfilter}} -> {event_type, 'merge_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(OPFfilter, ONFfilter, TrUserData)};
                                                                        {_, undefined} -> PFfilter;
                                                                        _ -> NFfilter
                                                                    end,
                                                                window =
                                                                    case {PFwindow, NFwindow} of
                                                                        {{count, OPFwindow}, {count, ONFwindow}} -> {count, 'merge_msg_event_store.client.Empty'(OPFwindow, ONFwindow, TrUserData)};
                                                                        {_, undefined} -> PFwindow;
                                                                        _ -> NFwindow
                                                                    end,
                                                                checkpointIntervalMultiplier =
                                                                    if NFcheckpointIntervalMultiplier =:= undefined -> PFcheckpointIntervalMultiplier;
                                                                       true -> NFcheckpointIntervalMultiplier
                                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.Position'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.Position'(#'event_store.client.streams.ReadReq.Options.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                                #'event_store.client.streams.ReadReq.Options.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.streams.ReadReq.Options.Position'{commit_position =
                                                               if NFcommit_position =:= undefined -> PFcommit_position;
                                                                  true -> NFcommit_position
                                                               end,
                                                           prepare_position =
                                                               if NFprepare_position =:= undefined -> PFprepare_position;
                                                                  true -> NFprepare_position
                                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.AllOptions'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.AllOptions'(#'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = PFall_option}, #'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = NFall_option}, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.AllOptions'{all_option =
                                                                 case {PFall_option, NFall_option} of
                                                                     {{position, OPFall_option}, {position, ONFall_option}} -> {position, 'merge_msg_event_store.client.streams.ReadReq.Options.Position'(OPFall_option, ONFall_option, TrUserData)};
                                                                     {{start, OPFall_option}, {start, ONFall_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                     {{'end', OPFall_option}, {'end', ONFall_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                     {_, undefined} -> PFall_option;
                                                                     _ -> NFall_option
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq.Options.StreamOptions'/3}).
'merge_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(#'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = PFstream_identifier, revision_option = PFrevision_option},
                                                                     #'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = NFstream_identifier, revision_option = NFrevision_option}, TrUserData) ->
    #'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier =
                                                                    if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                       PFstream_identifier == undefined -> NFstream_identifier;
                                                                       NFstream_identifier == undefined -> PFstream_identifier
                                                                    end,
                                                                revision_option =
                                                                    case {PFrevision_option, NFrevision_option} of
                                                                        {{start, OPFrevision_option}, {start, ONFrevision_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                        {{'end', OPFrevision_option}, {'end', ONFrevision_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                        {_, undefined} -> PFrevision_option;
                                                                        _ -> NFrevision_option
                                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadReq'/3}).
'merge_msg_event_store.client.streams.ReadReq'(#'event_store.client.streams.ReadReq'{options = PFoptions}, #'event_store.client.streams.ReadReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.streams.ReadReq'{options =
                                              if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.streams.ReadReq.Options'(PFoptions, NFoptions, TrUserData);
                                                 PFoptions == undefined -> NFoptions;
                                                 NFoptions == undefined -> PFoptions
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp.ReadEvent'/3}).
'merge_msg_event_store.client.streams.ReadResp.ReadEvent'(#'event_store.client.streams.ReadResp.ReadEvent'{event = PFevent, link = PFlink, position = PFposition},
                                                          #'event_store.client.streams.ReadResp.ReadEvent'{event = NFevent, link = NFlink, position = NFposition}, TrUserData) ->
    #'event_store.client.streams.ReadResp.ReadEvent'{event =
                                                         if PFevent /= undefined, NFevent /= undefined -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(PFevent, NFevent, TrUserData);
                                                            PFevent == undefined -> NFevent;
                                                            NFevent == undefined -> PFevent
                                                         end,
                                                     link =
                                                         if PFlink /= undefined, NFlink /= undefined -> 'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(PFlink, NFlink, TrUserData);
                                                            PFlink == undefined -> NFlink;
                                                            NFlink == undefined -> PFlink
                                                         end,
                                                     position =
                                                         case {PFposition, NFposition} of
                                                             {{no_position, OPFposition}, {no_position, ONFposition}} -> {no_position, 'merge_msg_event_store.client.Empty'(OPFposition, ONFposition, TrUserData)};
                                                             {_, undefined} -> PFposition;
                                                             _ -> NFposition
                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'/3}).
'merge_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = PFid, stream_identifier = PFstream_identifier, stream_revision = PFstream_revision,
                                                                                                                                       prepare_position = PFprepare_position, commit_position = PFcommit_position, metadata = PFmetadata, custom_metadata = PFcustom_metadata, data = PFdata},
                                                                        #'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = NFid, stream_identifier = NFstream_identifier, stream_revision = NFstream_revision, prepare_position = NFprepare_position, commit_position = NFcommit_position,
                                                                                                                                       metadata = NFmetadata, custom_metadata = NFcustom_metadata, data = NFdata},
                                                                        TrUserData) ->
    #'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id =
                                                                       if PFid /= undefined, NFid /= undefined -> 'merge_msg_event_store.client.UUID'(PFid, NFid, TrUserData);
                                                                          PFid == undefined -> NFid;
                                                                          NFid == undefined -> PFid
                                                                       end,
                                                                   stream_identifier =
                                                                       if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                          PFstream_identifier == undefined -> NFstream_identifier;
                                                                          NFstream_identifier == undefined -> PFstream_identifier
                                                                       end,
                                                                   stream_revision =
                                                                       if NFstream_revision =:= undefined -> PFstream_revision;
                                                                          true -> NFstream_revision
                                                                       end,
                                                                   prepare_position =
                                                                       if NFprepare_position =:= undefined -> PFprepare_position;
                                                                          true -> NFprepare_position
                                                                       end,
                                                                   commit_position =
                                                                       if NFcommit_position =:= undefined -> PFcommit_position;
                                                                          true -> NFcommit_position
                                                                       end,
                                                                   metadata =
                                                                       if PFmetadata /= undefined, NFmetadata /= undefined -> 'tr_merge_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(PFmetadata, NFmetadata, TrUserData);
                                                                          PFmetadata == undefined -> NFmetadata;
                                                                          NFmetadata == undefined -> PFmetadata
                                                                       end,
                                                                   custom_metadata =
                                                                       if NFcustom_metadata =:= undefined -> PFcustom_metadata;
                                                                          true -> NFcustom_metadata
                                                                       end,
                                                                   data =
                                                                       if NFdata =:= undefined -> PFdata;
                                                                          true -> NFdata
                                                                       end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'/3}).
'merge_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(#'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = PFsubscription_id},
                                                                         #'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = NFsubscription_id}, _) ->
    #'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id =
                                                                        if NFsubscription_id =:= undefined -> PFsubscription_id;
                                                                           true -> NFsubscription_id
                                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp.Checkpoint'/3}).
'merge_msg_event_store.client.streams.ReadResp.Checkpoint'(#'event_store.client.streams.ReadResp.Checkpoint'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                           #'event_store.client.streams.ReadResp.Checkpoint'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.streams.ReadResp.Checkpoint'{commit_position =
                                                          if NFcommit_position =:= undefined -> PFcommit_position;
                                                             true -> NFcommit_position
                                                          end,
                                                      prepare_position =
                                                          if NFprepare_position =:= undefined -> PFprepare_position;
                                                             true -> NFprepare_position
                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp.StreamNotFound'/3}).
'merge_msg_event_store.client.streams.ReadResp.StreamNotFound'(#'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = PFstream_identifier},
                                                               #'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = NFstream_identifier}, TrUserData) ->
    #'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier =
                                                              if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                 PFstream_identifier == undefined -> NFstream_identifier;
                                                                 NFstream_identifier == undefined -> PFstream_identifier
                                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.ReadResp'/3}).
'merge_msg_event_store.client.streams.ReadResp'(#'event_store.client.streams.ReadResp'{content = PFcontent}, #'event_store.client.streams.ReadResp'{content = NFcontent}, TrUserData) ->
    #'event_store.client.streams.ReadResp'{content =
                                               case {PFcontent, NFcontent} of
                                                   {{event, OPFcontent}, {event, ONFcontent}} -> {event, 'merge_msg_event_store.client.streams.ReadResp.ReadEvent'(OPFcontent, ONFcontent, TrUserData)};
                                                   {{confirmation, OPFcontent}, {confirmation, ONFcontent}} -> {confirmation, 'merge_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(OPFcontent, ONFcontent, TrUserData)};
                                                   {{checkpoint, OPFcontent}, {checkpoint, ONFcontent}} -> {checkpoint, 'merge_msg_event_store.client.streams.ReadResp.Checkpoint'(OPFcontent, ONFcontent, TrUserData)};
                                                   {{stream_not_found, OPFcontent}, {stream_not_found, ONFcontent}} -> {stream_not_found, 'merge_msg_event_store.client.streams.ReadResp.StreamNotFound'(OPFcontent, ONFcontent, TrUserData)};
                                                   {_, undefined} -> PFcontent;
                                                   _ -> NFcontent
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendReq.Options'/3}).
'merge_msg_event_store.client.streams.AppendReq.Options'(#'event_store.client.streams.AppendReq.Options'{stream_identifier = PFstream_identifier, expected_stream_revision = PFexpected_stream_revision},
                                                         #'event_store.client.streams.AppendReq.Options'{stream_identifier = NFstream_identifier, expected_stream_revision = NFexpected_stream_revision}, TrUserData) ->
    #'event_store.client.streams.AppendReq.Options'{stream_identifier =
                                                        if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                           PFstream_identifier == undefined -> NFstream_identifier;
                                                           NFstream_identifier == undefined -> PFstream_identifier
                                                        end,
                                                    expected_stream_revision =
                                                        case {PFexpected_stream_revision, NFexpected_stream_revision} of
                                                            {{no_stream, OPFexpected_stream_revision}, {no_stream, ONFexpected_stream_revision}} -> {no_stream, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {{any, OPFexpected_stream_revision}, {any, ONFexpected_stream_revision}} -> {any, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {{stream_exists, OPFexpected_stream_revision}, {stream_exists, ONFexpected_stream_revision}} -> {stream_exists, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {_, undefined} -> PFexpected_stream_revision;
                                                            _ -> NFexpected_stream_revision
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendReq.ProposedMessage'/3}).
'merge_msg_event_store.client.streams.AppendReq.ProposedMessage'(#'event_store.client.streams.AppendReq.ProposedMessage'{id = PFid, metadata = PFmetadata, custom_metadata = PFcustom_metadata, data = PFdata},
                                                                 #'event_store.client.streams.AppendReq.ProposedMessage'{id = NFid, metadata = NFmetadata, custom_metadata = NFcustom_metadata, data = NFdata}, TrUserData) ->
    #'event_store.client.streams.AppendReq.ProposedMessage'{id =
                                                                if PFid /= undefined, NFid /= undefined -> 'merge_msg_event_store.client.UUID'(PFid, NFid, TrUserData);
                                                                   PFid == undefined -> NFid;
                                                                   NFid == undefined -> PFid
                                                                end,
                                                            metadata =
                                                                if PFmetadata /= undefined, NFmetadata /= undefined -> 'tr_merge_event_store.client.streams.AppendReq.ProposedMessage.metadata'(PFmetadata, NFmetadata, TrUserData);
                                                                   PFmetadata == undefined -> NFmetadata;
                                                                   NFmetadata == undefined -> PFmetadata
                                                                end,
                                                            custom_metadata =
                                                                if NFcustom_metadata =:= undefined -> PFcustom_metadata;
                                                                   true -> NFcustom_metadata
                                                                end,
                                                            data =
                                                                if NFdata =:= undefined -> PFdata;
                                                                   true -> NFdata
                                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendReq'/3}).
'merge_msg_event_store.client.streams.AppendReq'(#'event_store.client.streams.AppendReq'{content = PFcontent}, #'event_store.client.streams.AppendReq'{content = NFcontent}, TrUserData) ->
    #'event_store.client.streams.AppendReq'{content =
                                                case {PFcontent, NFcontent} of
                                                    {{options, OPFcontent}, {options, ONFcontent}} -> {options, 'merge_msg_event_store.client.streams.AppendReq.Options'(OPFcontent, ONFcontent, TrUserData)};
                                                    {{proposed_message, OPFcontent}, {proposed_message, ONFcontent}} -> {proposed_message, 'merge_msg_event_store.client.streams.AppendReq.ProposedMessage'(OPFcontent, ONFcontent, TrUserData)};
                                                    {_, undefined} -> PFcontent;
                                                    _ -> NFcontent
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendResp.Position'/3}).
'merge_msg_event_store.client.streams.AppendResp.Position'(#'event_store.client.streams.AppendResp.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                           #'event_store.client.streams.AppendResp.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.streams.AppendResp.Position'{commit_position =
                                                          if NFcommit_position =:= undefined -> PFcommit_position;
                                                             true -> NFcommit_position
                                                          end,
                                                      prepare_position =
                                                          if NFprepare_position =:= undefined -> PFprepare_position;
                                                             true -> NFprepare_position
                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendResp.Success'/3}).
'merge_msg_event_store.client.streams.AppendResp.Success'(#'event_store.client.streams.AppendResp.Success'{current_revision_option = PFcurrent_revision_option, position_option = PFposition_option},
                                                          #'event_store.client.streams.AppendResp.Success'{current_revision_option = NFcurrent_revision_option, position_option = NFposition_option}, TrUserData) ->
    #'event_store.client.streams.AppendResp.Success'{current_revision_option =
                                                         case {PFcurrent_revision_option, NFcurrent_revision_option} of
                                                             {{no_stream, OPFcurrent_revision_option}, {no_stream, ONFcurrent_revision_option}} -> {no_stream, 'merge_msg_event_store.client.Empty'(OPFcurrent_revision_option, ONFcurrent_revision_option, TrUserData)};
                                                             {_, undefined} -> PFcurrent_revision_option;
                                                             _ -> NFcurrent_revision_option
                                                         end,
                                                     position_option =
                                                         case {PFposition_option, NFposition_option} of
                                                             {{position, OPFposition_option}, {position, ONFposition_option}} -> {position, 'merge_msg_event_store.client.streams.AppendResp.Position'(OPFposition_option, ONFposition_option, TrUserData)};
                                                             {{no_position, OPFposition_option}, {no_position, ONFposition_option}} -> {no_position, 'merge_msg_event_store.client.Empty'(OPFposition_option, ONFposition_option, TrUserData)};
                                                             {_, undefined} -> PFposition_option;
                                                             _ -> NFposition_option
                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'/3}).
'merge_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(#'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = PFcurrent_revision_option_20_6_0,
                                                                                                                                     expected_revision_option_20_6_0 = PFexpected_revision_option_20_6_0, current_revision_option = PFcurrent_revision_option,
                                                                                                                                     expected_revision_option = PFexpected_revision_option},
                                                                       #'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = NFcurrent_revision_option_20_6_0, expected_revision_option_20_6_0 = NFexpected_revision_option_20_6_0,
                                                                                                                                     current_revision_option = NFcurrent_revision_option, expected_revision_option = NFexpected_revision_option},
                                                                       TrUserData) ->
    #'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 =
                                                                      case {PFcurrent_revision_option_20_6_0, NFcurrent_revision_option_20_6_0} of
                                                                          {{no_stream_20_6_0, OPFcurrent_revision_option_20_6_0}, {no_stream_20_6_0, ONFcurrent_revision_option_20_6_0}} ->
                                                                              {no_stream_20_6_0, 'merge_msg_event_store.client.Empty'(OPFcurrent_revision_option_20_6_0, ONFcurrent_revision_option_20_6_0, TrUserData)};
                                                                          {_, undefined} -> PFcurrent_revision_option_20_6_0;
                                                                          _ -> NFcurrent_revision_option_20_6_0
                                                                      end,
                                                                  expected_revision_option_20_6_0 =
                                                                      case {PFexpected_revision_option_20_6_0, NFexpected_revision_option_20_6_0} of
                                                                          {{any_20_6_0, OPFexpected_revision_option_20_6_0}, {any_20_6_0, ONFexpected_revision_option_20_6_0}} ->
                                                                              {any_20_6_0, 'merge_msg_event_store.client.Empty'(OPFexpected_revision_option_20_6_0, ONFexpected_revision_option_20_6_0, TrUserData)};
                                                                          {{stream_exists_20_6_0, OPFexpected_revision_option_20_6_0}, {stream_exists_20_6_0, ONFexpected_revision_option_20_6_0}} ->
                                                                              {stream_exists_20_6_0, 'merge_msg_event_store.client.Empty'(OPFexpected_revision_option_20_6_0, ONFexpected_revision_option_20_6_0, TrUserData)};
                                                                          {_, undefined} -> PFexpected_revision_option_20_6_0;
                                                                          _ -> NFexpected_revision_option_20_6_0
                                                                      end,
                                                                  current_revision_option =
                                                                      case {PFcurrent_revision_option, NFcurrent_revision_option} of
                                                                          {{current_no_stream, OPFcurrent_revision_option}, {current_no_stream, ONFcurrent_revision_option}} ->
                                                                              {current_no_stream, 'merge_msg_event_store.client.Empty'(OPFcurrent_revision_option, ONFcurrent_revision_option, TrUserData)};
                                                                          {_, undefined} -> PFcurrent_revision_option;
                                                                          _ -> NFcurrent_revision_option
                                                                      end,
                                                                  expected_revision_option =
                                                                      case {PFexpected_revision_option, NFexpected_revision_option} of
                                                                          {{expected_any, OPFexpected_revision_option}, {expected_any, ONFexpected_revision_option}} -> {expected_any, 'merge_msg_event_store.client.Empty'(OPFexpected_revision_option, ONFexpected_revision_option, TrUserData)};
                                                                          {{expected_stream_exists, OPFexpected_revision_option}, {expected_stream_exists, ONFexpected_revision_option}} ->
                                                                              {expected_stream_exists, 'merge_msg_event_store.client.Empty'(OPFexpected_revision_option, ONFexpected_revision_option, TrUserData)};
                                                                          {{expected_no_stream, OPFexpected_revision_option}, {expected_no_stream, ONFexpected_revision_option}} ->
                                                                              {expected_no_stream, 'merge_msg_event_store.client.Empty'(OPFexpected_revision_option, ONFexpected_revision_option, TrUserData)};
                                                                          {_, undefined} -> PFexpected_revision_option;
                                                                          _ -> NFexpected_revision_option
                                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.AppendResp'/3}).
'merge_msg_event_store.client.streams.AppendResp'(#'event_store.client.streams.AppendResp'{result = PFresult}, #'event_store.client.streams.AppendResp'{result = NFresult}, TrUserData) ->
    #'event_store.client.streams.AppendResp'{result =
                                                 case {PFresult, NFresult} of
                                                     {{success, OPFresult}, {success, ONFresult}} -> {success, 'merge_msg_event_store.client.streams.AppendResp.Success'(OPFresult, ONFresult, TrUserData)};
                                                     {{wrong_expected_version, OPFresult}, {wrong_expected_version, ONFresult}} -> {wrong_expected_version, 'merge_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(OPFresult, ONFresult, TrUserData)};
                                                     {_, undefined} -> PFresult;
                                                     _ -> NFresult
                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.BatchAppendReq.Options'/3}).
'merge_msg_event_store.client.streams.BatchAppendReq.Options'(#'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = PFstream_identifier, expected_stream_position = PFexpected_stream_position, deadline = PFdeadline},
                                                              #'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = NFstream_identifier, expected_stream_position = NFexpected_stream_position, deadline = NFdeadline}, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq.Options'{stream_identifier =
                                                             if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                PFstream_identifier == undefined -> NFstream_identifier;
                                                                NFstream_identifier == undefined -> PFstream_identifier
                                                             end,
                                                         expected_stream_position =
                                                             case {PFexpected_stream_position, NFexpected_stream_position} of
                                                                 {{no_stream, OPFexpected_stream_position}, {no_stream, ONFexpected_stream_position}} -> {no_stream, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                                 {{any, OPFexpected_stream_position}, {any, ONFexpected_stream_position}} -> {any, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                                 {{stream_exists, OPFexpected_stream_position}, {stream_exists, ONFexpected_stream_position}} -> {stream_exists, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                                 {_, undefined} -> PFexpected_stream_position;
                                                                 _ -> NFexpected_stream_position
                                                             end,
                                                         deadline =
                                                             if PFdeadline /= undefined, NFdeadline /= undefined -> 'merge_msg_google.protobuf.Timestamp'(PFdeadline, NFdeadline, TrUserData);
                                                                PFdeadline == undefined -> NFdeadline;
                                                                NFdeadline == undefined -> PFdeadline
                                                             end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'/3}).
'merge_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(#'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = PFid, metadata = PFmetadata, custom_metadata = PFcustom_metadata, data = PFdata},
                                                                      #'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = NFid, metadata = NFmetadata, custom_metadata = NFcustom_metadata, data = NFdata}, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq.ProposedMessage'{id =
                                                                     if PFid /= undefined, NFid /= undefined -> 'merge_msg_event_store.client.UUID'(PFid, NFid, TrUserData);
                                                                        PFid == undefined -> NFid;
                                                                        NFid == undefined -> PFid
                                                                     end,
                                                                 metadata =
                                                                     if PFmetadata /= undefined, NFmetadata /= undefined -> 'tr_merge_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(PFmetadata, NFmetadata, TrUserData);
                                                                        PFmetadata == undefined -> NFmetadata;
                                                                        NFmetadata == undefined -> PFmetadata
                                                                     end,
                                                                 custom_metadata =
                                                                     if NFcustom_metadata =:= undefined -> PFcustom_metadata;
                                                                        true -> NFcustom_metadata
                                                                     end,
                                                                 data =
                                                                     if NFdata =:= undefined -> PFdata;
                                                                        true -> NFdata
                                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.BatchAppendReq'/3}).
'merge_msg_event_store.client.streams.BatchAppendReq'(#'event_store.client.streams.BatchAppendReq'{correlation_id = PFcorrelation_id, options = PFoptions, proposed_messages = PFproposed_messages, is_final = PFis_final},
                                                      #'event_store.client.streams.BatchAppendReq'{correlation_id = NFcorrelation_id, options = NFoptions, proposed_messages = NFproposed_messages, is_final = NFis_final}, TrUserData) ->
    #'event_store.client.streams.BatchAppendReq'{correlation_id =
                                                     if PFcorrelation_id /= undefined, NFcorrelation_id /= undefined -> 'merge_msg_event_store.client.UUID'(PFcorrelation_id, NFcorrelation_id, TrUserData);
                                                        PFcorrelation_id == undefined -> NFcorrelation_id;
                                                        NFcorrelation_id == undefined -> PFcorrelation_id
                                                     end,
                                                 options =
                                                     if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.streams.BatchAppendReq.Options'(PFoptions, NFoptions, TrUserData);
                                                        PFoptions == undefined -> NFoptions;
                                                        NFoptions == undefined -> PFoptions
                                                     end,
                                                 proposed_messages =
                                                     if PFproposed_messages /= undefined, NFproposed_messages /= undefined -> 'erlang_++'(PFproposed_messages, NFproposed_messages, TrUserData);
                                                        PFproposed_messages == undefined -> NFproposed_messages;
                                                        NFproposed_messages == undefined -> PFproposed_messages
                                                     end,
                                                 is_final =
                                                     if NFis_final =:= undefined -> PFis_final;
                                                        true -> NFis_final
                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.BatchAppendResp.Success'/3}).
'merge_msg_event_store.client.streams.BatchAppendResp.Success'(#'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = PFcurrent_revision_option, position_option = PFposition_option},
                                                               #'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = NFcurrent_revision_option, position_option = NFposition_option}, TrUserData) ->
    #'event_store.client.streams.BatchAppendResp.Success'{current_revision_option =
                                                              case {PFcurrent_revision_option, NFcurrent_revision_option} of
                                                                  {{no_stream, OPFcurrent_revision_option}, {no_stream, ONFcurrent_revision_option}} -> {no_stream, 'merge_msg_google.protobuf.Empty'(OPFcurrent_revision_option, ONFcurrent_revision_option, TrUserData)};
                                                                  {_, undefined} -> PFcurrent_revision_option;
                                                                  _ -> NFcurrent_revision_option
                                                              end,
                                                          position_option =
                                                              case {PFposition_option, NFposition_option} of
                                                                  {{position, OPFposition_option}, {position, ONFposition_option}} -> {position, 'merge_msg_event_store.client.AllStreamPosition'(OPFposition_option, ONFposition_option, TrUserData)};
                                                                  {{no_position, OPFposition_option}, {no_position, ONFposition_option}} -> {no_position, 'merge_msg_google.protobuf.Empty'(OPFposition_option, ONFposition_option, TrUserData)};
                                                                  {_, undefined} -> PFposition_option;
                                                                  _ -> NFposition_option
                                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.BatchAppendResp'/3}).
'merge_msg_event_store.client.streams.BatchAppendResp'(#'event_store.client.streams.BatchAppendResp'{correlation_id = PFcorrelation_id, result = PFresult, stream_identifier = PFstream_identifier,
                                                                                                     expected_stream_position = PFexpected_stream_position},
                                                       #'event_store.client.streams.BatchAppendResp'{correlation_id = NFcorrelation_id, result = NFresult, stream_identifier = NFstream_identifier, expected_stream_position = NFexpected_stream_position}, TrUserData) ->
    #'event_store.client.streams.BatchAppendResp'{correlation_id =
                                                      if PFcorrelation_id /= undefined, NFcorrelation_id /= undefined -> 'merge_msg_event_store.client.UUID'(PFcorrelation_id, NFcorrelation_id, TrUserData);
                                                         PFcorrelation_id == undefined -> NFcorrelation_id;
                                                         NFcorrelation_id == undefined -> PFcorrelation_id
                                                      end,
                                                  result =
                                                      case {PFresult, NFresult} of
                                                          {{error, OPFresult}, {error, ONFresult}} -> {error, 'merge_msg_google.rpc.Status'(OPFresult, ONFresult, TrUserData)};
                                                          {{success, OPFresult}, {success, ONFresult}} -> {success, 'merge_msg_event_store.client.streams.BatchAppendResp.Success'(OPFresult, ONFresult, TrUserData)};
                                                          {_, undefined} -> PFresult;
                                                          _ -> NFresult
                                                      end,
                                                  stream_identifier =
                                                      if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                         PFstream_identifier == undefined -> NFstream_identifier;
                                                         NFstream_identifier == undefined -> PFstream_identifier
                                                      end,
                                                  expected_stream_position =
                                                      case {PFexpected_stream_position, NFexpected_stream_position} of
                                                          {{no_stream, OPFexpected_stream_position}, {no_stream, ONFexpected_stream_position}} -> {no_stream, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                          {{any, OPFexpected_stream_position}, {any, ONFexpected_stream_position}} -> {any, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                          {{stream_exists, OPFexpected_stream_position}, {stream_exists, ONFexpected_stream_position}} -> {stream_exists, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position, ONFexpected_stream_position, TrUserData)};
                                                          {_, undefined} -> PFexpected_stream_position;
                                                          _ -> NFexpected_stream_position
                                                      end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.DeleteReq.Options'/3}).
'merge_msg_event_store.client.streams.DeleteReq.Options'(#'event_store.client.streams.DeleteReq.Options'{stream_identifier = PFstream_identifier, expected_stream_revision = PFexpected_stream_revision},
                                                         #'event_store.client.streams.DeleteReq.Options'{stream_identifier = NFstream_identifier, expected_stream_revision = NFexpected_stream_revision}, TrUserData) ->
    #'event_store.client.streams.DeleteReq.Options'{stream_identifier =
                                                        if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                           PFstream_identifier == undefined -> NFstream_identifier;
                                                           NFstream_identifier == undefined -> PFstream_identifier
                                                        end,
                                                    expected_stream_revision =
                                                        case {PFexpected_stream_revision, NFexpected_stream_revision} of
                                                            {{no_stream, OPFexpected_stream_revision}, {no_stream, ONFexpected_stream_revision}} -> {no_stream, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {{any, OPFexpected_stream_revision}, {any, ONFexpected_stream_revision}} -> {any, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {{stream_exists, OPFexpected_stream_revision}, {stream_exists, ONFexpected_stream_revision}} -> {stream_exists, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                            {_, undefined} -> PFexpected_stream_revision;
                                                            _ -> NFexpected_stream_revision
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.DeleteReq'/3}).
'merge_msg_event_store.client.streams.DeleteReq'(#'event_store.client.streams.DeleteReq'{options = PFoptions}, #'event_store.client.streams.DeleteReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.streams.DeleteReq'{options =
                                                if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.streams.DeleteReq.Options'(PFoptions, NFoptions, TrUserData);
                                                   PFoptions == undefined -> NFoptions;
                                                   NFoptions == undefined -> PFoptions
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.DeleteResp.Position'/3}).
'merge_msg_event_store.client.streams.DeleteResp.Position'(#'event_store.client.streams.DeleteResp.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                           #'event_store.client.streams.DeleteResp.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.streams.DeleteResp.Position'{commit_position =
                                                          if NFcommit_position =:= undefined -> PFcommit_position;
                                                             true -> NFcommit_position
                                                          end,
                                                      prepare_position =
                                                          if NFprepare_position =:= undefined -> PFprepare_position;
                                                             true -> NFprepare_position
                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.DeleteResp'/3}).
'merge_msg_event_store.client.streams.DeleteResp'(#'event_store.client.streams.DeleteResp'{position_option = PFposition_option}, #'event_store.client.streams.DeleteResp'{position_option = NFposition_option}, TrUserData) ->
    #'event_store.client.streams.DeleteResp'{position_option =
                                                 case {PFposition_option, NFposition_option} of
                                                     {{position, OPFposition_option}, {position, ONFposition_option}} -> {position, 'merge_msg_event_store.client.streams.DeleteResp.Position'(OPFposition_option, ONFposition_option, TrUserData)};
                                                     {{no_position, OPFposition_option}, {no_position, ONFposition_option}} -> {no_position, 'merge_msg_event_store.client.Empty'(OPFposition_option, ONFposition_option, TrUserData)};
                                                     {_, undefined} -> PFposition_option;
                                                     _ -> NFposition_option
                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.TombstoneReq.Options'/3}).
'merge_msg_event_store.client.streams.TombstoneReq.Options'(#'event_store.client.streams.TombstoneReq.Options'{stream_identifier = PFstream_identifier, expected_stream_revision = PFexpected_stream_revision},
                                                            #'event_store.client.streams.TombstoneReq.Options'{stream_identifier = NFstream_identifier, expected_stream_revision = NFexpected_stream_revision}, TrUserData) ->
    #'event_store.client.streams.TombstoneReq.Options'{stream_identifier =
                                                           if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                              PFstream_identifier == undefined -> NFstream_identifier;
                                                              NFstream_identifier == undefined -> PFstream_identifier
                                                           end,
                                                       expected_stream_revision =
                                                           case {PFexpected_stream_revision, NFexpected_stream_revision} of
                                                               {{no_stream, OPFexpected_stream_revision}, {no_stream, ONFexpected_stream_revision}} -> {no_stream, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                               {{any, OPFexpected_stream_revision}, {any, ONFexpected_stream_revision}} -> {any, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                               {{stream_exists, OPFexpected_stream_revision}, {stream_exists, ONFexpected_stream_revision}} -> {stream_exists, 'merge_msg_event_store.client.Empty'(OPFexpected_stream_revision, ONFexpected_stream_revision, TrUserData)};
                                                               {_, undefined} -> PFexpected_stream_revision;
                                                               _ -> NFexpected_stream_revision
                                                           end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.TombstoneReq'/3}).
'merge_msg_event_store.client.streams.TombstoneReq'(#'event_store.client.streams.TombstoneReq'{options = PFoptions}, #'event_store.client.streams.TombstoneReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.streams.TombstoneReq'{options =
                                                   if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.streams.TombstoneReq.Options'(PFoptions, NFoptions, TrUserData);
                                                      PFoptions == undefined -> NFoptions;
                                                      NFoptions == undefined -> PFoptions
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.TombstoneResp.Position'/3}).
'merge_msg_event_store.client.streams.TombstoneResp.Position'(#'event_store.client.streams.TombstoneResp.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                              #'event_store.client.streams.TombstoneResp.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.streams.TombstoneResp.Position'{commit_position =
                                                             if NFcommit_position =:= undefined -> PFcommit_position;
                                                                true -> NFcommit_position
                                                             end,
                                                         prepare_position =
                                                             if NFprepare_position =:= undefined -> PFprepare_position;
                                                                true -> NFprepare_position
                                                             end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.streams.TombstoneResp'/3}).
'merge_msg_event_store.client.streams.TombstoneResp'(#'event_store.client.streams.TombstoneResp'{position_option = PFposition_option}, #'event_store.client.streams.TombstoneResp'{position_option = NFposition_option}, TrUserData) ->
    #'event_store.client.streams.TombstoneResp'{position_option =
                                                    case {PFposition_option, NFposition_option} of
                                                        {{position, OPFposition_option}, {position, ONFposition_option}} -> {position, 'merge_msg_event_store.client.streams.TombstoneResp.Position'(OPFposition_option, ONFposition_option, TrUserData)};
                                                        {{no_position, OPFposition_option}, {no_position, ONFposition_option}} -> {no_position, 'merge_msg_event_store.client.Empty'(OPFposition_option, ONFposition_option, TrUserData)};
                                                        {_, undefined} -> PFposition_option;
                                                        _ -> NFposition_option
                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID.Structured'/3}).
'merge_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = PFmost_significant_bits, least_significant_bits = PFleast_significant_bits},
                                               #'event_store.client.UUID.Structured'{most_significant_bits = NFmost_significant_bits, least_significant_bits = NFleast_significant_bits}, _) ->
    #'event_store.client.UUID.Structured'{most_significant_bits =
                                              if NFmost_significant_bits =:= undefined -> PFmost_significant_bits;
                                                 true -> NFmost_significant_bits
                                              end,
                                          least_significant_bits =
                                              if NFleast_significant_bits =:= undefined -> PFleast_significant_bits;
                                                 true -> NFleast_significant_bits
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID'/3}).
'merge_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = PFvalue}, #'event_store.client.UUID'{value = NFvalue}, TrUserData) ->
    #'event_store.client.UUID'{value =
                                   case {PFvalue, NFvalue} of
                                       {{structured, OPFvalue}, {structured, ONFvalue}} -> {structured, 'merge_msg_event_store.client.UUID.Structured'(OPFvalue, ONFvalue, TrUserData)};
                                       {_, undefined} -> PFvalue;
                                       _ -> NFvalue
                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Empty'/3}).
'merge_msg_event_store.client.Empty'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamIdentifier'/3}).
'merge_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = PFstream_name}, #'event_store.client.StreamIdentifier'{stream_name = NFstream_name}, _) ->
    #'event_store.client.StreamIdentifier'{stream_name =
                                               if NFstream_name =:= undefined -> PFstream_name;
                                                  true -> NFstream_name
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AllStreamPosition'/3}).
'merge_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                 #'event_store.client.AllStreamPosition'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.AllStreamPosition'{commit_position =
                                                if NFcommit_position =:= undefined -> PFcommit_position;
                                                   true -> NFcommit_position
                                                end,
                                            prepare_position =
                                                if NFprepare_position =:= undefined -> PFprepare_position;
                                                   true -> NFprepare_position
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.WrongExpectedVersion'/3}).
'merge_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = PFcurrent_stream_revision_option, expected_stream_position_option = PFexpected_stream_position_option},
                                                    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = NFcurrent_stream_revision_option, expected_stream_position_option = NFexpected_stream_position_option}, TrUserData) ->
    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option =
                                                   case {PFcurrent_stream_revision_option, NFcurrent_stream_revision_option} of
                                                       {{current_no_stream, OPFcurrent_stream_revision_option}, {current_no_stream, ONFcurrent_stream_revision_option}} ->
                                                           {current_no_stream, 'merge_msg_google.protobuf.Empty'(OPFcurrent_stream_revision_option, ONFcurrent_stream_revision_option, TrUserData)};
                                                       {_, undefined} -> PFcurrent_stream_revision_option;
                                                       _ -> NFcurrent_stream_revision_option
                                                   end,
                                               expected_stream_position_option =
                                                   case {PFexpected_stream_position_option, NFexpected_stream_position_option} of
                                                       {{expected_any, OPFexpected_stream_position_option}, {expected_any, ONFexpected_stream_position_option}} -> {expected_any, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_stream_exists, OPFexpected_stream_position_option}, {expected_stream_exists, ONFexpected_stream_position_option}} ->
                                                           {expected_stream_exists, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_no_stream, OPFexpected_stream_position_option}, {expected_no_stream, ONFexpected_stream_position_option}} ->
                                                           {expected_no_stream, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {_, undefined} -> PFexpected_stream_position_option;
                                                       _ -> NFexpected_stream_position_option
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AccessDenied'/3}).
'merge_msg_event_store.client.AccessDenied'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamDeleted'/3}).
'merge_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = PFstream_identifier}, #'event_store.client.StreamDeleted'{stream_identifier = NFstream_identifier}, TrUserData) ->
    #'event_store.client.StreamDeleted'{stream_identifier =
                                            if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                               PFstream_identifier == undefined -> NFstream_identifier;
                                               NFstream_identifier == undefined -> PFstream_identifier
                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Timeout'/3}).
'merge_msg_event_store.client.Timeout'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Unknown'/3}).
'merge_msg_event_store.client.Unknown'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.InvalidTransaction'/3}).
'merge_msg_event_store.client.InvalidTransaction'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'merge_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = PFmaxAppendSize}, #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = NFmaxAppendSize}, _) ->
    #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize =
                                                        if NFmaxAppendSize =:= undefined -> PFmaxAppendSize;
                                                           true -> NFmaxAppendSize
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.BadRequest'/3}).
'merge_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = PFmessage}, #'event_store.client.BadRequest'{message = NFmessage}, _) ->
    #'event_store.client.BadRequest'{message =
                                         if NFmessage =:= undefined -> PFmessage;
                                            true -> NFmessage
                                         end}.

-compile({nowarn_unused_function,'merge_msg_google.rpc.Status'/3}).
'merge_msg_google.rpc.Status'(#'google.rpc.Status'{code = PFcode, message = PFmessage, details = PFdetails}, #'google.rpc.Status'{code = NFcode, message = NFmessage, details = NFdetails}, TrUserData) ->
    #'google.rpc.Status'{code =
                             if NFcode =:= undefined -> PFcode;
                                true -> NFcode
                             end,
                         message =
                             if NFmessage =:= undefined -> PFmessage;
                                true -> NFmessage
                             end,
                         details =
                             if PFdetails /= undefined, NFdetails /= undefined -> 'merge_msg_google.protobuf.Any'(PFdetails, NFdetails, TrUserData);
                                PFdetails == undefined -> NFdetails;
                                NFdetails == undefined -> PFdetails
                             end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Empty'/3}).
'merge_msg_google.protobuf.Empty'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Timestamp'/3}).
'merge_msg_google.protobuf.Timestamp'(#'google.protobuf.Timestamp'{seconds = PFseconds, nanos = PFnanos}, #'google.protobuf.Timestamp'{seconds = NFseconds, nanos = NFnanos}, _) ->
    #'google.protobuf.Timestamp'{seconds =
                                     if NFseconds =:= undefined -> PFseconds;
                                        true -> NFseconds
                                     end,
                                 nanos =
                                     if NFnanos =:= undefined -> PFnanos;
                                        true -> NFnanos
                                     end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Any'/3}).
'merge_msg_google.protobuf.Any'(#'google.protobuf.Any'{type_url = PFtype_url, value = PFvalue}, #'google.protobuf.Any'{type_url = NFtype_url, value = NFvalue}, _) ->
    #'google.protobuf.Any'{type_url =
                               if NFtype_url =:= undefined -> PFtype_url;
                                  true -> NFtype_url
                               end,
                           value =
                               if NFvalue =:= undefined -> PFvalue;
                                  true -> NFvalue
                               end}.


verify_msg(Msg) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), []);
verify_msg(X) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName) when is_atom(MsgName) -> verify_msg(Msg, MsgName, []);
verify_msg(Msg, Opts) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), Opts);
verify_msg(X, _Opts) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.streams.ReadReq.Options' -> 'v_msg_event_store.client.streams.ReadReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.UUIDOption' -> 'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions.Expression' -> 'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.FilterOptions' -> 'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.Position' -> 'v_msg_event_store.client.streams.ReadReq.Options.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.SubscriptionOptions' -> 'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.AllOptions' -> 'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq.Options.StreamOptions' -> 'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadReq' -> 'v_msg_event_store.client.streams.ReadReq'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent' -> 'v_msg_event_store.client.streams.ReadResp.ReadEvent'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent' -> 'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp.SubscriptionConfirmation' -> 'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp.Checkpoint' -> 'v_msg_event_store.client.streams.ReadResp.Checkpoint'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp.StreamNotFound' -> 'v_msg_event_store.client.streams.ReadResp.StreamNotFound'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.ReadResp' -> 'v_msg_event_store.client.streams.ReadResp'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendReq.Options' -> 'v_msg_event_store.client.streams.AppendReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendReq.ProposedMessage' -> 'v_msg_event_store.client.streams.AppendReq.ProposedMessage'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendReq' -> 'v_msg_event_store.client.streams.AppendReq'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendResp.Position' -> 'v_msg_event_store.client.streams.AppendResp.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendResp.Success' -> 'v_msg_event_store.client.streams.AppendResp.Success'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendResp.WrongExpectedVersion' -> 'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.AppendResp' -> 'v_msg_event_store.client.streams.AppendResp'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.BatchAppendReq.Options' -> 'v_msg_event_store.client.streams.BatchAppendReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.BatchAppendReq.ProposedMessage' -> 'v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.BatchAppendReq' -> 'v_msg_event_store.client.streams.BatchAppendReq'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.BatchAppendResp.Success' -> 'v_msg_event_store.client.streams.BatchAppendResp.Success'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.BatchAppendResp' -> 'v_msg_event_store.client.streams.BatchAppendResp'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.DeleteReq.Options' -> 'v_msg_event_store.client.streams.DeleteReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.DeleteReq' -> 'v_msg_event_store.client.streams.DeleteReq'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.DeleteResp.Position' -> 'v_msg_event_store.client.streams.DeleteResp.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.DeleteResp' -> 'v_msg_event_store.client.streams.DeleteResp'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.TombstoneReq.Options' -> 'v_msg_event_store.client.streams.TombstoneReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.TombstoneReq' -> 'v_msg_event_store.client.streams.TombstoneReq'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.TombstoneResp.Position' -> 'v_msg_event_store.client.streams.TombstoneResp.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.streams.TombstoneResp' -> 'v_msg_event_store.client.streams.TombstoneResp'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID.Structured' -> 'v_msg_event_store.client.UUID.Structured'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID' -> 'v_msg_event_store.client.UUID'(Msg, [MsgName], TrUserData);
        'event_store.client.Empty' -> 'v_msg_event_store.client.Empty'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamIdentifier' -> 'v_msg_event_store.client.StreamIdentifier'(Msg, [MsgName], TrUserData);
        'event_store.client.AllStreamPosition' -> 'v_msg_event_store.client.AllStreamPosition'(Msg, [MsgName], TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'v_msg_event_store.client.WrongExpectedVersion'(Msg, [MsgName], TrUserData);
        'event_store.client.AccessDenied' -> 'v_msg_event_store.client.AccessDenied'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamDeleted' -> 'v_msg_event_store.client.StreamDeleted'(Msg, [MsgName], TrUserData);
        'event_store.client.Timeout' -> 'v_msg_event_store.client.Timeout'(Msg, [MsgName], TrUserData);
        'event_store.client.Unknown' -> 'v_msg_event_store.client.Unknown'(Msg, [MsgName], TrUserData);
        'event_store.client.InvalidTransaction' -> 'v_msg_event_store.client.InvalidTransaction'(Msg, [MsgName], TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'v_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, [MsgName], TrUserData);
        'event_store.client.BadRequest' -> 'v_msg_event_store.client.BadRequest'(Msg, [MsgName], TrUserData);
        'google.rpc.Status' -> 'v_msg_google.rpc.Status'(Msg, [MsgName], TrUserData);
        'google.protobuf.Empty' -> 'v_msg_google.protobuf.Empty'(Msg, [MsgName], TrUserData);
        'google.protobuf.Timestamp' -> 'v_msg_google.protobuf.Timestamp'(Msg, [MsgName], TrUserData);
        'google.protobuf.Any' -> 'v_msg_google.protobuf.Any'(Msg, [MsgName], TrUserData);
        _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options'/3}).
'v_msg_event_store.client.streams.ReadReq.Options'(#'event_store.client.streams.ReadReq.Options'{stream_option = F1, read_direction = F2, resolve_links = F3, count_option = F4, filter_option = F5, uuid_option = F6}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream, OF1} -> 'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(OF1, [stream, stream_option | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'(OF1, [all, stream_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [stream_option | Path])
    end,
    if F2 == undefined -> ok;
       true -> 'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(F2, [read_direction | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_bool(F3, [resolve_links | Path], TrUserData)
    end,
    case F4 of
        undefined -> ok;
        {count, OF4} -> v_type_uint64(OF4, [count, count_option | Path], TrUserData);
        {subscription, OF4} -> 'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(OF4, [subscription, count_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F4, [count_option | Path])
    end,
    case F5 of
        undefined -> ok;
        {filter, OF5} -> 'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(OF5, [filter, filter_option | Path], TrUserData);
        {no_filter, OF5} -> 'v_msg_event_store.client.Empty'(OF5, [no_filter, filter_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F5, [filter_option | Path])
    end,
    if F6 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(F6, [uuid_option | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(#'event_store.client.streams.ReadReq.Options.UUIDOption'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {structured, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [structured, content | Path], TrUserData);
        {string, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [string, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.UUIDOption'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.UUIDOption'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(#'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'{regex = F1, prefix = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [regex | Path], TrUserData)
    end,
    if is_list(F2) ->
           _ = [v_type_string(Elem, [prefix | Path], TrUserData) || Elem <- F2],
           ok;
       true -> mk_type_error({invalid_list_of, string}, F2, [prefix | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(#'event_store.client.streams.ReadReq.Options.FilterOptions'{filter = F1, window = F2, checkpointIntervalMultiplier = F3}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream_identifier, OF1} -> 'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(OF1, [stream_identifier, filter | Path], TrUserData);
        {event_type, OF1} -> 'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions.Expression'(OF1, [event_type, filter | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [filter | Path])
    end,
    case F2 of
        undefined -> ok;
        {max, OF2} -> v_type_uint32(OF2, [max, window | Path], TrUserData);
        {count, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [count, window | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [window | Path])
    end,
    if F3 == undefined -> ok;
       true -> v_type_uint32(F3, [checkpointIntervalMultiplier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.FilterOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.FilterOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.Position'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.Position'(#'event_store.client.streams.ReadReq.Options.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(#'event_store.client.streams.ReadReq.Options.SubscriptionOptions'{}, _Path, _) -> ok;
'v_msg_event_store.client.streams.ReadReq.Options.SubscriptionOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'(#'event_store.client.streams.ReadReq.Options.AllOptions'{all_option = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {position, OF1} -> 'v_msg_event_store.client.streams.ReadReq.Options.Position'(OF1, [position, all_option | Path], TrUserData);
        {start, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [start, all_option | Path], TrUserData);
        {'end', OF1} -> 'v_msg_event_store.client.Empty'(OF1, ['end', all_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [all_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.AllOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.AllOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'/3}).
'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(#'event_store.client.streams.ReadReq.Options.StreamOptions'{stream_identifier = F1, revision_option = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, revision_option | Path], TrUserData);
        {start, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [start, revision_option | Path], TrUserData);
        {'end', OF2} -> 'v_msg_event_store.client.Empty'(OF2, ['end', revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [revision_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq.Options.StreamOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq.Options.StreamOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadReq'/3}).
'v_msg_event_store.client.streams.ReadReq'(#'event_store.client.streams.ReadReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.ReadReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp.ReadEvent'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp.ReadEvent'/3}).
'v_msg_event_store.client.streams.ReadResp.ReadEvent'(#'event_store.client.streams.ReadResp.ReadEvent'{event = F1, link = F2, position = F3}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(F1, [event | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(F2, [link | Path], TrUserData)
    end,
    case F3 of
        undefined -> ok;
        {commit_position, OF3} -> v_type_uint64(OF3, [commit_position, position | Path], TrUserData);
        {no_position, OF3} -> 'v_msg_event_store.client.Empty'(OF3, [no_position, position | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F3, [position | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp.ReadEvent'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp.ReadEvent'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'/3}).
'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'{id = F1, stream_identifier = F2, stream_revision = F3, prepare_position = F4, commit_position = F5, metadata = F6,
                                                                                                                                   custom_metadata = F7, data = F8},
                                                                    Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [id | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F2, [stream_identifier | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_uint64(F3, [stream_revision | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_uint64(F4, [prepare_position | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_uint64(F5, [commit_position | Path], TrUserData)
    end,
    'v_map<string,string>'(F6, [metadata | Path], TrUserData),
    if F7 == undefined -> ok;
       true -> v_type_bytes(F7, [custom_metadata | Path], TrUserData)
    end,
    if F8 == undefined -> ok;
       true -> v_type_bytes(F8, [data | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'/3}).
'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(#'event_store.client.streams.ReadResp.SubscriptionConfirmation'{subscription_id = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [subscription_id | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp.SubscriptionConfirmation'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp.Checkpoint'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp.Checkpoint'/3}).
'v_msg_event_store.client.streams.ReadResp.Checkpoint'(#'event_store.client.streams.ReadResp.Checkpoint'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp.Checkpoint'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp.Checkpoint'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp.StreamNotFound'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp.StreamNotFound'/3}).
'v_msg_event_store.client.streams.ReadResp.StreamNotFound'(#'event_store.client.streams.ReadResp.StreamNotFound'{stream_identifier = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp.StreamNotFound'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp.StreamNotFound'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.ReadResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.ReadResp'/3}).
'v_msg_event_store.client.streams.ReadResp'(#'event_store.client.streams.ReadResp'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {event, OF1} -> 'v_msg_event_store.client.streams.ReadResp.ReadEvent'(OF1, [event, content | Path], TrUserData);
        {confirmation, OF1} -> 'v_msg_event_store.client.streams.ReadResp.SubscriptionConfirmation'(OF1, [confirmation, content | Path], TrUserData);
        {checkpoint, OF1} -> 'v_msg_event_store.client.streams.ReadResp.Checkpoint'(OF1, [checkpoint, content | Path], TrUserData);
        {stream_not_found, OF1} -> 'v_msg_event_store.client.streams.ReadResp.StreamNotFound'(OF1, [stream_not_found, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.streams.ReadResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.ReadResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendReq.Options'/3}).
'v_msg_event_store.client.streams.AppendReq.Options'(#'event_store.client.streams.AppendReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, expected_stream_revision | Path], TrUserData);
        {no_stream, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [no_stream, expected_stream_revision | Path], TrUserData);
        {any, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [any, expected_stream_revision | Path], TrUserData);
        {stream_exists, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [stream_exists, expected_stream_revision | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_revision | Path])
    end,
    ok;
'v_msg_event_store.client.streams.AppendReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendReq.ProposedMessage'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendReq.ProposedMessage'/3}).
'v_msg_event_store.client.streams.AppendReq.ProposedMessage'(#'event_store.client.streams.AppendReq.ProposedMessage'{id = F1, metadata = F2, custom_metadata = F3, data = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [id | Path], TrUserData)
    end,
    'v_map<string,string>'(F2, [metadata | Path], TrUserData),
    if F3 == undefined -> ok;
       true -> v_type_bytes(F3, [custom_metadata | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_bytes(F4, [data | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.AppendReq.ProposedMessage'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendReq.ProposedMessage'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendReq'/3}).
'v_msg_event_store.client.streams.AppendReq'(#'event_store.client.streams.AppendReq'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {options, OF1} -> 'v_msg_event_store.client.streams.AppendReq.Options'(OF1, [options, content | Path], TrUserData);
        {proposed_message, OF1} -> 'v_msg_event_store.client.streams.AppendReq.ProposedMessage'(OF1, [proposed_message, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.streams.AppendReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendResp.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendResp.Position'/3}).
'v_msg_event_store.client.streams.AppendResp.Position'(#'event_store.client.streams.AppendResp.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.AppendResp.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendResp.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendResp.Success'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendResp.Success'/3}).
'v_msg_event_store.client.streams.AppendResp.Success'(#'event_store.client.streams.AppendResp.Success'{current_revision_option = F1, position_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_revision, OF1} -> v_type_uint64(OF1, [current_revision, current_revision_option | Path], TrUserData);
        {no_stream, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [no_stream, current_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_revision_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {position, OF2} -> 'v_msg_event_store.client.streams.AppendResp.Position'(OF2, [position, position_option | Path], TrUserData);
        {no_position, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [no_position, position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [position_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.AppendResp.Success'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendResp.Success'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'/3}).
'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(#'event_store.client.streams.AppendResp.WrongExpectedVersion'{current_revision_option_20_6_0 = F1, expected_revision_option_20_6_0 = F2, current_revision_option = F3,
                                                                                                                                 expected_revision_option = F4},
                                                                   Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_revision_20_6_0, OF1} -> v_type_uint64(OF1, [current_revision_20_6_0, current_revision_option_20_6_0 | Path], TrUserData);
        {no_stream_20_6_0, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [no_stream_20_6_0, current_revision_option_20_6_0 | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_revision_option_20_6_0 | Path])
    end,
    case F2 of
        undefined -> ok;
        {expected_revision_20_6_0, OF2} -> v_type_uint64(OF2, [expected_revision_20_6_0, expected_revision_option_20_6_0 | Path], TrUserData);
        {any_20_6_0, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [any_20_6_0, expected_revision_option_20_6_0 | Path], TrUserData);
        {stream_exists_20_6_0, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [stream_exists_20_6_0, expected_revision_option_20_6_0 | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_revision_option_20_6_0 | Path])
    end,
    case F3 of
        undefined -> ok;
        {current_revision, OF3} -> v_type_uint64(OF3, [current_revision, current_revision_option | Path], TrUserData);
        {current_no_stream, OF3} -> 'v_msg_event_store.client.Empty'(OF3, [current_no_stream, current_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F3, [current_revision_option | Path])
    end,
    case F4 of
        undefined -> ok;
        {expected_revision, OF4} -> v_type_uint64(OF4, [expected_revision, expected_revision_option | Path], TrUserData);
        {expected_any, OF4} -> 'v_msg_event_store.client.Empty'(OF4, [expected_any, expected_revision_option | Path], TrUserData);
        {expected_stream_exists, OF4} -> 'v_msg_event_store.client.Empty'(OF4, [expected_stream_exists, expected_revision_option | Path], TrUserData);
        {expected_no_stream, OF4} -> 'v_msg_event_store.client.Empty'(OF4, [expected_no_stream, expected_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F4, [expected_revision_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendResp.WrongExpectedVersion'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.AppendResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.AppendResp'/3}).
'v_msg_event_store.client.streams.AppendResp'(#'event_store.client.streams.AppendResp'{result = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {success, OF1} -> 'v_msg_event_store.client.streams.AppendResp.Success'(OF1, [success, result | Path], TrUserData);
        {wrong_expected_version, OF1} -> 'v_msg_event_store.client.streams.AppendResp.WrongExpectedVersion'(OF1, [wrong_expected_version, result | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [result | Path])
    end,
    ok;
'v_msg_event_store.client.streams.AppendResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.AppendResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.BatchAppendReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.BatchAppendReq.Options'/3}).
'v_msg_event_store.client.streams.BatchAppendReq.Options'(#'event_store.client.streams.BatchAppendReq.Options'{stream_identifier = F1, expected_stream_position = F2, deadline = F3}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {stream_position, OF2} -> v_type_uint64(OF2, [stream_position, expected_stream_position | Path], TrUserData);
        {no_stream, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [no_stream, expected_stream_position | Path], TrUserData);
        {any, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [any, expected_stream_position | Path], TrUserData);
        {stream_exists, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [stream_exists, expected_stream_position | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_position | Path])
    end,
    if F3 == undefined -> ok;
       true -> 'v_msg_google.protobuf.Timestamp'(F3, [deadline | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.BatchAppendReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.BatchAppendReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'/3}).
'v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(#'event_store.client.streams.BatchAppendReq.ProposedMessage'{id = F1, metadata = F2, custom_metadata = F3, data = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [id | Path], TrUserData)
    end,
    'v_map<string,string>'(F2, [metadata | Path], TrUserData),
    if F3 == undefined -> ok;
       true -> v_type_bytes(F3, [custom_metadata | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_bytes(F4, [data | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.BatchAppendReq.ProposedMessage'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.BatchAppendReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.BatchAppendReq'/3}).
'v_msg_event_store.client.streams.BatchAppendReq'(#'event_store.client.streams.BatchAppendReq'{correlation_id = F1, options = F2, proposed_messages = F3, is_final = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [correlation_id | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.BatchAppendReq.Options'(F2, [options | Path], TrUserData)
    end,
    if is_list(F3) ->
           _ = ['v_msg_event_store.client.streams.BatchAppendReq.ProposedMessage'(Elem, [proposed_messages | Path], TrUserData) || Elem <- F3],
           ok;
       true -> mk_type_error({invalid_list_of, {msg, 'event_store.client.streams.BatchAppendReq.ProposedMessage'}}, F3, [proposed_messages | Path])
    end,
    if F4 == undefined -> ok;
       true -> v_type_bool(F4, [is_final | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.BatchAppendReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.BatchAppendReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.BatchAppendResp.Success'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.BatchAppendResp.Success'/3}).
'v_msg_event_store.client.streams.BatchAppendResp.Success'(#'event_store.client.streams.BatchAppendResp.Success'{current_revision_option = F1, position_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_revision, OF1} -> v_type_uint64(OF1, [current_revision, current_revision_option | Path], TrUserData);
        {no_stream, OF1} -> 'v_msg_google.protobuf.Empty'(OF1, [no_stream, current_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_revision_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {position, OF2} -> 'v_msg_event_store.client.AllStreamPosition'(OF2, [position, position_option | Path], TrUserData);
        {no_position, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [no_position, position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [position_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.BatchAppendResp.Success'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.BatchAppendResp.Success'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.BatchAppendResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.BatchAppendResp'/3}).
'v_msg_event_store.client.streams.BatchAppendResp'(#'event_store.client.streams.BatchAppendResp'{correlation_id = F1, result = F2, stream_identifier = F3, expected_stream_position = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [correlation_id | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {error, OF2} -> 'v_msg_google.rpc.Status'(OF2, [error, result | Path], TrUserData);
        {success, OF2} -> 'v_msg_event_store.client.streams.BatchAppendResp.Success'(OF2, [success, result | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [result | Path])
    end,
    if F3 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F3, [stream_identifier | Path], TrUserData)
    end,
    case F4 of
        undefined -> ok;
        {stream_position, OF4} -> v_type_uint64(OF4, [stream_position, expected_stream_position | Path], TrUserData);
        {no_stream, OF4} -> 'v_msg_google.protobuf.Empty'(OF4, [no_stream, expected_stream_position | Path], TrUserData);
        {any, OF4} -> 'v_msg_google.protobuf.Empty'(OF4, [any, expected_stream_position | Path], TrUserData);
        {stream_exists, OF4} -> 'v_msg_google.protobuf.Empty'(OF4, [stream_exists, expected_stream_position | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F4, [expected_stream_position | Path])
    end,
    ok;
'v_msg_event_store.client.streams.BatchAppendResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.BatchAppendResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.DeleteReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.DeleteReq.Options'/3}).
'v_msg_event_store.client.streams.DeleteReq.Options'(#'event_store.client.streams.DeleteReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, expected_stream_revision | Path], TrUserData);
        {no_stream, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [no_stream, expected_stream_revision | Path], TrUserData);
        {any, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [any, expected_stream_revision | Path], TrUserData);
        {stream_exists, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [stream_exists, expected_stream_revision | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_revision | Path])
    end,
    ok;
'v_msg_event_store.client.streams.DeleteReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.DeleteReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.DeleteReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.DeleteReq'/3}).
'v_msg_event_store.client.streams.DeleteReq'(#'event_store.client.streams.DeleteReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.DeleteReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.DeleteReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.DeleteReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.DeleteResp.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.DeleteResp.Position'/3}).
'v_msg_event_store.client.streams.DeleteResp.Position'(#'event_store.client.streams.DeleteResp.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.DeleteResp.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.DeleteResp.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.DeleteResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.DeleteResp'/3}).
'v_msg_event_store.client.streams.DeleteResp'(#'event_store.client.streams.DeleteResp'{position_option = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {position, OF1} -> 'v_msg_event_store.client.streams.DeleteResp.Position'(OF1, [position, position_option | Path], TrUserData);
        {no_position, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [no_position, position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [position_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.DeleteResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.DeleteResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.TombstoneReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.TombstoneReq.Options'/3}).
'v_msg_event_store.client.streams.TombstoneReq.Options'(#'event_store.client.streams.TombstoneReq.Options'{stream_identifier = F1, expected_stream_revision = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, expected_stream_revision | Path], TrUserData);
        {no_stream, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [no_stream, expected_stream_revision | Path], TrUserData);
        {any, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [any, expected_stream_revision | Path], TrUserData);
        {stream_exists, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [stream_exists, expected_stream_revision | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_revision | Path])
    end,
    ok;
'v_msg_event_store.client.streams.TombstoneReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.TombstoneReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.TombstoneReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.TombstoneReq'/3}).
'v_msg_event_store.client.streams.TombstoneReq'(#'event_store.client.streams.TombstoneReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.streams.TombstoneReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.TombstoneReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.TombstoneReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.TombstoneResp.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.TombstoneResp.Position'/3}).
'v_msg_event_store.client.streams.TombstoneResp.Position'(#'event_store.client.streams.TombstoneResp.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.streams.TombstoneResp.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.TombstoneResp.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.streams.TombstoneResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.streams.TombstoneResp'/3}).
'v_msg_event_store.client.streams.TombstoneResp'(#'event_store.client.streams.TombstoneResp'{position_option = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {position, OF1} -> 'v_msg_event_store.client.streams.TombstoneResp.Position'(OF1, [position, position_option | Path], TrUserData);
        {no_position, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [no_position, position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [position_option | Path])
    end,
    ok;
'v_msg_event_store.client.streams.TombstoneResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.streams.TombstoneResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID.Structured'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID.Structured'/3}).
'v_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [most_significant_bits | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int64(F2, [least_significant_bits | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.UUID.Structured'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID.Structured'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID'/3}).
'v_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {structured, OF1} -> 'v_msg_event_store.client.UUID.Structured'(OF1, [structured, value | Path], TrUserData);
        {string, OF1} -> v_type_string(OF1, [string, value | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [value | Path])
    end,
    ok;
'v_msg_event_store.client.UUID'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Empty'/3}).
'v_msg_event_store.client.Empty'(#'event_store.client.Empty'{}, _Path, _) -> ok;
'v_msg_event_store.client.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamIdentifier'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamIdentifier'/3}).
'v_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bytes(F1, [stream_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamIdentifier'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamIdentifier'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AllStreamPosition'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AllStreamPosition'/3}).
'v_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.AllStreamPosition'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AllStreamPosition'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
'v_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_stream_revision, OF1} -> v_type_uint64(OF1, [current_stream_revision, current_stream_revision_option | Path], TrUserData);
        {current_no_stream, OF1} -> 'v_msg_google.protobuf.Empty'(OF1, [current_no_stream, current_stream_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_stream_revision_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {expected_stream_position, OF2} -> v_type_uint64(OF2, [expected_stream_position, expected_stream_position_option | Path], TrUserData);
        {expected_any, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_any, expected_stream_position_option | Path], TrUserData);
        {expected_stream_exists, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_stream_exists, expected_stream_position_option | Path], TrUserData);
        {expected_no_stream, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_no_stream, expected_stream_position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_position_option | Path])
    end,
    ok;
'v_msg_event_store.client.WrongExpectedVersion'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.WrongExpectedVersion'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AccessDenied'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AccessDenied'/3}).
'v_msg_event_store.client.AccessDenied'(#'event_store.client.AccessDenied'{}, _Path, _) -> ok;
'v_msg_event_store.client.AccessDenied'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AccessDenied'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamDeleted'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamDeleted'/3}).
'v_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamDeleted'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamDeleted'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Timeout'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Timeout'/3}).
'v_msg_event_store.client.Timeout'(#'event_store.client.Timeout'{}, _Path, _) -> ok;
'v_msg_event_store.client.Timeout'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Timeout'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Unknown'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Unknown'/3}).
'v_msg_event_store.client.Unknown'(#'event_store.client.Unknown'{}, _Path, _) -> ok;
'v_msg_event_store.client.Unknown'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Unknown'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.InvalidTransaction'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.InvalidTransaction'/3}).
'v_msg_event_store.client.InvalidTransaction'(#'event_store.client.InvalidTransaction'{}, _Path, _) -> ok;
'v_msg_event_store.client.InvalidTransaction'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.InvalidTransaction'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'v_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint32(F1, [maxAppendSize | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.MaximumAppendSizeExceeded'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.MaximumAppendSizeExceeded'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.BadRequest'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.BadRequest'/3}).
'v_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [message | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.BadRequest'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.BadRequest'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.rpc.Status'/3}).
-dialyzer({nowarn_function,'v_msg_google.rpc.Status'/3}).
'v_msg_google.rpc.Status'(#'google.rpc.Status'{code = F1, message = F2, details = F3}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_enum_google.rpc.Code'(F1, [code | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [message | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> 'v_msg_google.protobuf.Any'(F3, [details | Path], TrUserData)
    end,
    ok;
'v_msg_google.rpc.Status'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.rpc.Status'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Empty'/3}).
'v_msg_google.protobuf.Empty'(#'google.protobuf.Empty'{}, _Path, _) -> ok;
'v_msg_google.protobuf.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Timestamp'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Timestamp'/3}).
'v_msg_google.protobuf.Timestamp'(#'google.protobuf.Timestamp'{seconds = F1, nanos = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [seconds | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int32(F2, [nanos | Path], TrUserData)
    end,
    ok;
'v_msg_google.protobuf.Timestamp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Timestamp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Any'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Any'/3}).
'v_msg_google.protobuf.Any'(#'google.protobuf.Any'{type_url = F1, value = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [type_url | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_bytes(F2, [value | Path], TrUserData)
    end,
    ok;
'v_msg_google.protobuf.Any'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Any'}, X, Path).

-compile({nowarn_unused_function,'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'/3}).
-dialyzer({nowarn_function,'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'/3}).
'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'('Forwards', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'('Backwards', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_event_store.client.streams.ReadReq.Options.ReadDirection'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'event_store.client.streams.ReadReq.Options.ReadDirection'}, X, Path).

-compile({nowarn_unused_function,'v_enum_google.rpc.Code'/3}).
-dialyzer({nowarn_function,'v_enum_google.rpc.Code'/3}).
'v_enum_google.rpc.Code'('OK', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('CANCELLED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('UNKNOWN', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('INVALID_ARGUMENT', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('DEADLINE_EXCEEDED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('NOT_FOUND', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('ALREADY_EXISTS', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('PERMISSION_DENIED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('UNAUTHENTICATED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('RESOURCE_EXHAUSTED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('FAILED_PRECONDITION', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('ABORTED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('OUT_OF_RANGE', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('UNIMPLEMENTED', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('INTERNAL', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('UNAVAILABLE', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'('DATA_LOSS', _Path, _TrUserData) -> ok;
'v_enum_google.rpc.Code'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_google.rpc.Code'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'google.rpc.Code'}, X, Path).

-compile({nowarn_unused_function,v_type_int32/3}).
-dialyzer({nowarn_function,v_type_int32/3}).
v_type_int32(N, _Path, _TrUserData) when -2147483648 =< N, N =< 2147483647 -> ok;
v_type_int32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int32, signed, 32}, N, Path);
v_type_int32(X, Path, _TrUserData) -> mk_type_error({bad_integer, int32, signed, 32}, X, Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData) when -9223372036854775808 =< N, N =< 9223372036854775807 -> ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int64, signed, 64}, N, Path);
v_type_int64(X, Path, _TrUserData) -> mk_type_error({bad_integer, int64, signed, 64}, X, Path).

-compile({nowarn_unused_function,v_type_uint32/3}).
-dialyzer({nowarn_function,v_type_uint32/3}).
v_type_uint32(N, _Path, _TrUserData) when 0 =< N, N =< 4294967295 -> ok;
v_type_uint32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint32, unsigned, 32}, N, Path);
v_type_uint32(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint32, unsigned, 32}, X, Path).

-compile({nowarn_unused_function,v_type_uint64/3}).
-dialyzer({nowarn_function,v_type_uint64/3}).
v_type_uint64(N, _Path, _TrUserData) when 0 =< N, N =< 18446744073709551615 -> ok;
v_type_uint64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint64, unsigned, 64}, N, Path);
v_type_uint64(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint64, unsigned, 64}, X, Path).

-compile({nowarn_unused_function,v_type_bool/3}).
-dialyzer({nowarn_function,v_type_bool/3}).
v_type_bool(false, _Path, _TrUserData) -> ok;
v_type_bool(true, _Path, _TrUserData) -> ok;
v_type_bool(0, _Path, _TrUserData) -> ok;
v_type_bool(1, _Path, _TrUserData) -> ok;
v_type_bool(X, Path, _TrUserData) -> mk_type_error(bad_boolean_value, X, Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
        B when is_binary(B) -> ok;
        {error, _, _} -> mk_type_error(bad_unicode_string, S, Path)
    catch
        error:badarg -> mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) -> mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,v_type_bytes/3}).
-dialyzer({nowarn_function,v_type_bytes/3}).
v_type_bytes(B, _Path, _TrUserData) when is_binary(B) -> ok;
v_type_bytes(B, _Path, _TrUserData) when is_list(B) -> ok;
v_type_bytes(X, Path, _TrUserData) -> mk_type_error(bad_binary_value, X, Path).

-compile({nowarn_unused_function,'v_map<string,string>'/3}).
-dialyzer({nowarn_function,'v_map<string,string>'/3}).
'v_map<string,string>'(KVs, Path, TrUserData) when is_list(KVs) ->
    [case X of
         {Key, Value} ->
             v_type_string(Key, [key | Path], TrUserData),
             v_type_string(Value, [value | Path], TrUserData);
         _ -> mk_type_error(invalid_key_value_tuple, X, Path)
     end
     || X <- KVs],
    ok;
'v_map<string,string>'(X, Path, _TrUserData) -> mk_type_error(invalid_list_of_key_value_tuples, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error, {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) -> lists:append(lists:join(".", lists:map(fun atom_to_list/1, lists:reverse(PathR)))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.
-compile({inline,'tr_decode_init_default_event_store.client.streams.AppendReq.ProposedMessage.metadata'/2}).
'tr_decode_init_default_event_store.client.streams.AppendReq.ProposedMessage.metadata'(_, _) -> mt_empty_map_r().

-compile({inline,'tr_merge_event_store.client.streams.AppendReq.ProposedMessage.metadata'/3}).
'tr_merge_event_store.client.streams.AppendReq.ProposedMessage.metadata'(X1, X2, _) -> mt_merge_maptuples_r(X1, X2).

-compile({inline,'tr_decode_repeated_finalize_event_store.client.streams.AppendReq.ProposedMessage.metadata'/2}).
'tr_decode_repeated_finalize_event_store.client.streams.AppendReq.ProposedMessage.metadata'(L, _) -> mt_finalize_items_r(L).

-compile({inline,'tr_decode_repeated_add_elem_event_store.client.streams.AppendReq.ProposedMessage.metadata'/3}).
'tr_decode_repeated_add_elem_event_store.client.streams.AppendReq.ProposedMessage.metadata'(Elem, L, _) -> mt_add_item_r(Elem, L).

-compile({inline,'tr_decode_init_default_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'/2}).
'tr_decode_init_default_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(_, _) -> mt_empty_map_r().

-compile({inline,'tr_merge_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'/3}).
'tr_merge_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(X1, X2, _) -> mt_merge_maptuples_r(X1, X2).

-compile({inline,'tr_decode_repeated_finalize_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'/2}).
'tr_decode_repeated_finalize_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(L, _) -> mt_finalize_items_r(L).

-compile({inline,'tr_decode_repeated_add_elem_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'/3}).
'tr_decode_repeated_add_elem_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata'(Elem, L, _) -> mt_add_item_r(Elem, L).

-compile({inline,'tr_decode_init_default_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'/2}).
'tr_decode_init_default_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(_, _) -> mt_empty_map_r().

-compile({inline,'tr_merge_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'/3}).
'tr_merge_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(X1, X2, _) -> mt_merge_maptuples_r(X1, X2).

-compile({inline,'tr_decode_repeated_finalize_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'/2}).
'tr_decode_repeated_finalize_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(L, _) -> mt_finalize_items_r(L).

-compile({inline,'tr_decode_repeated_add_elem_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'/3}).
'tr_decode_repeated_add_elem_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata'(Elem, L, _) -> mt_add_item_r(Elem, L).

-compile({inline,'tr_encode_event_store.client.streams.AppendReq.ProposedMessage.metadata[x]'/2}).
'tr_encode_event_store.client.streams.AppendReq.ProposedMessage.metadata[x]'(X, _) -> mt_maptuple_to_pseudomsg_r(X, 'map<string,string>').

-compile({inline,'tr_encode_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata[x]'/2}).
'tr_encode_event_store.client.streams.BatchAppendReq.ProposedMessage.metadata[x]'(X, _) -> mt_maptuple_to_pseudomsg_r(X, 'map<string,string>').

-compile({inline,'tr_encode_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata[x]'/2}).
'tr_encode_event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata[x]'(X, _) -> mt_maptuple_to_pseudomsg_r(X, 'map<string,string>').

-compile({inline,mt_maptuple_to_pseudomsg_r/2}).
mt_maptuple_to_pseudomsg_r({K, V}, RName) -> {RName, K, V}.


-compile({inline,mt_empty_map_r/0}).
mt_empty_map_r() -> [].

-compile({inline,mt_add_item_r/2}).
mt_add_item_r({_RName, K, V}, Acc) -> [{K, V} | Acc].


-compile({inline,mt_finalize_items_r/1}).
mt_finalize_items_r(Acc) -> mt_finalize_items_r_aux(lists:reverse(Acc), dict:new()).

mt_finalize_items_r_aux([{K, V} | Tl], D) -> mt_finalize_items_r_aux(Tl, dict:store(K, V, D));
mt_finalize_items_r_aux([], D) -> dict:to_list(D).


-compile({inline,mt_merge_maptuples_r/2}).
mt_merge_maptuples_r(L1, L2) -> dict:to_list(dict:merge(fun (_Key, _V1, V2) -> V2 end, dict:from_list(L1), dict:from_list(L2))).




get_msg_defs() ->
    [{{enum, 'event_store.client.streams.ReadReq.Options.ReadDirection'}, [{'Forwards', 0}, {'Backwards', 1}]},
     {{enum, 'google.rpc.Code'},
      [{'OK', 0},
       {'CANCELLED', 1},
       {'UNKNOWN', 2},
       {'INVALID_ARGUMENT', 3},
       {'DEADLINE_EXCEEDED', 4},
       {'NOT_FOUND', 5},
       {'ALREADY_EXISTS', 6},
       {'PERMISSION_DENIED', 7},
       {'UNAUTHENTICATED', 16},
       {'RESOURCE_EXHAUSTED', 8},
       {'FAILED_PRECONDITION', 9},
       {'ABORTED', 10},
       {'OUT_OF_RANGE', 11},
       {'UNIMPLEMENTED', 12},
       {'INTERNAL', 13},
       {'UNAVAILABLE', 14},
       {'DATA_LOSS', 15}]},
     {{msg, 'event_store.client.streams.ReadReq.Options'},
      [#gpb_oneof{name = stream_option, rnum = 2,
                  fields =
                      [#field{name = stream, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.StreamOptions'}, occurrence = optional, opts = []},
                       #field{name = all, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.AllOptions'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = read_direction, fnum = 3, rnum = 3, type = {enum, 'event_store.client.streams.ReadReq.Options.ReadDirection'}, occurrence = optional, opts = []},
       #field{name = resolve_links, fnum = 4, rnum = 4, type = bool, occurrence = optional, opts = []},
       #gpb_oneof{name = count_option, rnum = 5,
                  fields =
                      [#field{name = count, fnum = 5, rnum = 5, type = uint64, occurrence = optional, opts = []},
                       #field{name = subscription, fnum = 6, rnum = 5, type = {msg, 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = filter_option, rnum = 6,
                  fields =
                      [#field{name = filter, fnum = 7, rnum = 6, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions'}, occurrence = optional, opts = []},
                       #field{name = no_filter, fnum = 8, rnum = 6, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = uuid_option, fnum = 9, rnum = 7, type = {msg, 'event_store.client.streams.ReadReq.Options.UUIDOption'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.UUIDOption'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'},
      [#field{name = regex, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = prefix, fnum = 2, rnum = 3, type = string, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.FilterOptions'},
      [#gpb_oneof{name = filter, rnum = 2,
                  fields =
                      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'}, occurrence = optional, opts = []},
                       #field{name = event_type, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = window, rnum = 3,
                  fields = [#field{name = max, fnum = 3, rnum = 3, type = uint32, occurrence = optional, opts = []}, #field{name = count, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
       #field{name = checkpointIntervalMultiplier, fnum = 5, rnum = 4, type = uint32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'}, []},
     {{msg, 'event_store.client.streams.ReadReq.Options.AllOptions'},
      [#gpb_oneof{name = all_option, rnum = 2,
                  fields =
                      [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.Position'}, occurrence = optional, opts = []},
                       #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq.Options.StreamOptions'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = revision_option, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.ReadReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp.ReadEvent'},
      [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
       #field{name = link, fnum = 2, rnum = 3, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
       #gpb_oneof{name = position, rnum = 4,
                  fields = [#field{name = commit_position, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = no_position, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'},
      [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #field{name = stream_identifier, fnum = 2, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #field{name = stream_revision, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []},
       #field{name = prepare_position, fnum = 4, rnum = 5, type = uint64, occurrence = optional, opts = []},
       #field{name = commit_position, fnum = 5, rnum = 6, type = uint64, occurrence = optional, opts = []},
       #field{name = metadata, fnum = 6, rnum = 7, type = {map, string, string}, occurrence = repeated, opts = []},
       #field{name = custom_metadata, fnum = 7, rnum = 8, type = bytes, occurrence = optional, opts = []},
       #field{name = data, fnum = 8, rnum = 9, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp.SubscriptionConfirmation'}, [#field{name = subscription_id, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp.Checkpoint'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp.StreamNotFound'}, [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.ReadResp'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent'}, occurrence = optional, opts = []},
                       #field{name = confirmation, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.SubscriptionConfirmation'}, occurrence = optional, opts = []},
                       #field{name = checkpoint, fnum = 3, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.Checkpoint'}, occurrence = optional, opts = []},
                       #field{name = stream_not_found, fnum = 4, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.StreamNotFound'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.AppendReq.Options'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = expected_stream_revision, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.AppendReq.ProposedMessage'},
      [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #field{name = metadata, fnum = 2, rnum = 3, type = {map, string, string}, occurrence = repeated, opts = []},
       #field{name = custom_metadata, fnum = 3, rnum = 4, type = bytes, occurrence = optional, opts = []},
       #field{name = data, fnum = 4, rnum = 5, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.AppendReq'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.AppendReq.Options'}, occurrence = optional, opts = []},
                       #field{name = proposed_message, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.AppendReq.ProposedMessage'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.AppendResp.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.AppendResp.Success'},
      [#gpb_oneof{name = current_revision_option, rnum = 2,
                  fields = [#field{name = current_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
       #gpb_oneof{name = position_option, rnum = 3,
                  fields =
                      [#field{name = position, fnum = 3, rnum = 3, type = {msg, 'event_store.client.streams.AppendResp.Position'}, occurrence = optional, opts = []},
                       #field{name = no_position, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.AppendResp.WrongExpectedVersion'},
      [#gpb_oneof{name = current_revision_option_20_6_0, rnum = 2,
                  fields = [#field{name = current_revision_20_6_0, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream_20_6_0, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = expected_revision_option_20_6_0, rnum = 3,
                  fields =
                      [#field{name = expected_revision_20_6_0, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = any_20_6_0, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists_20_6_0, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = current_revision_option, rnum = 4,
                  fields = [#field{name = current_revision, fnum = 6, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 7, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = expected_revision_option, rnum = 5,
                  fields =
                      [#field{name = expected_revision, fnum = 8, rnum = 5, type = uint64, occurrence = optional, opts = []},
                       #field{name = expected_any, fnum = 9, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_stream_exists, fnum = 10, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_no_stream, fnum = 11, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.AppendResp'},
      [#gpb_oneof{name = result, rnum = 2,
                  fields =
                      [#field{name = success, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.AppendResp.Success'}, occurrence = optional, opts = []},
                       #field{name = wrong_expected_version, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.AppendResp.WrongExpectedVersion'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.BatchAppendReq.Options'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = expected_stream_position, rnum = 3,
                  fields =
                      [#field{name = stream_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = deadline, fnum = 6, rnum = 4, type = {msg, 'google.protobuf.Timestamp'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.BatchAppendReq.ProposedMessage'},
      [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #field{name = metadata, fnum = 2, rnum = 3, type = {map, string, string}, occurrence = repeated, opts = []},
       #field{name = custom_metadata, fnum = 3, rnum = 4, type = bytes, occurrence = optional, opts = []},
       #field{name = data, fnum = 4, rnum = 5, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.BatchAppendReq'},
      [#field{name = correlation_id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #field{name = options, fnum = 2, rnum = 3, type = {msg, 'event_store.client.streams.BatchAppendReq.Options'}, occurrence = optional, opts = []},
       #field{name = proposed_messages, fnum = 3, rnum = 4, type = {msg, 'event_store.client.streams.BatchAppendReq.ProposedMessage'}, occurrence = repeated, opts = []},
       #field{name = is_final, fnum = 4, rnum = 5, type = bool, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.BatchAppendResp.Success'},
      [#gpb_oneof{name = current_revision_option, rnum = 2,
                  fields = [#field{name = current_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}], opts = []},
       #gpb_oneof{name = position_option, rnum = 3,
                  fields =
                      [#field{name = position, fnum = 3, rnum = 3, type = {msg, 'event_store.client.AllStreamPosition'}, occurrence = optional, opts = []},
                       #field{name = no_position, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.BatchAppendResp'},
      [#field{name = correlation_id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #gpb_oneof{name = result, rnum = 3,
                  fields =
                      [#field{name = error, fnum = 2, rnum = 3, type = {msg, 'google.rpc.Status'}, occurrence = optional, opts = []},
                       #field{name = success, fnum = 3, rnum = 3, type = {msg, 'event_store.client.streams.BatchAppendResp.Success'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = stream_identifier, fnum = 4, rnum = 4, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = expected_stream_position, rnum = 5,
                  fields =
                      [#field{name = stream_position, fnum = 5, rnum = 5, type = uint64, occurrence = optional, opts = []},
                       #field{name = no_stream, fnum = 6, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = any, fnum = 7, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists, fnum = 8, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.DeleteReq.Options'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = expected_stream_revision, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.DeleteReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.DeleteReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.DeleteResp.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.DeleteResp'},
      [#gpb_oneof{name = position_option, rnum = 2,
                  fields =
                      [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.DeleteResp.Position'}, occurrence = optional, opts = []},
                       #field{name = no_position, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.TombstoneReq.Options'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = expected_stream_revision, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.streams.TombstoneReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.TombstoneReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.TombstoneResp.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.streams.TombstoneResp'},
      [#gpb_oneof{name = position_option, rnum = 2,
                  fields =
                      [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.TombstoneResp.Position'}, occurrence = optional, opts = []},
                       #field{name = no_position, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.UUID.Structured'},
      [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.UUID'},
      [#gpb_oneof{name = value, rnum = 2,
                  fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.Empty'}, []},
     {{msg, 'event_store.client.StreamIdentifier'}, [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.AllStreamPosition'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.WrongExpectedVersion'},
      [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                  fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                  fields =
                      [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.AccessDenied'}, []},
     {{msg, 'event_store.client.StreamDeleted'}, [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.Timeout'}, []},
     {{msg, 'event_store.client.Unknown'}, []},
     {{msg, 'event_store.client.InvalidTransaction'}, []},
     {{msg, 'event_store.client.MaximumAppendSizeExceeded'}, [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.BadRequest'}, [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'google.rpc.Status'},
      [#field{name = code, fnum = 1, rnum = 2, type = {enum, 'google.rpc.Code'}, occurrence = optional, opts = []},
       #field{name = message, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = details, fnum = 3, rnum = 4, type = {msg, 'google.protobuf.Any'}, occurrence = optional, opts = []}]},
     {{msg, 'google.protobuf.Empty'}, []},
     {{msg, 'google.protobuf.Timestamp'}, [#field{name = seconds, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = nanos, fnum = 2, rnum = 3, type = int32, occurrence = optional, opts = []}]},
     {{msg, 'google.protobuf.Any'}, [#field{name = type_url, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = value, fnum = 2, rnum = 3, type = bytes, occurrence = optional, opts = []}]}].


get_msg_names() ->
    ['event_store.client.streams.ReadReq.Options',
     'event_store.client.streams.ReadReq.Options.UUIDOption',
     'event_store.client.streams.ReadReq.Options.FilterOptions.Expression',
     'event_store.client.streams.ReadReq.Options.FilterOptions',
     'event_store.client.streams.ReadReq.Options.Position',
     'event_store.client.streams.ReadReq.Options.SubscriptionOptions',
     'event_store.client.streams.ReadReq.Options.AllOptions',
     'event_store.client.streams.ReadReq.Options.StreamOptions',
     'event_store.client.streams.ReadReq',
     'event_store.client.streams.ReadResp.ReadEvent',
     'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.streams.ReadResp.SubscriptionConfirmation',
     'event_store.client.streams.ReadResp.Checkpoint',
     'event_store.client.streams.ReadResp.StreamNotFound',
     'event_store.client.streams.ReadResp',
     'event_store.client.streams.AppendReq.Options',
     'event_store.client.streams.AppendReq.ProposedMessage',
     'event_store.client.streams.AppendReq',
     'event_store.client.streams.AppendResp.Position',
     'event_store.client.streams.AppendResp.Success',
     'event_store.client.streams.AppendResp.WrongExpectedVersion',
     'event_store.client.streams.AppendResp',
     'event_store.client.streams.BatchAppendReq.Options',
     'event_store.client.streams.BatchAppendReq.ProposedMessage',
     'event_store.client.streams.BatchAppendReq',
     'event_store.client.streams.BatchAppendResp.Success',
     'event_store.client.streams.BatchAppendResp',
     'event_store.client.streams.DeleteReq.Options',
     'event_store.client.streams.DeleteReq',
     'event_store.client.streams.DeleteResp.Position',
     'event_store.client.streams.DeleteResp',
     'event_store.client.streams.TombstoneReq.Options',
     'event_store.client.streams.TombstoneReq',
     'event_store.client.streams.TombstoneResp.Position',
     'event_store.client.streams.TombstoneResp',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.rpc.Status',
     'google.protobuf.Empty',
     'google.protobuf.Timestamp',
     'google.protobuf.Any'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['event_store.client.streams.ReadReq.Options',
     'event_store.client.streams.ReadReq.Options.UUIDOption',
     'event_store.client.streams.ReadReq.Options.FilterOptions.Expression',
     'event_store.client.streams.ReadReq.Options.FilterOptions',
     'event_store.client.streams.ReadReq.Options.Position',
     'event_store.client.streams.ReadReq.Options.SubscriptionOptions',
     'event_store.client.streams.ReadReq.Options.AllOptions',
     'event_store.client.streams.ReadReq.Options.StreamOptions',
     'event_store.client.streams.ReadReq',
     'event_store.client.streams.ReadResp.ReadEvent',
     'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.streams.ReadResp.SubscriptionConfirmation',
     'event_store.client.streams.ReadResp.Checkpoint',
     'event_store.client.streams.ReadResp.StreamNotFound',
     'event_store.client.streams.ReadResp',
     'event_store.client.streams.AppendReq.Options',
     'event_store.client.streams.AppendReq.ProposedMessage',
     'event_store.client.streams.AppendReq',
     'event_store.client.streams.AppendResp.Position',
     'event_store.client.streams.AppendResp.Success',
     'event_store.client.streams.AppendResp.WrongExpectedVersion',
     'event_store.client.streams.AppendResp',
     'event_store.client.streams.BatchAppendReq.Options',
     'event_store.client.streams.BatchAppendReq.ProposedMessage',
     'event_store.client.streams.BatchAppendReq',
     'event_store.client.streams.BatchAppendResp.Success',
     'event_store.client.streams.BatchAppendResp',
     'event_store.client.streams.DeleteReq.Options',
     'event_store.client.streams.DeleteReq',
     'event_store.client.streams.DeleteResp.Position',
     'event_store.client.streams.DeleteResp',
     'event_store.client.streams.TombstoneReq.Options',
     'event_store.client.streams.TombstoneReq',
     'event_store.client.streams.TombstoneResp.Position',
     'event_store.client.streams.TombstoneResp',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.rpc.Status',
     'google.protobuf.Empty',
     'google.protobuf.Timestamp',
     'google.protobuf.Any'].


get_enum_names() -> ['event_store.client.streams.ReadReq.Options.ReadDirection', 'google.rpc.Code'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
        Fs when is_list(Fs) -> Fs;
        error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
        Es when is_list(Es) -> Es;
        error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('event_store.client.streams.ReadReq.Options') ->
    [#gpb_oneof{name = stream_option, rnum = 2,
                fields =
                    [#field{name = stream, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.StreamOptions'}, occurrence = optional, opts = []},
                     #field{name = all, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.AllOptions'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = read_direction, fnum = 3, rnum = 3, type = {enum, 'event_store.client.streams.ReadReq.Options.ReadDirection'}, occurrence = optional, opts = []},
     #field{name = resolve_links, fnum = 4, rnum = 4, type = bool, occurrence = optional, opts = []},
     #gpb_oneof{name = count_option, rnum = 5,
                fields =
                    [#field{name = count, fnum = 5, rnum = 5, type = uint64, occurrence = optional, opts = []},
                     #field{name = subscription, fnum = 6, rnum = 5, type = {msg, 'event_store.client.streams.ReadReq.Options.SubscriptionOptions'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = filter_option, rnum = 6,
                fields =
                    [#field{name = filter, fnum = 7, rnum = 6, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions'}, occurrence = optional, opts = []},
                     #field{name = no_filter, fnum = 8, rnum = 6, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = uuid_option, fnum = 9, rnum = 7, type = {msg, 'event_store.client.streams.ReadReq.Options.UUIDOption'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.UUIDOption') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.FilterOptions.Expression') ->
    [#field{name = regex, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = prefix, fnum = 2, rnum = 3, type = string, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.FilterOptions') ->
    [#gpb_oneof{name = filter, rnum = 2,
                fields =
                    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'}, occurrence = optional, opts = []},
                     #field{name = event_type, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = window, rnum = 3,
                fields = [#field{name = max, fnum = 3, rnum = 3, type = uint32, occurrence = optional, opts = []}, #field{name = count, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
     #field{name = checkpointIntervalMultiplier, fnum = 5, rnum = 4, type = uint32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.SubscriptionOptions') -> [];
find_msg_def('event_store.client.streams.ReadReq.Options.AllOptions') ->
    [#gpb_oneof{name = all_option, rnum = 2,
                fields =
                    [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options.Position'}, occurrence = optional, opts = []},
                     #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.ReadReq.Options.StreamOptions') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = revision_option, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.ReadReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadResp.ReadEvent') ->
    [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
     #field{name = link, fnum = 2, rnum = 3, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
     #gpb_oneof{name = position, rnum = 4,
                fields = [#field{name = commit_position, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = no_position, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.streams.ReadResp.ReadEvent.RecordedEvent') ->
    [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #field{name = stream_identifier, fnum = 2, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #field{name = stream_revision, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []},
     #field{name = prepare_position, fnum = 4, rnum = 5, type = uint64, occurrence = optional, opts = []},
     #field{name = commit_position, fnum = 5, rnum = 6, type = uint64, occurrence = optional, opts = []},
     #field{name = metadata, fnum = 6, rnum = 7, type = {map, string, string}, occurrence = repeated, opts = []},
     #field{name = custom_metadata, fnum = 7, rnum = 8, type = bytes, occurrence = optional, opts = []},
     #field{name = data, fnum = 8, rnum = 9, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadResp.SubscriptionConfirmation') -> [#field{name = subscription_id, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadResp.Checkpoint') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadResp.StreamNotFound') -> [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.ReadResp') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.ReadEvent'}, occurrence = optional, opts = []},
                     #field{name = confirmation, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.SubscriptionConfirmation'}, occurrence = optional, opts = []},
                     #field{name = checkpoint, fnum = 3, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.Checkpoint'}, occurrence = optional, opts = []},
                     #field{name = stream_not_found, fnum = 4, rnum = 2, type = {msg, 'event_store.client.streams.ReadResp.StreamNotFound'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.AppendReq.Options') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = expected_stream_revision, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.AppendReq.ProposedMessage') ->
    [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #field{name = metadata, fnum = 2, rnum = 3, type = {map, string, string}, occurrence = repeated, opts = []},
     #field{name = custom_metadata, fnum = 3, rnum = 4, type = bytes, occurrence = optional, opts = []},
     #field{name = data, fnum = 4, rnum = 5, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.AppendReq') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.AppendReq.Options'}, occurrence = optional, opts = []},
                     #field{name = proposed_message, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.AppendReq.ProposedMessage'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.AppendResp.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.AppendResp.Success') ->
    [#gpb_oneof{name = current_revision_option, rnum = 2,
                fields = [#field{name = current_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
     #gpb_oneof{name = position_option, rnum = 3,
                fields =
                    [#field{name = position, fnum = 3, rnum = 3, type = {msg, 'event_store.client.streams.AppendResp.Position'}, occurrence = optional, opts = []},
                     #field{name = no_position, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.AppendResp.WrongExpectedVersion') ->
    [#gpb_oneof{name = current_revision_option_20_6_0, rnum = 2,
                fields = [#field{name = current_revision_20_6_0, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream_20_6_0, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = expected_revision_option_20_6_0, rnum = 3,
                fields =
                    [#field{name = expected_revision_20_6_0, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = any_20_6_0, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists_20_6_0, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = current_revision_option, rnum = 4,
                fields = [#field{name = current_revision, fnum = 6, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 7, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = expected_revision_option, rnum = 5,
                fields =
                    [#field{name = expected_revision, fnum = 8, rnum = 5, type = uint64, occurrence = optional, opts = []},
                     #field{name = expected_any, fnum = 9, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_stream_exists, fnum = 10, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_no_stream, fnum = 11, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.AppendResp') ->
    [#gpb_oneof{name = result, rnum = 2,
                fields =
                    [#field{name = success, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.AppendResp.Success'}, occurrence = optional, opts = []},
                     #field{name = wrong_expected_version, fnum = 2, rnum = 2, type = {msg, 'event_store.client.streams.AppendResp.WrongExpectedVersion'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.BatchAppendReq.Options') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = expected_stream_position, rnum = 3,
                fields =
                    [#field{name = stream_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = deadline, fnum = 6, rnum = 4, type = {msg, 'google.protobuf.Timestamp'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.BatchAppendReq.ProposedMessage') ->
    [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #field{name = metadata, fnum = 2, rnum = 3, type = {map, string, string}, occurrence = repeated, opts = []},
     #field{name = custom_metadata, fnum = 3, rnum = 4, type = bytes, occurrence = optional, opts = []},
     #field{name = data, fnum = 4, rnum = 5, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.BatchAppendReq') ->
    [#field{name = correlation_id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #field{name = options, fnum = 2, rnum = 3, type = {msg, 'event_store.client.streams.BatchAppendReq.Options'}, occurrence = optional, opts = []},
     #field{name = proposed_messages, fnum = 3, rnum = 4, type = {msg, 'event_store.client.streams.BatchAppendReq.ProposedMessage'}, occurrence = repeated, opts = []},
     #field{name = is_final, fnum = 4, rnum = 5, type = bool, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.BatchAppendResp.Success') ->
    [#gpb_oneof{name = current_revision_option, rnum = 2,
                fields = [#field{name = current_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}], opts = []},
     #gpb_oneof{name = position_option, rnum = 3,
                fields =
                    [#field{name = position, fnum = 3, rnum = 3, type = {msg, 'event_store.client.AllStreamPosition'}, occurrence = optional, opts = []},
                     #field{name = no_position, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.BatchAppendResp') ->
    [#field{name = correlation_id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #gpb_oneof{name = result, rnum = 3,
                fields =
                    [#field{name = error, fnum = 2, rnum = 3, type = {msg, 'google.rpc.Status'}, occurrence = optional, opts = []},
                     #field{name = success, fnum = 3, rnum = 3, type = {msg, 'event_store.client.streams.BatchAppendResp.Success'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = stream_identifier, fnum = 4, rnum = 4, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = expected_stream_position, rnum = 5,
                fields =
                    [#field{name = stream_position, fnum = 5, rnum = 5, type = uint64, occurrence = optional, opts = []},
                     #field{name = no_stream, fnum = 6, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = any, fnum = 7, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists, fnum = 8, rnum = 5, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.DeleteReq.Options') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = expected_stream_revision, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.DeleteReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.DeleteReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.DeleteResp.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.DeleteResp') ->
    [#gpb_oneof{name = position_option, rnum = 2,
                fields =
                    [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.DeleteResp.Position'}, occurrence = optional, opts = []},
                     #field{name = no_position, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.TombstoneReq.Options') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = expected_stream_revision, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = no_stream, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = any, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = stream_exists, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.streams.TombstoneReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.TombstoneReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.TombstoneResp.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.streams.TombstoneResp') ->
    [#gpb_oneof{name = position_option, rnum = 2,
                fields =
                    [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.streams.TombstoneResp.Position'}, occurrence = optional, opts = []},
                     #field{name = no_position, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.UUID.Structured') ->
    [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.UUID') ->
    [#gpb_oneof{name = value, rnum = 2,
                fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.Empty') -> [];
find_msg_def('event_store.client.StreamIdentifier') -> [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.AllStreamPosition') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.WrongExpectedVersion') ->
    [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                fields =
                    [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.AccessDenied') -> [];
find_msg_def('event_store.client.StreamDeleted') -> [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.Timeout') -> [];
find_msg_def('event_store.client.Unknown') -> [];
find_msg_def('event_store.client.InvalidTransaction') -> [];
find_msg_def('event_store.client.MaximumAppendSizeExceeded') -> [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.BadRequest') -> [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('google.rpc.Status') ->
    [#field{name = code, fnum = 1, rnum = 2, type = {enum, 'google.rpc.Code'}, occurrence = optional, opts = []},
     #field{name = message, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = details, fnum = 3, rnum = 4, type = {msg, 'google.protobuf.Any'}, occurrence = optional, opts = []}];
find_msg_def('google.protobuf.Empty') -> [];
find_msg_def('google.protobuf.Timestamp') -> [#field{name = seconds, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = nanos, fnum = 2, rnum = 3, type = int32, occurrence = optional, opts = []}];
find_msg_def('google.protobuf.Any') -> [#field{name = type_url, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = value, fnum = 2, rnum = 3, type = bytes, occurrence = optional, opts = []}];
find_msg_def(_) -> error.


find_enum_def('event_store.client.streams.ReadReq.Options.ReadDirection') -> [{'Forwards', 0}, {'Backwards', 1}];
find_enum_def('google.rpc.Code') ->
    [{'OK', 0},
     {'CANCELLED', 1},
     {'UNKNOWN', 2},
     {'INVALID_ARGUMENT', 3},
     {'DEADLINE_EXCEEDED', 4},
     {'NOT_FOUND', 5},
     {'ALREADY_EXISTS', 6},
     {'PERMISSION_DENIED', 7},
     {'UNAUTHENTICATED', 16},
     {'RESOURCE_EXHAUSTED', 8},
     {'FAILED_PRECONDITION', 9},
     {'ABORTED', 10},
     {'OUT_OF_RANGE', 11},
     {'UNIMPLEMENTED', 12},
     {'INTERNAL', 13},
     {'UNAVAILABLE', 14},
     {'DATA_LOSS', 15}];
find_enum_def(_) -> error.


enum_symbol_by_value('event_store.client.streams.ReadReq.Options.ReadDirection', Value) -> 'enum_symbol_by_value_event_store.client.streams.ReadReq.Options.ReadDirection'(Value);
enum_symbol_by_value('google.rpc.Code', Value) -> 'enum_symbol_by_value_google.rpc.Code'(Value).


enum_value_by_symbol('event_store.client.streams.ReadReq.Options.ReadDirection', Sym) -> 'enum_value_by_symbol_event_store.client.streams.ReadReq.Options.ReadDirection'(Sym);
enum_value_by_symbol('google.rpc.Code', Sym) -> 'enum_value_by_symbol_google.rpc.Code'(Sym).


'enum_symbol_by_value_event_store.client.streams.ReadReq.Options.ReadDirection'(0) -> 'Forwards';
'enum_symbol_by_value_event_store.client.streams.ReadReq.Options.ReadDirection'(1) -> 'Backwards'.


'enum_value_by_symbol_event_store.client.streams.ReadReq.Options.ReadDirection'('Forwards') -> 0;
'enum_value_by_symbol_event_store.client.streams.ReadReq.Options.ReadDirection'('Backwards') -> 1.

'enum_symbol_by_value_google.rpc.Code'(0) -> 'OK';
'enum_symbol_by_value_google.rpc.Code'(1) -> 'CANCELLED';
'enum_symbol_by_value_google.rpc.Code'(2) -> 'UNKNOWN';
'enum_symbol_by_value_google.rpc.Code'(3) -> 'INVALID_ARGUMENT';
'enum_symbol_by_value_google.rpc.Code'(4) -> 'DEADLINE_EXCEEDED';
'enum_symbol_by_value_google.rpc.Code'(5) -> 'NOT_FOUND';
'enum_symbol_by_value_google.rpc.Code'(6) -> 'ALREADY_EXISTS';
'enum_symbol_by_value_google.rpc.Code'(7) -> 'PERMISSION_DENIED';
'enum_symbol_by_value_google.rpc.Code'(16) -> 'UNAUTHENTICATED';
'enum_symbol_by_value_google.rpc.Code'(8) -> 'RESOURCE_EXHAUSTED';
'enum_symbol_by_value_google.rpc.Code'(9) -> 'FAILED_PRECONDITION';
'enum_symbol_by_value_google.rpc.Code'(10) -> 'ABORTED';
'enum_symbol_by_value_google.rpc.Code'(11) -> 'OUT_OF_RANGE';
'enum_symbol_by_value_google.rpc.Code'(12) -> 'UNIMPLEMENTED';
'enum_symbol_by_value_google.rpc.Code'(13) -> 'INTERNAL';
'enum_symbol_by_value_google.rpc.Code'(14) -> 'UNAVAILABLE';
'enum_symbol_by_value_google.rpc.Code'(15) -> 'DATA_LOSS'.


'enum_value_by_symbol_google.rpc.Code'('OK') -> 0;
'enum_value_by_symbol_google.rpc.Code'('CANCELLED') -> 1;
'enum_value_by_symbol_google.rpc.Code'('UNKNOWN') -> 2;
'enum_value_by_symbol_google.rpc.Code'('INVALID_ARGUMENT') -> 3;
'enum_value_by_symbol_google.rpc.Code'('DEADLINE_EXCEEDED') -> 4;
'enum_value_by_symbol_google.rpc.Code'('NOT_FOUND') -> 5;
'enum_value_by_symbol_google.rpc.Code'('ALREADY_EXISTS') -> 6;
'enum_value_by_symbol_google.rpc.Code'('PERMISSION_DENIED') -> 7;
'enum_value_by_symbol_google.rpc.Code'('UNAUTHENTICATED') -> 16;
'enum_value_by_symbol_google.rpc.Code'('RESOURCE_EXHAUSTED') -> 8;
'enum_value_by_symbol_google.rpc.Code'('FAILED_PRECONDITION') -> 9;
'enum_value_by_symbol_google.rpc.Code'('ABORTED') -> 10;
'enum_value_by_symbol_google.rpc.Code'('OUT_OF_RANGE') -> 11;
'enum_value_by_symbol_google.rpc.Code'('UNIMPLEMENTED') -> 12;
'enum_value_by_symbol_google.rpc.Code'('INTERNAL') -> 13;
'enum_value_by_symbol_google.rpc.Code'('UNAVAILABLE') -> 14;
'enum_value_by_symbol_google.rpc.Code'('DATA_LOSS') -> 15.


get_service_names() -> ['event_store.client.streams.Streams'].


get_service_def('event_store.client.streams.Streams') ->
    {{service, 'event_store.client.streams.Streams'},
     [#rpc{name = 'Read', input = 'event_store.client.streams.ReadReq', output = 'event_store.client.streams.ReadResp', input_stream = false, output_stream = true, opts = []},
      #rpc{name = 'Append', input = 'event_store.client.streams.AppendReq', output = 'event_store.client.streams.AppendResp', input_stream = true, output_stream = false, opts = []},
      #rpc{name = 'Delete', input = 'event_store.client.streams.DeleteReq', output = 'event_store.client.streams.DeleteResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Tombstone', input = 'event_store.client.streams.TombstoneReq', output = 'event_store.client.streams.TombstoneResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'BatchAppend', input = 'event_store.client.streams.BatchAppendReq', output = 'event_store.client.streams.BatchAppendResp', input_stream = true, output_stream = true, opts = []}]};
get_service_def(_) -> error.


get_rpc_names('event_store.client.streams.Streams') -> ['Read', 'Append', 'Delete', 'Tombstone', 'BatchAppend'];
get_rpc_names(_) -> error.


find_rpc_def('event_store.client.streams.Streams', RpcName) -> 'find_rpc_def_event_store.client.streams.Streams'(RpcName);
find_rpc_def(_, _) -> error.


'find_rpc_def_event_store.client.streams.Streams'('Read') -> #rpc{name = 'Read', input = 'event_store.client.streams.ReadReq', output = 'event_store.client.streams.ReadResp', input_stream = false, output_stream = true, opts = []};
'find_rpc_def_event_store.client.streams.Streams'('Append') -> #rpc{name = 'Append', input = 'event_store.client.streams.AppendReq', output = 'event_store.client.streams.AppendResp', input_stream = true, output_stream = false, opts = []};
'find_rpc_def_event_store.client.streams.Streams'('Delete') -> #rpc{name = 'Delete', input = 'event_store.client.streams.DeleteReq', output = 'event_store.client.streams.DeleteResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.streams.Streams'('Tombstone') ->
    #rpc{name = 'Tombstone', input = 'event_store.client.streams.TombstoneReq', output = 'event_store.client.streams.TombstoneResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.streams.Streams'('BatchAppend') ->
    #rpc{name = 'BatchAppend', input = 'event_store.client.streams.BatchAppendReq', output = 'event_store.client.streams.BatchAppendResp', input_stream = true, output_stream = true, opts = []};
'find_rpc_def_event_store.client.streams.Streams'(_) -> error.


fetch_rpc_def(ServiceName, RpcName) ->
    case find_rpc_def(ServiceName, RpcName) of
        Def when is_tuple(Def) -> Def;
        error -> erlang:error({no_such_rpc, ServiceName, RpcName})
    end.


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
fqbin_to_service_name(<<"event_store.client.streams.Streams">>) -> 'event_store.client.streams.Streams';
fqbin_to_service_name(X) -> error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
service_name_to_fqbin('event_store.client.streams.Streams') -> <<"event_store.client.streams.Streams">>;
service_name_to_fqbin(X) -> error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
fqbins_to_service_and_rpc_name(<<"event_store.client.streams.Streams">>, <<"Read">>) -> {'event_store.client.streams.Streams', 'Read'};
fqbins_to_service_and_rpc_name(<<"event_store.client.streams.Streams">>, <<"Append">>) -> {'event_store.client.streams.Streams', 'Append'};
fqbins_to_service_and_rpc_name(<<"event_store.client.streams.Streams">>, <<"Delete">>) -> {'event_store.client.streams.Streams', 'Delete'};
fqbins_to_service_and_rpc_name(<<"event_store.client.streams.Streams">>, <<"Tombstone">>) -> {'event_store.client.streams.Streams', 'Tombstone'};
fqbins_to_service_and_rpc_name(<<"event_store.client.streams.Streams">>, <<"BatchAppend">>) -> {'event_store.client.streams.Streams', 'BatchAppend'};
fqbins_to_service_and_rpc_name(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
service_and_rpc_name_to_fqbins('event_store.client.streams.Streams', 'Read') -> {<<"event_store.client.streams.Streams">>, <<"Read">>};
service_and_rpc_name_to_fqbins('event_store.client.streams.Streams', 'Append') -> {<<"event_store.client.streams.Streams">>, <<"Append">>};
service_and_rpc_name_to_fqbins('event_store.client.streams.Streams', 'Delete') -> {<<"event_store.client.streams.Streams">>, <<"Delete">>};
service_and_rpc_name_to_fqbins('event_store.client.streams.Streams', 'Tombstone') -> {<<"event_store.client.streams.Streams">>, <<"Tombstone">>};
service_and_rpc_name_to_fqbins('event_store.client.streams.Streams', 'BatchAppend') -> {<<"event_store.client.streams.Streams">>, <<"BatchAppend">>};
service_and_rpc_name_to_fqbins(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options">>) -> 'event_store.client.streams.ReadReq.Options';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.UUIDOption">>) -> 'event_store.client.streams.ReadReq.Options.UUIDOption';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.FilterOptions.Expression">>) -> 'event_store.client.streams.ReadReq.Options.FilterOptions.Expression';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.FilterOptions">>) -> 'event_store.client.streams.ReadReq.Options.FilterOptions';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.Position">>) -> 'event_store.client.streams.ReadReq.Options.Position';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.SubscriptionOptions">>) -> 'event_store.client.streams.ReadReq.Options.SubscriptionOptions';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.AllOptions">>) -> 'event_store.client.streams.ReadReq.Options.AllOptions';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq.Options.StreamOptions">>) -> 'event_store.client.streams.ReadReq.Options.StreamOptions';
fqbin_to_msg_name(<<"event_store.client.streams.ReadReq">>) -> 'event_store.client.streams.ReadReq';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp.ReadEvent">>) -> 'event_store.client.streams.ReadResp.ReadEvent';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp.ReadEvent.RecordedEvent">>) -> 'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp.SubscriptionConfirmation">>) -> 'event_store.client.streams.ReadResp.SubscriptionConfirmation';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp.Checkpoint">>) -> 'event_store.client.streams.ReadResp.Checkpoint';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp.StreamNotFound">>) -> 'event_store.client.streams.ReadResp.StreamNotFound';
fqbin_to_msg_name(<<"event_store.client.streams.ReadResp">>) -> 'event_store.client.streams.ReadResp';
fqbin_to_msg_name(<<"event_store.client.streams.AppendReq.Options">>) -> 'event_store.client.streams.AppendReq.Options';
fqbin_to_msg_name(<<"event_store.client.streams.AppendReq.ProposedMessage">>) -> 'event_store.client.streams.AppendReq.ProposedMessage';
fqbin_to_msg_name(<<"event_store.client.streams.AppendReq">>) -> 'event_store.client.streams.AppendReq';
fqbin_to_msg_name(<<"event_store.client.streams.AppendResp.Position">>) -> 'event_store.client.streams.AppendResp.Position';
fqbin_to_msg_name(<<"event_store.client.streams.AppendResp.Success">>) -> 'event_store.client.streams.AppendResp.Success';
fqbin_to_msg_name(<<"event_store.client.streams.AppendResp.WrongExpectedVersion">>) -> 'event_store.client.streams.AppendResp.WrongExpectedVersion';
fqbin_to_msg_name(<<"event_store.client.streams.AppendResp">>) -> 'event_store.client.streams.AppendResp';
fqbin_to_msg_name(<<"event_store.client.streams.BatchAppendReq.Options">>) -> 'event_store.client.streams.BatchAppendReq.Options';
fqbin_to_msg_name(<<"event_store.client.streams.BatchAppendReq.ProposedMessage">>) -> 'event_store.client.streams.BatchAppendReq.ProposedMessage';
fqbin_to_msg_name(<<"event_store.client.streams.BatchAppendReq">>) -> 'event_store.client.streams.BatchAppendReq';
fqbin_to_msg_name(<<"event_store.client.streams.BatchAppendResp.Success">>) -> 'event_store.client.streams.BatchAppendResp.Success';
fqbin_to_msg_name(<<"event_store.client.streams.BatchAppendResp">>) -> 'event_store.client.streams.BatchAppendResp';
fqbin_to_msg_name(<<"event_store.client.streams.DeleteReq.Options">>) -> 'event_store.client.streams.DeleteReq.Options';
fqbin_to_msg_name(<<"event_store.client.streams.DeleteReq">>) -> 'event_store.client.streams.DeleteReq';
fqbin_to_msg_name(<<"event_store.client.streams.DeleteResp.Position">>) -> 'event_store.client.streams.DeleteResp.Position';
fqbin_to_msg_name(<<"event_store.client.streams.DeleteResp">>) -> 'event_store.client.streams.DeleteResp';
fqbin_to_msg_name(<<"event_store.client.streams.TombstoneReq.Options">>) -> 'event_store.client.streams.TombstoneReq.Options';
fqbin_to_msg_name(<<"event_store.client.streams.TombstoneReq">>) -> 'event_store.client.streams.TombstoneReq';
fqbin_to_msg_name(<<"event_store.client.streams.TombstoneResp.Position">>) -> 'event_store.client.streams.TombstoneResp.Position';
fqbin_to_msg_name(<<"event_store.client.streams.TombstoneResp">>) -> 'event_store.client.streams.TombstoneResp';
fqbin_to_msg_name(<<"event_store.client.UUID.Structured">>) -> 'event_store.client.UUID.Structured';
fqbin_to_msg_name(<<"event_store.client.UUID">>) -> 'event_store.client.UUID';
fqbin_to_msg_name(<<"event_store.client.Empty">>) -> 'event_store.client.Empty';
fqbin_to_msg_name(<<"event_store.client.StreamIdentifier">>) -> 'event_store.client.StreamIdentifier';
fqbin_to_msg_name(<<"event_store.client.AllStreamPosition">>) -> 'event_store.client.AllStreamPosition';
fqbin_to_msg_name(<<"event_store.client.WrongExpectedVersion">>) -> 'event_store.client.WrongExpectedVersion';
fqbin_to_msg_name(<<"event_store.client.AccessDenied">>) -> 'event_store.client.AccessDenied';
fqbin_to_msg_name(<<"event_store.client.StreamDeleted">>) -> 'event_store.client.StreamDeleted';
fqbin_to_msg_name(<<"event_store.client.Timeout">>) -> 'event_store.client.Timeout';
fqbin_to_msg_name(<<"event_store.client.Unknown">>) -> 'event_store.client.Unknown';
fqbin_to_msg_name(<<"event_store.client.InvalidTransaction">>) -> 'event_store.client.InvalidTransaction';
fqbin_to_msg_name(<<"event_store.client.MaximumAppendSizeExceeded">>) -> 'event_store.client.MaximumAppendSizeExceeded';
fqbin_to_msg_name(<<"event_store.client.BadRequest">>) -> 'event_store.client.BadRequest';
fqbin_to_msg_name(<<"google.rpc.Status">>) -> 'google.rpc.Status';
fqbin_to_msg_name(<<"google.protobuf.Empty">>) -> 'google.protobuf.Empty';
fqbin_to_msg_name(<<"google.protobuf.Timestamp">>) -> 'google.protobuf.Timestamp';
fqbin_to_msg_name(<<"google.protobuf.Any">>) -> 'google.protobuf.Any';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('event_store.client.streams.ReadReq.Options') -> <<"event_store.client.streams.ReadReq.Options">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.UUIDOption') -> <<"event_store.client.streams.ReadReq.Options.UUIDOption">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.FilterOptions.Expression') -> <<"event_store.client.streams.ReadReq.Options.FilterOptions.Expression">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.FilterOptions') -> <<"event_store.client.streams.ReadReq.Options.FilterOptions">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.Position') -> <<"event_store.client.streams.ReadReq.Options.Position">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.SubscriptionOptions') -> <<"event_store.client.streams.ReadReq.Options.SubscriptionOptions">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.AllOptions') -> <<"event_store.client.streams.ReadReq.Options.AllOptions">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq.Options.StreamOptions') -> <<"event_store.client.streams.ReadReq.Options.StreamOptions">>;
msg_name_to_fqbin('event_store.client.streams.ReadReq') -> <<"event_store.client.streams.ReadReq">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp.ReadEvent') -> <<"event_store.client.streams.ReadResp.ReadEvent">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp.ReadEvent.RecordedEvent') -> <<"event_store.client.streams.ReadResp.ReadEvent.RecordedEvent">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp.SubscriptionConfirmation') -> <<"event_store.client.streams.ReadResp.SubscriptionConfirmation">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp.Checkpoint') -> <<"event_store.client.streams.ReadResp.Checkpoint">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp.StreamNotFound') -> <<"event_store.client.streams.ReadResp.StreamNotFound">>;
msg_name_to_fqbin('event_store.client.streams.ReadResp') -> <<"event_store.client.streams.ReadResp">>;
msg_name_to_fqbin('event_store.client.streams.AppendReq.Options') -> <<"event_store.client.streams.AppendReq.Options">>;
msg_name_to_fqbin('event_store.client.streams.AppendReq.ProposedMessage') -> <<"event_store.client.streams.AppendReq.ProposedMessage">>;
msg_name_to_fqbin('event_store.client.streams.AppendReq') -> <<"event_store.client.streams.AppendReq">>;
msg_name_to_fqbin('event_store.client.streams.AppendResp.Position') -> <<"event_store.client.streams.AppendResp.Position">>;
msg_name_to_fqbin('event_store.client.streams.AppendResp.Success') -> <<"event_store.client.streams.AppendResp.Success">>;
msg_name_to_fqbin('event_store.client.streams.AppendResp.WrongExpectedVersion') -> <<"event_store.client.streams.AppendResp.WrongExpectedVersion">>;
msg_name_to_fqbin('event_store.client.streams.AppendResp') -> <<"event_store.client.streams.AppendResp">>;
msg_name_to_fqbin('event_store.client.streams.BatchAppendReq.Options') -> <<"event_store.client.streams.BatchAppendReq.Options">>;
msg_name_to_fqbin('event_store.client.streams.BatchAppendReq.ProposedMessage') -> <<"event_store.client.streams.BatchAppendReq.ProposedMessage">>;
msg_name_to_fqbin('event_store.client.streams.BatchAppendReq') -> <<"event_store.client.streams.BatchAppendReq">>;
msg_name_to_fqbin('event_store.client.streams.BatchAppendResp.Success') -> <<"event_store.client.streams.BatchAppendResp.Success">>;
msg_name_to_fqbin('event_store.client.streams.BatchAppendResp') -> <<"event_store.client.streams.BatchAppendResp">>;
msg_name_to_fqbin('event_store.client.streams.DeleteReq.Options') -> <<"event_store.client.streams.DeleteReq.Options">>;
msg_name_to_fqbin('event_store.client.streams.DeleteReq') -> <<"event_store.client.streams.DeleteReq">>;
msg_name_to_fqbin('event_store.client.streams.DeleteResp.Position') -> <<"event_store.client.streams.DeleteResp.Position">>;
msg_name_to_fqbin('event_store.client.streams.DeleteResp') -> <<"event_store.client.streams.DeleteResp">>;
msg_name_to_fqbin('event_store.client.streams.TombstoneReq.Options') -> <<"event_store.client.streams.TombstoneReq.Options">>;
msg_name_to_fqbin('event_store.client.streams.TombstoneReq') -> <<"event_store.client.streams.TombstoneReq">>;
msg_name_to_fqbin('event_store.client.streams.TombstoneResp.Position') -> <<"event_store.client.streams.TombstoneResp.Position">>;
msg_name_to_fqbin('event_store.client.streams.TombstoneResp') -> <<"event_store.client.streams.TombstoneResp">>;
msg_name_to_fqbin('event_store.client.UUID.Structured') -> <<"event_store.client.UUID.Structured">>;
msg_name_to_fqbin('event_store.client.UUID') -> <<"event_store.client.UUID">>;
msg_name_to_fqbin('event_store.client.Empty') -> <<"event_store.client.Empty">>;
msg_name_to_fqbin('event_store.client.StreamIdentifier') -> <<"event_store.client.StreamIdentifier">>;
msg_name_to_fqbin('event_store.client.AllStreamPosition') -> <<"event_store.client.AllStreamPosition">>;
msg_name_to_fqbin('event_store.client.WrongExpectedVersion') -> <<"event_store.client.WrongExpectedVersion">>;
msg_name_to_fqbin('event_store.client.AccessDenied') -> <<"event_store.client.AccessDenied">>;
msg_name_to_fqbin('event_store.client.StreamDeleted') -> <<"event_store.client.StreamDeleted">>;
msg_name_to_fqbin('event_store.client.Timeout') -> <<"event_store.client.Timeout">>;
msg_name_to_fqbin('event_store.client.Unknown') -> <<"event_store.client.Unknown">>;
msg_name_to_fqbin('event_store.client.InvalidTransaction') -> <<"event_store.client.InvalidTransaction">>;
msg_name_to_fqbin('event_store.client.MaximumAppendSizeExceeded') -> <<"event_store.client.MaximumAppendSizeExceeded">>;
msg_name_to_fqbin('event_store.client.BadRequest') -> <<"event_store.client.BadRequest">>;
msg_name_to_fqbin('google.rpc.Status') -> <<"google.rpc.Status">>;
msg_name_to_fqbin('google.protobuf.Empty') -> <<"google.protobuf.Empty">>;
msg_name_to_fqbin('google.protobuf.Timestamp') -> <<"google.protobuf.Timestamp">>;
msg_name_to_fqbin('google.protobuf.Any') -> <<"google.protobuf.Any">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


fqbin_to_enum_name(<<"event_store.client.streams.ReadReq.Options.ReadDirection">>) -> 'event_store.client.streams.ReadReq.Options.ReadDirection';
fqbin_to_enum_name(<<"google.rpc.Code">>) -> 'google.rpc.Code';
fqbin_to_enum_name(E) -> error({gpb_error, {badenum, E}}).


enum_name_to_fqbin('event_store.client.streams.ReadReq.Options.ReadDirection') -> <<"event_store.client.streams.ReadReq.Options.ReadDirection">>;
enum_name_to_fqbin('google.rpc.Code') -> <<"google.rpc.Code">>;
enum_name_to_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_package_name() -> 'event_store.client.streams'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> true.


source_basename() -> "streams.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["streams.proto", "shared.proto", "status.proto", "empty.proto", "timestamp.proto", "any.proto", "code.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["streams", "shared", "status", "empty", "timestamp", "any", "code"].


get_msg_containment("streams") ->
    ['event_store.client.streams.AppendReq',
     'event_store.client.streams.AppendReq.Options',
     'event_store.client.streams.AppendReq.ProposedMessage',
     'event_store.client.streams.AppendResp',
     'event_store.client.streams.AppendResp.Position',
     'event_store.client.streams.AppendResp.Success',
     'event_store.client.streams.AppendResp.WrongExpectedVersion',
     'event_store.client.streams.BatchAppendReq',
     'event_store.client.streams.BatchAppendReq.Options',
     'event_store.client.streams.BatchAppendReq.ProposedMessage',
     'event_store.client.streams.BatchAppendResp',
     'event_store.client.streams.BatchAppendResp.Success',
     'event_store.client.streams.DeleteReq',
     'event_store.client.streams.DeleteReq.Options',
     'event_store.client.streams.DeleteResp',
     'event_store.client.streams.DeleteResp.Position',
     'event_store.client.streams.ReadReq',
     'event_store.client.streams.ReadReq.Options',
     'event_store.client.streams.ReadReq.Options.AllOptions',
     'event_store.client.streams.ReadReq.Options.FilterOptions',
     'event_store.client.streams.ReadReq.Options.FilterOptions.Expression',
     'event_store.client.streams.ReadReq.Options.Position',
     'event_store.client.streams.ReadReq.Options.StreamOptions',
     'event_store.client.streams.ReadReq.Options.SubscriptionOptions',
     'event_store.client.streams.ReadReq.Options.UUIDOption',
     'event_store.client.streams.ReadResp',
     'event_store.client.streams.ReadResp.Checkpoint',
     'event_store.client.streams.ReadResp.ReadEvent',
     'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.streams.ReadResp.StreamNotFound',
     'event_store.client.streams.ReadResp.SubscriptionConfirmation',
     'event_store.client.streams.TombstoneReq',
     'event_store.client.streams.TombstoneReq.Options',
     'event_store.client.streams.TombstoneResp',
     'event_store.client.streams.TombstoneResp.Position'];
get_msg_containment("shared") ->
    ['event_store.client.AccessDenied',
     'event_store.client.AllStreamPosition',
     'event_store.client.BadRequest',
     'event_store.client.Empty',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.StreamDeleted',
     'event_store.client.StreamIdentifier',
     'event_store.client.Timeout',
     'event_store.client.UUID',
     'event_store.client.UUID.Structured',
     'event_store.client.Unknown',
     'event_store.client.WrongExpectedVersion'];
get_msg_containment("status") -> ['google.rpc.Status'];
get_msg_containment("empty") -> ['google.protobuf.Empty'];
get_msg_containment("timestamp") -> ['google.protobuf.Timestamp'];
get_msg_containment("any") -> ['google.protobuf.Any'];
get_msg_containment("code") -> [];
get_msg_containment(P) -> error({gpb_error, {badproto, P}}).


get_pkg_containment("streams") -> 'event_store.client.streams';
get_pkg_containment("shared") -> 'event_store.client';
get_pkg_containment("status") -> 'google.rpc';
get_pkg_containment("empty") -> 'google.protobuf';
get_pkg_containment("timestamp") -> 'google.protobuf';
get_pkg_containment("any") -> 'google.protobuf';
get_pkg_containment("code") -> 'google.rpc';
get_pkg_containment(P) -> error({gpb_error, {badproto, P}}).


get_service_containment("streams") -> ['event_store.client.streams.Streams'];
get_service_containment("shared") -> [];
get_service_containment("status") -> [];
get_service_containment("empty") -> [];
get_service_containment("timestamp") -> [];
get_service_containment("any") -> [];
get_service_containment("code") -> [];
get_service_containment(P) -> error({gpb_error, {badproto, P}}).


get_rpc_containment("streams") ->
    [{'event_store.client.streams.Streams', 'Read'},
     {'event_store.client.streams.Streams', 'Append'},
     {'event_store.client.streams.Streams', 'Delete'},
     {'event_store.client.streams.Streams', 'Tombstone'},
     {'event_store.client.streams.Streams', 'BatchAppend'}];
get_rpc_containment("shared") -> [];
get_rpc_containment("status") -> [];
get_rpc_containment("empty") -> [];
get_rpc_containment("timestamp") -> [];
get_rpc_containment("any") -> [];
get_rpc_containment("code") -> [];
get_rpc_containment(P) -> error({gpb_error, {badproto, P}}).


get_enum_containment("streams") -> ['event_store.client.streams.ReadReq.Options.ReadDirection'];
get_enum_containment("shared") -> [];
get_enum_containment("status") -> [];
get_enum_containment("empty") -> [];
get_enum_containment("timestamp") -> [];
get_enum_containment("any") -> [];
get_enum_containment("code") -> ['google.rpc.Code'];
get_enum_containment(P) -> error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Timestamp">>) -> "timestamp";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.TombstoneResp">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.DeleteResp">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.BatchAppendResp">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendResp">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.TombstoneReq">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.DeleteReq">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.BatchAppendReq">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendReq">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamIdentifier">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"google.rpc.Status">>) -> "status";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.TombstoneReq.Options">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.SubscriptionOptions">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.StreamOptions">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.FilterOptions">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.AllOptions">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.DeleteReq.Options">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.BatchAppendResp.Success">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.BatchAppendReq.Options">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendResp.Success">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendReq.Options">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID.Structured">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Timeout">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamDeleted">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.MaximumAppendSizeExceeded">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.BadRequest">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AccessDenied">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp.StreamNotFound">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp.ReadEvent.RecordedEvent">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp.ReadEvent">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp.Checkpoint">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.BatchAppendReq.ProposedMessage">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendReq.ProposedMessage">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Any">>) -> "any";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Empty">>) -> "empty";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Empty">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.WrongExpectedVersion">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Unknown">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.InvalidTransaction">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AllStreamPosition">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.TombstoneResp.Position">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadResp.SubscriptionConfirmation">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.UUIDOption">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.Position">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.FilterOptions.Expression">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.DeleteResp.Position">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendResp.WrongExpectedVersion">>) -> "streams";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.streams.AppendResp.Position">>) -> "streams";
get_proto_by_msg_name_as_fqbin(E) -> error({gpb_error, {badmsg, E}}).


get_proto_by_service_name_as_fqbin(<<"event_store.client.streams.Streams">>) -> "streams";
get_proto_by_service_name_as_fqbin(E) -> error({gpb_error, {badservice, E}}).


get_proto_by_enum_name_as_fqbin(<<"google.rpc.Code">>) -> "code";
get_proto_by_enum_name_as_fqbin(<<"event_store.client.streams.ReadReq.Options.ReadDirection">>) -> "streams";
get_proto_by_enum_name_as_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_protos_by_pkg_name_as_fqbin(<<"google.rpc">>) -> ["code", "status"];
get_protos_by_pkg_name_as_fqbin(<<"event_store.client.streams">>) -> ["streams"];
get_protos_by_pkg_name_as_fqbin(<<"event_store.client">>) -> ["shared"];
get_protos_by_pkg_name_as_fqbin(<<"google.protobuf">>) -> ["any", "empty", "timestamp"];
get_protos_by_pkg_name_as_fqbin(E) -> error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.18.0".

gpb_version_as_list() ->
    [4,18,0].

gpb_version_source() ->
    "file".
