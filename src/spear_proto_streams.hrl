%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.17.0

-ifndef(spear_proto_streams).
-define(spear_proto_streams, true).

-define(spear_proto_streams_gpb_version, "4.17.0").

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS_PB_H', true).
-record('event_store.client.streams.ReadReq.Options',
        {stream_option          :: {stream, spear_proto_streams:'event_store.client.streams.ReadReq.Options.StreamOptions'()} | {all, spear_proto_streams:'event_store.client.streams.ReadReq.Options.AllOptions'()} | undefined, % oneof
         read_direction = 'Forwards' :: 'Forwards' | 'Backwards' | integer() | undefined, % = 3, optional, enum event_store.client.streams.ReadReq.Options.ReadDirection
         resolve_links = false  :: boolean() | 0 | 1 | undefined, % = 4, optional
         count_option           :: {count, non_neg_integer()} | {subscription, spear_proto_streams:'event_store.client.streams.ReadReq.Options.SubscriptionOptions'()} | undefined, % oneof
         filter_option          :: {filter, spear_proto_streams:'event_store.client.streams.ReadReq.Options.FilterOptions'()} | {no_filter, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         uuid_option = undefined :: spear_proto_streams:'event_store.client.streams.ReadReq.Options.UUIDOption'() | undefined % = 9, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.UUIDOPTION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.UUIDOPTION_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.UUIDOption',
        {content                :: {structured, spear_proto_streams:'event_store.client.shared.Empty'()} | {string, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.FILTEROPTIONS.EXPRESSION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.FILTEROPTIONS.EXPRESSION_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.FilterOptions.Expression',
        {regex = <<>>           :: unicode:chardata() | undefined, % = 1, optional
         prefix = []            :: [unicode:chardata()] | undefined % = 2, repeated
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.FILTEROPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.FILTEROPTIONS_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.FilterOptions',
        {filter                 :: {stream_identifier, spear_proto_streams:'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'()} | {event_type, spear_proto_streams:'event_store.client.streams.ReadReq.Options.FilterOptions.Expression'()} | undefined, % oneof
         window                 :: {max, non_neg_integer()} | {count, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         checkpointIntervalMultiplier = 0 :: non_neg_integer() | undefined % = 5, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.POSITION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.POSITION_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.Position',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.SUBSCRIPTIONOPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.SUBSCRIPTIONOPTIONS_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.SubscriptionOptions',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.ALLOPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.ALLOPTIONS_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.AllOptions',
        {all_option             :: {position, spear_proto_streams:'event_store.client.streams.ReadReq.Options.Position'()} | {start, spear_proto_streams:'event_store.client.shared.Empty'()} | {'end', spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.STREAMOPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ.OPTIONS.STREAMOPTIONS_PB_H', true).
-record('event_store.client.streams.ReadReq.Options.StreamOptions',
        {stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined, % = 1, optional
         revision_option        :: {revision, non_neg_integer()} | {start, spear_proto_streams:'event_store.client.shared.Empty'()} | {'end', spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READREQ_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READREQ_PB_H', true).
-record('event_store.client.streams.ReadReq',
        {options = undefined    :: spear_proto_streams:'event_store.client.streams.ReadReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP.READEVENT_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP.READEVENT_PB_H', true).
-record('event_store.client.streams.ReadResp.ReadEvent',
        {event = undefined      :: spear_proto_streams:'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'() | undefined, % = 1, optional
         link = undefined       :: spear_proto_streams:'event_store.client.streams.ReadResp.ReadEvent.RecordedEvent'() | undefined, % = 2, optional
         position               :: {commit_position, non_neg_integer()} | {no_position, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP.READEVENT.RECORDEDEVENT_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP.READEVENT.RECORDEDEVENT_PB_H', true).
-record('event_store.client.streams.ReadResp.ReadEvent.RecordedEvent',
        {id = undefined         :: spear_proto_streams:'event_store.client.shared.UUID'() | undefined, % = 1, optional
         stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined, % = 2, optional
         stream_revision = 0    :: non_neg_integer() | undefined, % = 3, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined, % = 4, optional, 64 bits
         commit_position = 0    :: non_neg_integer() | undefined, % = 5, optional, 64 bits
         metadata = []          :: [{unicode:chardata(), unicode:chardata()}] | undefined, % = 6
         custom_metadata = <<>> :: iodata() | undefined, % = 7, optional
         data = <<>>            :: iodata() | undefined % = 8, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP.SUBSCRIPTIONCONFIRMATION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP.SUBSCRIPTIONCONFIRMATION_PB_H', true).
-record('event_store.client.streams.ReadResp.SubscriptionConfirmation',
        {subscription_id = <<>> :: unicode:chardata() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP.CHECKPOINT_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP.CHECKPOINT_PB_H', true).
-record('event_store.client.streams.ReadResp.Checkpoint',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP.STREAMNOTFOUND_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP.STREAMNOTFOUND_PB_H', true).
-record('event_store.client.streams.ReadResp.StreamNotFound',
        {stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.READRESP_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.READRESP_PB_H', true).
-record('event_store.client.streams.ReadResp',
        {content                :: {event, spear_proto_streams:'event_store.client.streams.ReadResp.ReadEvent'()} | {confirmation, spear_proto_streams:'event_store.client.streams.ReadResp.SubscriptionConfirmation'()} | {checkpoint, spear_proto_streams:'event_store.client.streams.ReadResp.Checkpoint'()} | {stream_not_found, spear_proto_streams:'event_store.client.streams.ReadResp.StreamNotFound'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDREQ.OPTIONS_PB_H', true).
-record('event_store.client.streams.AppendReq.Options',
        {stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined, % = 1, optional
         expected_stream_revision :: {revision, non_neg_integer()} | {no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | {any, spear_proto_streams:'event_store.client.shared.Empty'()} | {stream_exists, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDREQ.PROPOSEDMESSAGE_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDREQ.PROPOSEDMESSAGE_PB_H', true).
-record('event_store.client.streams.AppendReq.ProposedMessage',
        {id = undefined         :: spear_proto_streams:'event_store.client.shared.UUID'() | undefined, % = 1, optional
         metadata = []          :: [{unicode:chardata(), unicode:chardata()}] | undefined, % = 2
         custom_metadata = <<>> :: iodata() | undefined, % = 3, optional
         data = <<>>            :: iodata() | undefined % = 4, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDREQ_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDREQ_PB_H', true).
-record('event_store.client.streams.AppendReq',
        {content                :: {options, spear_proto_streams:'event_store.client.streams.AppendReq.Options'()} | {proposed_message, spear_proto_streams:'event_store.client.streams.AppendReq.ProposedMessage'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.POSITION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.POSITION_PB_H', true).
-record('event_store.client.streams.AppendResp.Position',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.SUCCESS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.SUCCESS_PB_H', true).
-record('event_store.client.streams.AppendResp.Success',
        {current_revision_option :: {current_revision, non_neg_integer()} | {no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         position_option        :: {position, spear_proto_streams:'event_store.client.streams.AppendResp.Position'()} | {no_position, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.WRONGEXPECTEDVERSION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDRESP.WRONGEXPECTEDVERSION_PB_H', true).
-record('event_store.client.streams.AppendResp.WrongExpectedVersion',
        {current_revision_option_20_6_0 :: {current_revision_20_6_0, non_neg_integer()} | {no_stream_20_6_0, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         expected_revision_option_20_6_0 :: {expected_revision_20_6_0, non_neg_integer()} | {any_20_6_0, spear_proto_streams:'event_store.client.shared.Empty'()} | {stream_exists_20_6_0, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         current_revision_option :: {current_revision, non_neg_integer()} | {current_no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined, % oneof
         expected_revision_option :: {expected_revision, non_neg_integer()} | {expected_any, spear_proto_streams:'event_store.client.shared.Empty'()} | {expected_stream_exists, spear_proto_streams:'event_store.client.shared.Empty'()} | {expected_no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.APPENDRESP_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.APPENDRESP_PB_H', true).
-record('event_store.client.streams.AppendResp',
        {result                 :: {success, spear_proto_streams:'event_store.client.streams.AppendResp.Success'()} | {wrong_expected_version, spear_proto_streams:'event_store.client.streams.AppendResp.WrongExpectedVersion'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.DELETEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.DELETEREQ.OPTIONS_PB_H', true).
-record('event_store.client.streams.DeleteReq.Options',
        {stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined, % = 1, optional
         expected_stream_revision :: {revision, non_neg_integer()} | {no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | {any, spear_proto_streams:'event_store.client.shared.Empty'()} | {stream_exists, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.DELETEREQ_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.DELETEREQ_PB_H', true).
-record('event_store.client.streams.DeleteReq',
        {options = undefined    :: spear_proto_streams:'event_store.client.streams.DeleteReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.DELETERESP.POSITION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.DELETERESP.POSITION_PB_H', true).
-record('event_store.client.streams.DeleteResp.Position',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.DELETERESP_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.DELETERESP_PB_H', true).
-record('event_store.client.streams.DeleteResp',
        {position_option        :: {position, spear_proto_streams:'event_store.client.streams.DeleteResp.Position'()} | {no_position, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.TOMBSTONEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.TOMBSTONEREQ.OPTIONS_PB_H', true).
-record('event_store.client.streams.TombstoneReq.Options',
        {stream_identifier = undefined :: spear_proto_streams:'event_store.client.shared.StreamIdentifier'() | undefined, % = 1, optional
         expected_stream_revision :: {revision, non_neg_integer()} | {no_stream, spear_proto_streams:'event_store.client.shared.Empty'()} | {any, spear_proto_streams:'event_store.client.shared.Empty'()} | {stream_exists, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.TOMBSTONEREQ_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.TOMBSTONEREQ_PB_H', true).
-record('event_store.client.streams.TombstoneReq',
        {options = undefined    :: spear_proto_streams:'event_store.client.streams.TombstoneReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.TOMBSTONERESP.POSITION_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.TOMBSTONERESP.POSITION_PB_H', true).
-record('event_store.client.streams.TombstoneResp.Position',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMS.TOMBSTONERESP_PB_H').
-define('EVENT_STORE.CLIENT.STREAMS.TOMBSTONERESP_PB_H', true).
-record('event_store.client.streams.TombstoneResp',
        {position_option        :: {position, spear_proto_streams:'event_store.client.streams.TombstoneResp.Position'()} | {no_position, spear_proto_streams:'event_store.client.shared.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H', true).
-record('event_store.client.shared.UUID.Structured',
        {most_significant_bits = 0 :: integer() | undefined, % = 1, optional, 64 bits
         least_significant_bits = 0 :: integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID_PB_H', true).
-record('event_store.client.shared.UUID',
        {value                  :: {structured, spear_proto_streams:'event_store.client.shared.UUID.Structured'()} | {string, unicode:chardata()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H', true).
-record('event_store.client.shared.Empty',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H', true).
-record('event_store.client.shared.StreamIdentifier',
        {streamName = <<>>      :: iodata() | undefined % = 3, optional
        }).
-endif.

-endif.
