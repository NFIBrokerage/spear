%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.18.0

-ifndef(spear_proto_gossip).
-define(spear_proto_gossip, true).

-define(spear_proto_gossip_gpb_version, "4.18.0").

-ifndef('EVENT_STORE.CLIENT.GOSSIP.CLUSTERINFO_PB_H').
-define('EVENT_STORE.CLIENT.GOSSIP.CLUSTERINFO_PB_H', true).
-record('event_store.client.gossip.ClusterInfo',
        {members = []           :: [spear_proto_gossip:'event_store.client.gossip.MemberInfo'()] | undefined % = 1, repeated
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.GOSSIP.ENDPOINT_PB_H').
-define('EVENT_STORE.CLIENT.GOSSIP.ENDPOINT_PB_H', true).
-record('event_store.client.gossip.EndPoint',
        {address = <<>>         :: unicode:chardata() | undefined, % = 1, optional
         port = 0               :: non_neg_integer() | undefined % = 2, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.GOSSIP.MEMBERINFO_PB_H').
-define('EVENT_STORE.CLIENT.GOSSIP.MEMBERINFO_PB_H', true).
-record('event_store.client.gossip.MemberInfo',
        {instance_id = undefined :: spear_proto_gossip:'event_store.client.shared.UUID'() | undefined, % = 1, optional
         time_stamp = 0         :: integer() | undefined, % = 2, optional, 64 bits
         state = 'Initializing' :: 'Initializing' | 'DiscoverLeader' | 'Unknown' | 'PreReplica' | 'CatchingUp' | 'Clone' | 'Follower' | 'PreLeader' | 'Leader' | 'Manager' | 'ShuttingDown' | 'Shutdown' | 'ReadOnlyLeaderless' | 'PreReadOnlyReplica' | 'ReadOnlyReplica' | 'ResigningLeader' | integer() | undefined, % = 3, optional, enum event_store.client.gossip.MemberInfo.VNodeState
         is_alive = false       :: boolean() | 0 | 1 | undefined, % = 4, optional
         http_end_point = undefined :: spear_proto_gossip:'event_store.client.gossip.EndPoint'() | undefined % = 5, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H', true).
-record('event_store.client.shared.UUID.Structured',
        {most_significant_bits = 0 :: integer() | undefined, % = 1, optional, 64 bits
         least_significant_bits = 0 :: integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID_PB_H', true).
-record('event_store.client.shared.UUID',
        {value                  :: {structured, spear_proto_gossip:'event_store.client.shared.UUID.Structured'()} | {string, unicode:chardata()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H', true).
-record('event_store.client.shared.Empty',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H', true).
-record('event_store.client.shared.StreamIdentifier',
        {streamName = <<>>      :: iodata() | undefined % = 3, optional
        }).
-endif.

-endif.
