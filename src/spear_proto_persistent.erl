%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.18.0
%% Version source: file
-module(spear_proto_persistent).

-export([encode_msg/1, encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3, merge_msgs/4]).
-export([verify_msg/1, verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export(['enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'/1, 'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'/1]).
-export(['enum_symbol_by_value_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'/1, 'enum_value_by_symbol_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'/1]).
-export(['enum_symbol_by_value_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'/1, 'enum_value_by_symbol_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).
-export([gpb_version_source/0]).

-include("spear_proto_persistent.hrl").
-include("gpb.hrl").

%% enumerated types
-type 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action'() :: 'Unknown' | 'Park' | 'Retry' | 'Skip' | 'Stop'.
-type 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'() :: 'DispatchToSingle' | 'RoundRobin' | 'Pinned'.
-type 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'() :: 'DispatchToSingle' | 'RoundRobin' | 'Pinned'.
-export_type(['event_store.client.persistent_subscriptions.ReadReq.Nack.Action'/0, 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'/0, 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'/0]).

%% message types
-type 'event_store.client.persistent_subscriptions.ReadReq.Options'() :: #'event_store.client.persistent_subscriptions.ReadReq.Options'{}.

-type 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'() :: #'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{}.

-type 'event_store.client.persistent_subscriptions.ReadReq.Ack'() :: #'event_store.client.persistent_subscriptions.ReadReq.Ack'{}.

-type 'event_store.client.persistent_subscriptions.ReadReq.Nack'() :: #'event_store.client.persistent_subscriptions.ReadReq.Nack'{}.

-type 'event_store.client.persistent_subscriptions.ReadReq'() :: #'event_store.client.persistent_subscriptions.ReadReq'{}.

-type 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'() :: #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{}.

-type 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'() :: #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{}.

-type 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'() :: #'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{}.

-type 'event_store.client.persistent_subscriptions.ReadResp'() :: #'event_store.client.persistent_subscriptions.ReadResp'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.Options'() :: #'event_store.client.persistent_subscriptions.CreateReq.Options'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'() :: #'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'() :: #'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'() :: #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'() :: #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.Position'() :: #'event_store.client.persistent_subscriptions.CreateReq.Position'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq.Settings'() :: #'event_store.client.persistent_subscriptions.CreateReq.Settings'{}.

-type 'event_store.client.persistent_subscriptions.CreateReq'() :: #'event_store.client.persistent_subscriptions.CreateReq'{}.

-type 'event_store.client.persistent_subscriptions.CreateResp'() :: #'event_store.client.persistent_subscriptions.CreateResp'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq.Options'() :: #'event_store.client.persistent_subscriptions.UpdateReq.Options'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'() :: #'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'() :: #'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq.Position'() :: #'event_store.client.persistent_subscriptions.UpdateReq.Position'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq.Settings'() :: #'event_store.client.persistent_subscriptions.UpdateReq.Settings'{}.

-type 'event_store.client.persistent_subscriptions.UpdateReq'() :: #'event_store.client.persistent_subscriptions.UpdateReq'{}.

-type 'event_store.client.persistent_subscriptions.UpdateResp'() :: #'event_store.client.persistent_subscriptions.UpdateResp'{}.

-type 'event_store.client.persistent_subscriptions.DeleteReq.Options'() :: #'event_store.client.persistent_subscriptions.DeleteReq.Options'{}.

-type 'event_store.client.persistent_subscriptions.DeleteReq'() :: #'event_store.client.persistent_subscriptions.DeleteReq'{}.

-type 'event_store.client.persistent_subscriptions.DeleteResp'() :: #'event_store.client.persistent_subscriptions.DeleteResp'{}.

-type 'event_store.client.UUID.Structured'() :: #'event_store.client.UUID.Structured'{}.

-type 'event_store.client.UUID'() :: #'event_store.client.UUID'{}.

-type 'event_store.client.Empty'() :: #'event_store.client.Empty'{}.

-type 'event_store.client.StreamIdentifier'() :: #'event_store.client.StreamIdentifier'{}.

-type 'event_store.client.AllStreamPosition'() :: #'event_store.client.AllStreamPosition'{}.

-type 'event_store.client.WrongExpectedVersion'() :: #'event_store.client.WrongExpectedVersion'{}.

-type 'event_store.client.AccessDenied'() :: #'event_store.client.AccessDenied'{}.

-type 'event_store.client.StreamDeleted'() :: #'event_store.client.StreamDeleted'{}.

-type 'event_store.client.Timeout'() :: #'event_store.client.Timeout'{}.

-type 'event_store.client.Unknown'() :: #'event_store.client.Unknown'{}.

-type 'event_store.client.InvalidTransaction'() :: #'event_store.client.InvalidTransaction'{}.

-type 'event_store.client.MaximumAppendSizeExceeded'() :: #'event_store.client.MaximumAppendSizeExceeded'{}.

-type 'event_store.client.BadRequest'() :: #'event_store.client.BadRequest'{}.

-type 'google.protobuf.Empty'() :: #'google.protobuf.Empty'{}.

-export_type(['event_store.client.persistent_subscriptions.ReadReq.Options'/0, 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'/0, 'event_store.client.persistent_subscriptions.ReadReq.Ack'/0, 'event_store.client.persistent_subscriptions.ReadReq.Nack'/0, 'event_store.client.persistent_subscriptions.ReadReq'/0, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'/0, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'/0, 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'/0, 'event_store.client.persistent_subscriptions.ReadResp'/0, 'event_store.client.persistent_subscriptions.CreateReq.Options'/0, 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'/0, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'/0, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'/0, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'/0, 'event_store.client.persistent_subscriptions.CreateReq.Position'/0, 'event_store.client.persistent_subscriptions.CreateReq.Settings'/0, 'event_store.client.persistent_subscriptions.CreateReq'/0, 'event_store.client.persistent_subscriptions.CreateResp'/0, 'event_store.client.persistent_subscriptions.UpdateReq.Options'/0, 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'/0, 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'/0, 'event_store.client.persistent_subscriptions.UpdateReq.Position'/0, 'event_store.client.persistent_subscriptions.UpdateReq.Settings'/0, 'event_store.client.persistent_subscriptions.UpdateReq'/0, 'event_store.client.persistent_subscriptions.UpdateResp'/0, 'event_store.client.persistent_subscriptions.DeleteReq.Options'/0, 'event_store.client.persistent_subscriptions.DeleteReq'/0, 'event_store.client.persistent_subscriptions.DeleteResp'/0, 'event_store.client.UUID.Structured'/0, 'event_store.client.UUID'/0, 'event_store.client.Empty'/0, 'event_store.client.StreamIdentifier'/0, 'event_store.client.AllStreamPosition'/0, 'event_store.client.WrongExpectedVersion'/0, 'event_store.client.AccessDenied'/0, 'event_store.client.StreamDeleted'/0, 'event_store.client.Timeout'/0, 'event_store.client.Unknown'/0, 'event_store.client.InvalidTransaction'/0, 'event_store.client.MaximumAppendSizeExceeded'/0, 'event_store.client.BadRequest'/0, 'google.protobuf.Empty'/0]).
-type '$msg_name'() :: 'event_store.client.persistent_subscriptions.ReadReq.Options' | 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption' | 'event_store.client.persistent_subscriptions.ReadReq.Ack' | 'event_store.client.persistent_subscriptions.ReadReq.Nack' | 'event_store.client.persistent_subscriptions.ReadReq' | 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent' | 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent' | 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation' | 'event_store.client.persistent_subscriptions.ReadResp' | 'event_store.client.persistent_subscriptions.CreateReq.Options' | 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions' | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions' | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression' | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions' | 'event_store.client.persistent_subscriptions.CreateReq.Position' | 'event_store.client.persistent_subscriptions.CreateReq.Settings' | 'event_store.client.persistent_subscriptions.CreateReq' | 'event_store.client.persistent_subscriptions.CreateResp' | 'event_store.client.persistent_subscriptions.UpdateReq.Options' | 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions' | 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions' | 'event_store.client.persistent_subscriptions.UpdateReq.Position' | 'event_store.client.persistent_subscriptions.UpdateReq.Settings' | 'event_store.client.persistent_subscriptions.UpdateReq' | 'event_store.client.persistent_subscriptions.UpdateResp' | 'event_store.client.persistent_subscriptions.DeleteReq.Options' | 'event_store.client.persistent_subscriptions.DeleteReq' | 'event_store.client.persistent_subscriptions.DeleteResp' | 'event_store.client.UUID.Structured' | 'event_store.client.UUID' | 'event_store.client.Empty' | 'event_store.client.StreamIdentifier' | 'event_store.client.AllStreamPosition' | 'event_store.client.WrongExpectedVersion' | 'event_store.client.AccessDenied' | 'event_store.client.StreamDeleted' | 'event_store.client.Timeout' | 'event_store.client.Unknown' | 'event_store.client.InvalidTransaction' | 'event_store.client.MaximumAppendSizeExceeded' | 'event_store.client.BadRequest' | 'google.protobuf.Empty'.
-type '$msg'() :: 'event_store.client.persistent_subscriptions.ReadReq.Options'() | 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'() | 'event_store.client.persistent_subscriptions.ReadReq.Ack'() | 'event_store.client.persistent_subscriptions.ReadReq.Nack'() | 'event_store.client.persistent_subscriptions.ReadReq'() | 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'() | 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'() | 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'() | 'event_store.client.persistent_subscriptions.ReadResp'() | 'event_store.client.persistent_subscriptions.CreateReq.Options'() | 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'() | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'() | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'() | 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'() | 'event_store.client.persistent_subscriptions.CreateReq.Position'() | 'event_store.client.persistent_subscriptions.CreateReq.Settings'() | 'event_store.client.persistent_subscriptions.CreateReq'() | 'event_store.client.persistent_subscriptions.CreateResp'() | 'event_store.client.persistent_subscriptions.UpdateReq.Options'() | 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'() | 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'() | 'event_store.client.persistent_subscriptions.UpdateReq.Position'() | 'event_store.client.persistent_subscriptions.UpdateReq.Settings'() | 'event_store.client.persistent_subscriptions.UpdateReq'() | 'event_store.client.persistent_subscriptions.UpdateResp'() | 'event_store.client.persistent_subscriptions.DeleteReq.Options'() | 'event_store.client.persistent_subscriptions.DeleteReq'() | 'event_store.client.persistent_subscriptions.DeleteResp'() | 'event_store.client.UUID.Structured'() | 'event_store.client.UUID'() | 'event_store.client.Empty'() | 'event_store.client.StreamIdentifier'() | 'event_store.client.AllStreamPosition'() | 'event_store.client.WrongExpectedVersion'() | 'event_store.client.AccessDenied'() | 'event_store.client.StreamDeleted'() | 'event_store.client.Timeout'() | 'event_store.client.Unknown'() | 'event_store.client.InvalidTransaction'() | 'event_store.client.MaximumAppendSizeExceeded'() | 'event_store.client.BadRequest'() | 'google.protobuf.Empty'().
-export_type(['$msg_name'/0, '$msg'/0]).

-record('map<string,string>',{key, value}).
-dialyzer({no_underspecs, encode_msg/1}).
-spec encode_msg('$msg'()) -> binary().
encode_msg(Msg) when tuple_size(Msg) >= 1 -> encode_msg(Msg, element(1, Msg), []).

-dialyzer({no_underspecs, encode_msg/2}).
-spec encode_msg('$msg'(), '$msg_name'() | list()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) -> encode_msg(Msg, MsgName, []);
encode_msg(Msg, Opts) when tuple_size(Msg) >= 1, is_list(Opts) -> encode_msg(Msg, element(1, Msg), Opts).

-dialyzer({no_underspecs, encode_msg/3}).
-spec encode_msg('$msg'(), '$msg_name'(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
        true -> verify_msg(Msg, MsgName, Opts);
        false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.persistent_subscriptions.ReadReq.Options' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Ack' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Nack' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp' -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Options' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.StreamOptions' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Position' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Settings' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.CreateResp' -> 'encode_msg_event_store.client.persistent_subscriptions.CreateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Options' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.AllOptions' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Position' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Settings' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.UpdateResp' -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq.Options' -> 'encode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq' -> 'encode_msg_event_store.client.persistent_subscriptions.DeleteReq'(id(Msg, TrUserData), TrUserData);
        'event_store.client.persistent_subscriptions.DeleteResp' -> 'encode_msg_event_store.client.persistent_subscriptions.DeleteResp'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID.Structured' -> 'encode_msg_event_store.client.UUID.Structured'(id(Msg, TrUserData), TrUserData);
        'event_store.client.UUID' -> 'encode_msg_event_store.client.UUID'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Empty' -> 'encode_msg_event_store.client.Empty'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamIdentifier' -> 'encode_msg_event_store.client.StreamIdentifier'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AllStreamPosition' -> 'encode_msg_event_store.client.AllStreamPosition'(id(Msg, TrUserData), TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'encode_msg_event_store.client.WrongExpectedVersion'(id(Msg, TrUserData), TrUserData);
        'event_store.client.AccessDenied' -> 'encode_msg_event_store.client.AccessDenied'(id(Msg, TrUserData), TrUserData);
        'event_store.client.StreamDeleted' -> 'encode_msg_event_store.client.StreamDeleted'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Timeout' -> 'encode_msg_event_store.client.Timeout'(id(Msg, TrUserData), TrUserData);
        'event_store.client.Unknown' -> 'encode_msg_event_store.client.Unknown'(id(Msg, TrUserData), TrUserData);
        'event_store.client.InvalidTransaction' -> 'encode_msg_event_store.client.InvalidTransaction'(id(Msg, TrUserData), TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(id(Msg, TrUserData), TrUserData);
        'event_store.client.BadRequest' -> 'encode_msg_event_store.client.BadRequest'(id(Msg, TrUserData), TrUserData);
        'google.protobuf.Empty' -> 'encode_msg_google.protobuf.Empty'(id(Msg, TrUserData), TrUserData)
    end.


'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(#'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = F1, group_name = F2, buffer_size = F3, uuid_option = F4}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream_identifier, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_all'(TrTF1, <<Bin/binary, 42>>, TrUserData) end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    case is_empty_string(TrF2) of
                        true -> B1;
                        false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= 0 -> B2;
                       true -> e_type_int32(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               if TrF4 =:= undefined -> B3;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(TrF4, <<B3/binary, 34>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(#'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {structured, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {string, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(#'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = F1, ids = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case iolist_size(TrF1) of
                        0 -> Bin;
                        _ -> e_type_bytes(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    begin
        TrF2 = id(F2, TrUserData),
        if TrF2 == [] -> B1;
           true -> 'e_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(TrF2, B1, TrUserData)
        end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(#'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = F1, ids = F2, action = F3, reason = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case iolist_size(TrF1) of
                        0 -> Bin;
                        _ -> e_type_bytes(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = begin
             TrF2 = id(F2, TrUserData),
             if TrF2 == [] -> B1;
                true -> 'e_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(TrF2, B1, TrUserData)
             end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= 'Unknown'; TrF3 =:= 0 -> B2;
                       true -> 'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               case is_empty_string(TrF4) of
                   true -> B3;
                   false -> e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadReq'(#'event_store.client.persistent_subscriptions.ReadReq'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {options, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq_options'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {ack, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq_ack'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
               {nack, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadReq_nack'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = F1, link = F2, position = F3, count = F4}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 =:= undefined -> B2;
            true ->
                case id(F3, TrUserData) of
                    {commit_position, TF3} -> begin TrTF3 = id(TF3, TrUserData), e_varint(TrTF3, <<B2/binary, 24>>, TrUserData) end;
                    {no_position, TF3} -> begin TrTF3 = id(TF3, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(TrTF3, <<B2/binary, 34>>, TrUserData) end
                end
         end,
    if F4 =:= undefined -> B3;
       true ->
           case id(F4, TrUserData) of
               {retry_count, TF4} -> begin TrTF4 = id(TF4, TrUserData), e_type_int32(TrTF4, <<B3/binary, 40>>, TrUserData) end;
               {no_retry_count, TF4} -> begin TrTF4 = id(TF4, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(TrTF4, <<B3/binary, 50>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = F1, stream_identifier = F2, stream_revision = F3, prepare_position = F4,
                                                                                                                                                                          commit_position = F5, metadata = F6, custom_metadata = F7, data = F8},
                                                                                          Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(TrF2, <<B1/binary, 18>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= 0 -> B2;
                       true -> e_varint(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    if TrF4 =:= 0 -> B3;
                       true -> e_varint(TrF4, <<B3/binary, 32>>, TrUserData)
                    end
                end
         end,
    B5 = if F5 == undefined -> B4;
            true ->
                begin
                    TrF5 = id(F5, TrUserData),
                    if TrF5 =:= 0 -> B4;
                       true -> e_varint(TrF5, <<B4/binary, 40>>, TrUserData)
                    end
                end
         end,
    B6 = begin
             TrF6 = id(F6, TrUserData),
             if TrF6 == [] -> B5;
                true -> 'e_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(TrF6, B5, TrUserData)
             end
         end,
    B7 = if F7 == undefined -> B6;
            true ->
                begin
                    TrF7 = id(F7, TrUserData),
                    case iolist_size(TrF7) of
                        0 -> B6;
                        _ -> e_type_bytes(TrF7, <<B6/binary, 58>>, TrUserData)
                    end
                end
         end,
    if F8 == undefined -> B7;
       true ->
           begin
               TrF8 = id(F8, TrUserData),
               case iolist_size(TrF8) of
                   0 -> B7;
                   _ -> e_type_bytes(TrF8, <<B7/binary, 66>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(#'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.ReadResp'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.ReadResp'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.ReadResp'(#'event_store.client.persistent_subscriptions.ReadResp'{content = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {event, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadResp_event'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {subscription_confirmation, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(#'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = F1, stream_identifier = F2, group_name = F3, settings = F4}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(TrTF1, <<Bin/binary, 34>>, TrUserData) end;
                    {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_all'(TrTF1, <<Bin/binary, 42>>, TrUserData) end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(TrF2, <<B1/binary, 10>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case is_empty_string(TrF3) of
                        true -> B2;
                        false -> e_type_string(TrF3, <<B2/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               if TrF4 =:= undefined -> B3;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(TrF4, <<B3/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = F1, revision_option = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {start, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {'end', TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(TrTF2, <<B1/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = F1, filter_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {start, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
                    {'end', TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {filter, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {no_filter, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(TrTF2, <<B1/binary, 42>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = F1, prefix = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    case is_empty_string(TrF1) of
                        true -> Bin;
                        false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    begin
        TrF2 = id(F2, TrUserData),
        if TrF2 == [] -> B1;
           true -> 'e_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(TrF2, B1, TrUserData)
        end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = F1, window = F2, checkpointIntervalMultiplier = F3}, Bin,
                                                                                            TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream_identifier, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {event_type, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    B2 = if F2 =:= undefined -> B1;
            true ->
                case id(F2, TrUserData) of
                    {max, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
                    {count, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(TrTF2, <<B1/binary, 34>>, TrUserData) end
                end
         end,
    if F3 == undefined -> B2;
       true ->
           begin
               TrF3 = id(F3, TrUserData),
               if TrF3 =:= 0 -> B2;
                  true -> e_varint(TrF3, <<B2/binary, 40>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(#'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(#'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = F1, revision = F2, extra_statistics = F3, max_retry_count = F4, min_checkpoint_count = F5,
                                                                                                                                              max_checkpoint_count = F6, max_subscriber_count = F7, live_buffer_size = F8, read_batch_size = F9, history_buffer_size = F10, named_consumer_strategy = F11,
                                                                                                                                              message_timeout = F12, checkpoint_after = F13},
                                                                            Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= false -> Bin;
                       true -> e_type_bool(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= 0 -> B1;
                       true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= false -> B2;
                       true -> e_type_bool(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    if TrF4 =:= 0 -> B3;
                       true -> e_type_int32(TrF4, <<B3/binary, 40>>, TrUserData)
                    end
                end
         end,
    B5 = if F5 == undefined -> B4;
            true ->
                begin
                    TrF5 = id(F5, TrUserData),
                    if TrF5 =:= 0 -> B4;
                       true -> e_type_int32(TrF5, <<B4/binary, 56>>, TrUserData)
                    end
                end
         end,
    B6 = if F6 == undefined -> B5;
            true ->
                begin
                    TrF6 = id(F6, TrUserData),
                    if TrF6 =:= 0 -> B5;
                       true -> e_type_int32(TrF6, <<B5/binary, 64>>, TrUserData)
                    end
                end
         end,
    B7 = if F7 == undefined -> B6;
            true ->
                begin
                    TrF7 = id(F7, TrUserData),
                    if TrF7 =:= 0 -> B6;
                       true -> e_type_int32(TrF7, <<B6/binary, 72>>, TrUserData)
                    end
                end
         end,
    B8 = if F8 == undefined -> B7;
            true ->
                begin
                    TrF8 = id(F8, TrUserData),
                    if TrF8 =:= 0 -> B7;
                       true -> e_type_int32(TrF8, <<B7/binary, 80>>, TrUserData)
                    end
                end
         end,
    B9 = if F9 == undefined -> B8;
            true ->
                begin
                    TrF9 = id(F9, TrUserData),
                    if TrF9 =:= 0 -> B8;
                       true -> e_type_int32(TrF9, <<B8/binary, 88>>, TrUserData)
                    end
                end
         end,
    B10 = if F10 == undefined -> B9;
             true ->
                 begin
                     TrF10 = id(F10, TrUserData),
                     if TrF10 =:= 0 -> B9;
                        true -> e_type_int32(TrF10, <<B9/binary, 96>>, TrUserData)
                     end
                 end
          end,
    B11 = if F11 == undefined -> B10;
             true ->
                 begin
                     TrF11 = id(F11, TrUserData),
                     if TrF11 =:= 'DispatchToSingle'; TrF11 =:= 0 -> B10;
                        true -> 'e_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(TrF11, <<B10/binary, 104>>, TrUserData)
                     end
                 end
          end,
    B12 = if F12 =:= undefined -> B11;
             true ->
                 case id(F12, TrUserData) of
                     {message_timeout_ticks, TF12} -> begin TrTF12 = id(TF12, TrUserData), e_type_int64(TrTF12, <<B11/binary, 32>>, TrUserData) end;
                     {message_timeout_ms, TF12} -> begin TrTF12 = id(TF12, TrUserData), e_type_int32(TrTF12, <<B11/binary, 112>>, TrUserData) end
                 end
          end,
    if F13 =:= undefined -> B12;
       true ->
           case id(F13, TrUserData) of
               {checkpoint_after_ticks, TF13} -> begin TrTF13 = id(TF13, TrUserData), e_type_int64(TrTF13, <<B12/binary, 48>>, TrUserData) end;
               {checkpoint_after_ms, TF13} -> begin TrTF13 = id(TF13, TrUserData), e_type_int32(TrTF13, <<B12/binary, 120>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.CreateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.CreateReq'(#'event_store.client.persistent_subscriptions.CreateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.CreateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.CreateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(#'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = F1, stream_identifier = F2, group_name = F3, settings = F4}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(TrTF1, <<Bin/binary, 34>>, TrUserData) end;
                    {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(TrTF1, <<Bin/binary, 42>>, TrUserData) end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= undefined -> B1;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(TrF2, <<B1/binary, 10>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    case is_empty_string(TrF3) of
                        true -> B2;
                        false -> e_type_string(TrF3, <<B2/binary, 18>>, TrUserData)
                    end
                end
         end,
    if F4 == undefined -> B3;
       true ->
           begin
               TrF4 = id(F4, TrUserData),
               if TrF4 =:= undefined -> B3;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(TrF4, <<B3/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = F1, revision_option = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= undefined -> Bin;
                       true -> 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
                    end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {revision, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 16>>, TrUserData) end;
               {start, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(TrTF2, <<B1/binary, 26>>, TrUserData) end;
               {'end', TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(TrTF2, <<B1/binary, 34>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {position, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {start, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(TrTF1, <<Bin/binary, 18>>, TrUserData) end;
               {'end', TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(#'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(#'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = F1, revision = F2, extra_statistics = F3, max_retry_count = F4, min_checkpoint_count = F5,
                                                                                                                                              max_checkpoint_count = F6, max_subscriber_count = F7, live_buffer_size = F8, read_batch_size = F9, history_buffer_size = F10, named_consumer_strategy = F11,
                                                                                                                                              message_timeout = F12, checkpoint_after = F13},
                                                                            Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= false -> Bin;
                       true -> e_type_bool(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    B2 = if F2 == undefined -> B1;
            true ->
                begin
                    TrF2 = id(F2, TrUserData),
                    if TrF2 =:= 0 -> B1;
                       true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
                    end
                end
         end,
    B3 = if F3 == undefined -> B2;
            true ->
                begin
                    TrF3 = id(F3, TrUserData),
                    if TrF3 =:= false -> B2;
                       true -> e_type_bool(TrF3, <<B2/binary, 24>>, TrUserData)
                    end
                end
         end,
    B4 = if F4 == undefined -> B3;
            true ->
                begin
                    TrF4 = id(F4, TrUserData),
                    if TrF4 =:= 0 -> B3;
                       true -> e_type_int32(TrF4, <<B3/binary, 40>>, TrUserData)
                    end
                end
         end,
    B5 = if F5 == undefined -> B4;
            true ->
                begin
                    TrF5 = id(F5, TrUserData),
                    if TrF5 =:= 0 -> B4;
                       true -> e_type_int32(TrF5, <<B4/binary, 56>>, TrUserData)
                    end
                end
         end,
    B6 = if F6 == undefined -> B5;
            true ->
                begin
                    TrF6 = id(F6, TrUserData),
                    if TrF6 =:= 0 -> B5;
                       true -> e_type_int32(TrF6, <<B5/binary, 64>>, TrUserData)
                    end
                end
         end,
    B7 = if F7 == undefined -> B6;
            true ->
                begin
                    TrF7 = id(F7, TrUserData),
                    if TrF7 =:= 0 -> B6;
                       true -> e_type_int32(TrF7, <<B6/binary, 72>>, TrUserData)
                    end
                end
         end,
    B8 = if F8 == undefined -> B7;
            true ->
                begin
                    TrF8 = id(F8, TrUserData),
                    if TrF8 =:= 0 -> B7;
                       true -> e_type_int32(TrF8, <<B7/binary, 80>>, TrUserData)
                    end
                end
         end,
    B9 = if F9 == undefined -> B8;
            true ->
                begin
                    TrF9 = id(F9, TrUserData),
                    if TrF9 =:= 0 -> B8;
                       true -> e_type_int32(TrF9, <<B8/binary, 88>>, TrUserData)
                    end
                end
         end,
    B10 = if F10 == undefined -> B9;
             true ->
                 begin
                     TrF10 = id(F10, TrUserData),
                     if TrF10 =:= 0 -> B9;
                        true -> e_type_int32(TrF10, <<B9/binary, 96>>, TrUserData)
                     end
                 end
          end,
    B11 = if F11 == undefined -> B10;
             true ->
                 begin
                     TrF11 = id(F11, TrUserData),
                     if TrF11 =:= 'DispatchToSingle'; TrF11 =:= 0 -> B10;
                        true -> 'e_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(TrF11, <<B10/binary, 104>>, TrUserData)
                     end
                 end
          end,
    B12 = if F12 =:= undefined -> B11;
             true ->
                 case id(F12, TrUserData) of
                     {message_timeout_ticks, TF12} -> begin TrTF12 = id(TF12, TrUserData), e_type_int64(TrTF12, <<B11/binary, 32>>, TrUserData) end;
                     {message_timeout_ms, TF12} -> begin TrTF12 = id(TF12, TrUserData), e_type_int32(TrTF12, <<B11/binary, 112>>, TrUserData) end
                 end
          end,
    if F13 =:= undefined -> B12;
       true ->
           case id(F13, TrUserData) of
               {checkpoint_after_ticks, TF13} -> begin TrTF13 = id(TF13, TrUserData), e_type_int64(TrTF13, <<B12/binary, 48>>, TrUserData) end;
               {checkpoint_after_ms, TF13} -> begin TrTF13 = id(TF13, TrUserData), e_type_int32(TrTF13, <<B12/binary, 120>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.UpdateReq'(#'event_store.client.persistent_subscriptions.UpdateReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.UpdateReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.UpdateResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(#'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = F1, group_name = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {stream_identifier, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
                    {all, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(TrTF1, <<Bin/binary, 26>>, TrUserData) end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               case is_empty_string(TrF2) of
                   true -> B1;
                   false -> e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.DeleteReq'(Msg, TrUserData) -> 'encode_msg_event_store.client.persistent_subscriptions.DeleteReq'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.persistent_subscriptions.DeleteReq'(#'event_store.client.persistent_subscriptions.DeleteReq'{options = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.persistent_subscriptions.DeleteReq_options'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.persistent_subscriptions.DeleteResp'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.UUID.Structured'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_type_int64(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_type_int64(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.UUID'(Msg, TrUserData) -> 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
           case id(F1, TrUserData) of
               {structured, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.UUID_structured'(TrTF1, <<Bin/binary, 10>>, TrUserData) end;
               {string, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_type_string(TrTF1, <<Bin/binary, 18>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.Empty'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamIdentifier'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case iolist_size(TrF1) of
                   0 -> Bin;
                   _ -> e_type_bytes(TrF1, <<Bin/binary, 26>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.AllStreamPosition'(Msg, TrUserData) -> 'encode_msg_event_store.client.AllStreamPosition'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
            true ->
                begin
                    TrF1 = id(F1, TrUserData),
                    if TrF1 =:= 0 -> Bin;
                       true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
                    end
                end
         end,
    if F2 == undefined -> B1;
       true ->
           begin
               TrF2 = id(F2, TrUserData),
               if TrF2 =:= 0 -> B1;
                  true -> e_varint(TrF2, <<B1/binary, 16>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.WrongExpectedVersion'(Msg, TrUserData) -> 'encode_msg_event_store.client.WrongExpectedVersion'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Bin, TrUserData) ->
    B1 = if F1 =:= undefined -> Bin;
            true ->
                case id(F1, TrUserData) of
                    {current_stream_revision, TF1} -> begin TrTF1 = id(TF1, TrUserData), e_varint(TrTF1, <<Bin/binary, 8>>, TrUserData) end;
                    {current_no_stream, TF1} -> begin TrTF1 = id(TF1, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(TrTF1, <<Bin/binary, 18>>, TrUserData) end
                end
         end,
    if F2 =:= undefined -> B1;
       true ->
           case id(F2, TrUserData) of
               {expected_stream_position, TF2} -> begin TrTF2 = id(TF2, TrUserData), e_varint(TrTF2, <<B1/binary, 24>>, TrUserData) end;
               {expected_any, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(TrTF2, <<B1/binary, 34>>, TrUserData) end;
               {expected_stream_exists, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(TrTF2, <<B1/binary, 42>>, TrUserData) end;
               {expected_no_stream, TF2} -> begin TrTF2 = id(TF2, TrUserData), 'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(TrTF2, <<B1/binary, 50>>, TrUserData) end
           end
    end.

'encode_msg_event_store.client.AccessDenied'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.StreamDeleted'(Msg, TrUserData) -> 'encode_msg_event_store.client.StreamDeleted'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= undefined -> Bin;
                  true -> 'e_mfield_event_store.client.StreamDeleted_stream_identifier'(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.Timeout'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.Unknown'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.InvalidTransaction'(_Msg, _TrUserData) -> <<>>.

'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, TrUserData) -> 'encode_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               if TrF1 =:= 0 -> Bin;
                  true -> e_varint(TrF1, <<Bin/binary, 8>>, TrUserData)
               end
           end
    end.

'encode_msg_event_store.client.BadRequest'(Msg, TrUserData) -> 'encode_msg_event_store.client.BadRequest'(Msg, <<>>, TrUserData).


'encode_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
           begin
               TrF1 = id(F1, TrUserData),
               case is_empty_string(TrF1) of
                   true -> Bin;
                   false -> e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
               end
           end
    end.

'encode_msg_google.protobuf.Empty'(_Msg, _TrUserData) -> <<>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_all'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(Rest, Bin3, TrUserData);
'e_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = 'e_mfield_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(Rest, Bin3, TrUserData);
'e_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq_ack'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadReq_nack'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_map<string,string>'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = 'e_mfield_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'('tr_encode_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata[x]'(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, Bin3, TrUserData);
'e_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp_event'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_all'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'([Elem | Rest], Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2, TrUserData),
    'e_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(Rest, Bin3, TrUserData);
'e_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'([], Bin, _TrUserData) -> Bin.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.CreateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.UpdateReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.persistent_subscriptions.DeleteReq_options'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.UUID_structured'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.UUID.Structured'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_event_store.client.WrongExpectedVersion_current_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_any'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_stream_exists'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.WrongExpectedVersion_expected_no_stream'(_Msg, Bin, _TrUserData) -> <<Bin/binary, 0>>.

'e_mfield_event_store.client.StreamDeleted_stream_identifier'(Msg, Bin, TrUserData) ->
    SubBin = 'encode_msg_event_store.client.StreamIdentifier'(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'encode_msg_map<string,string>'(#'map<string,string>'{key = F1, value = F2}, Bin, TrUserData) ->
    B1 = begin TrF1 = id(F1, TrUserData), e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData) end,
    begin TrF2 = id(F2, TrUserData), e_type_string(TrF2, <<B1/binary, 18>>, TrUserData) end.

'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Unknown', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Park', Bin, _TrUserData) -> <<Bin/binary, 1>>;
'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Retry', Bin, _TrUserData) -> <<Bin/binary, 2>>;
'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Skip', Bin, _TrUserData) -> <<Bin/binary, 3>>;
'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Stop', Bin, _TrUserData) -> <<Bin/binary, 4>>;
'e_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(V, Bin, _TrUserData) -> e_varint(V, Bin).

'e_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('DispatchToSingle', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('RoundRobin', Bin, _TrUserData) -> <<Bin/binary, 1>>;
'e_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('Pinned', Bin, _TrUserData) -> <<Bin/binary, 2>>;
'e_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(V, Bin, _TrUserData) -> e_varint(V, Bin).

'e_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('DispatchToSingle', Bin, _TrUserData) -> <<Bin/binary, 0>>;
'e_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('RoundRobin', Bin, _TrUserData) -> <<Bin/binary, 1>>;
'e_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('Pinned', Bin, _TrUserData) -> <<Bin/binary, 2>>;
'e_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(V, Bin, _TrUserData) -> e_varint(V, Bin).

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 -> e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) -> e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData) when 0 =< Value, Value =< 127 -> <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) -> <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) -> <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) -> <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) -> <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) -> <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) -> <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) -> <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) -> <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) -> <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) -> <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) -> <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_unknown_elems/2}).
e_unknown_elems([Elem | Rest], Bin) ->
    BinR = case Elem of
               {varint, FNum, N} ->
                   BinF = e_varint(FNum bsl 3, Bin),
                   e_varint(N, BinF);
               {length_delimited, FNum, Data} ->
                   BinF = e_varint(FNum bsl 3 bor 2, Bin),
                   BinL = e_varint(byte_size(Data), BinF),
                   <<BinL/binary, Data/binary>>;
               {group, FNum, GroupFields} ->
                   Bin1 = e_varint(FNum bsl 3 bor 3, Bin),
                   Bin2 = e_unknown_elems(GroupFields, Bin1),
                   e_varint(FNum bsl 3 bor 4, Bin2);
               {fixed32, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 5, Bin),
                   <<BinF/binary, V:32/little>>;
               {fixed64, FNum, V} ->
                   BinF = e_varint(FNum bsl 3 bor 1, Bin),
                   <<BinF/binary, V:64/little>>
           end,
    e_unknown_elems(Rest, BinR);
e_unknown_elems([], Bin) -> Bin.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).

is_empty_string("") -> true;
is_empty_string(<<>>) -> true;
is_empty_string(L) when is_list(L) -> not string_has_chars(L);
is_empty_string(B) when is_binary(B) -> false.

string_has_chars([C | _]) when is_integer(C) -> true;
string_has_chars([H | T]) ->
    case string_has_chars(H) of
        true -> true;
        false -> string_has_chars(T)
    end;
string_has_chars(B) when is_binary(B), byte_size(B) =/= 0 -> true;
string_has_chars(C) when is_integer(C) -> true;
string_has_chars(<<>>) -> false;
string_has_chars([]) -> false.


decode_msg(Bin, MsgName) when is_binary(Bin) -> decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason:StackTrace ->
            erlang:raise(error, Reason, StackTrace);
        Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch
        error:{gpb_error,_}=Reason ->
            erlang:raise(error, Reason,
                         erlang:get_stacktrace());
        Class:Reason ->
            StackTrace = erlang:get_stacktrace(),
            error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadReq.Ack', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadReq.Nack', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadReq', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadResp.ReadEvent', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.ReadResp', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.ReadResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.StreamOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.AllOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression', Bin, TrUserData) ->
    id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq.Settings', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.CreateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.CreateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq.StreamOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq.AllOptions', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq.Position', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq.Settings', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateReq', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.UpdateResp', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.UpdateResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.DeleteReq.Options', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.DeleteReq', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.DeleteReq'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.persistent_subscriptions.DeleteResp', Bin, TrUserData) -> id('decode_msg_event_store.client.persistent_subscriptions.DeleteResp'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID.Structured', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.UUID', Bin, TrUserData) -> id('decode_msg_event_store.client.UUID'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Empty', Bin, TrUserData) -> id('decode_msg_event_store.client.Empty'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamIdentifier', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AllStreamPosition', Bin, TrUserData) -> id('decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.WrongExpectedVersion', Bin, TrUserData) -> id('decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.AccessDenied', Bin, TrUserData) -> id('decode_msg_event_store.client.AccessDenied'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.StreamDeleted', Bin, TrUserData) -> id('decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Timeout', Bin, TrUserData) -> id('decode_msg_event_store.client.Timeout'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.Unknown', Bin, TrUserData) -> id('decode_msg_event_store.client.Unknown'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.InvalidTransaction', Bin, TrUserData) -> id('decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.MaximumAppendSizeExceeded', Bin, TrUserData) -> id('decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('event_store.client.BadRequest', Bin, TrUserData) -> id('decode_msg_event_store.client.BadRequest'(Bin, TrUserData), TrUserData);
decode_msg_2_doit('google.protobuf.Empty', Bin, TrUserData) -> id('decode_msg_google.protobuf.Empty'(Bin, TrUserData), TrUserData).



'decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(<<>>, TrUserData), id(0, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_all'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_group_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_buffer_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = F@_1, group_name = F@_2, buffer_size = F@_3, uuid_option = F@_4};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        42 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_all'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_group_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_buffer_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = F@_1, group_name = F@_2, buffer_size = F@_3, uuid_option = F@_4}.

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     case Prev of
                                                                                         undefined -> id({stream_identifier, NewFValue}, TrUserData);
                                                                                         {stream_identifier, MVPrev} -> id({stream_identifier, 'merge_msg_event_store.client.StreamIdentifier'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                         _ -> id({stream_identifier, NewFValue}, TrUserData)
                                                                                     end,
                                                                                     F@_2,
                                                                                     F@_3,
                                                                                     F@_4,
                                                                                     TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     case Prev of
                                                                                         undefined -> id({all, NewFValue}, TrUserData);
                                                                                         {all, MVPrev} -> id({all, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                         _ -> id({all, NewFValue}, TrUserData)
                                                                                     end,
                                                                                     F@_2,
                                                                                     F@_3,
                                                                                     F@_4,
                                                                                     TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_group_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_group_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_group_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_buffer_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_buffer_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_buffer_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options_uuid_option'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(RestF,
                                                                                     0,
                                                                                     0,
                                                                                     F,
                                                                                     F@_1,
                                                                                     F@_2,
                                                                                     F@_3,
                                                                                     if Prev == undefined -> NewFValue;
                                                                                        true -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Prev, NewFValue, TrUserData)
                                                                                     end,
                                                                                     TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Other, Z1, Z2, F, F@_1, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = F@_1}.

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(RestF,
                                                                                                0,
                                                                                                0,
                                                                                                F,
                                                                                                case Prev of
                                                                                                    undefined -> id({structured, NewFValue}, TrUserData);
                                                                                                    {structured, MVPrev} -> id({structured, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                    _ -> id({structured, NewFValue}, TrUserData)
                                                                                                end,
                                                                                                TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption_string'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(RestF,
                                                                                                0,
                                                                                                0,
                                                                                                F,
                                                                                                case Prev of
                                                                                                    undefined -> id({string, NewFValue}, TrUserData);
                                                                                                    {string, MVPrev} -> id({string, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                    _ -> id({string, NewFValue}, TrUserData)
                                                                                                end,
                                                                                                TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Bin, 0, 0, 0, id(<<>>, TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_id'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<>>, 0, 0, _, F@_1, R1, TrUserData) -> #'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = F@_1, ids = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_id'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<>>, 0, 0, _, F@_1, R1, TrUserData) -> #'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = F@_1, ids = lists_reverse(R1, TrUserData)}.

'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Ack_ids'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(RestF, 0, 0, F, F@_1, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadReq.Ack'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadReq.Ack'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Ack'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Bin, 0, 0, 0, id(<<>>, TrUserData), id([], TrUserData), id('Unknown', TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_action'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_reason'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = F@_1, ids = lists_reverse(R1, TrUserData), action = F@_3, reason = F@_4};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_action'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_reason'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<>>, 0, 0, _, F@_1, R1, F@_3, F@_4, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = F@_1, ids = lists_reverse(R1, TrUserData), action = F@_3, reason = F@_4}.

'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_ids'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(RestF, 0, 0, F, F@_1, cons(NewFValue, Prev, TrUserData), F@_3, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_action'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_action'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_action'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_reason'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_reason'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq.Nack_reason'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadReq.Nack'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadReq.Nack'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq.Nack'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_ack'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_nack'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadReq'{content = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_ack'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.ReadReq_nack'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadReq'{content = F@_1}.

'd_field_event_store.client.persistent_subscriptions.ReadReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(RestF,
                                                                             0,
                                                                             0,
                                                                             F,
                                                                             case Prev of
                                                                                 undefined -> id({options, NewFValue}, TrUserData);
                                                                                 {options, MVPrev} -> id({options, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                 _ -> id({options, NewFValue}, TrUserData)
                                                                             end,
                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq_ack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq_ack'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq_ack'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(RestF,
                                                                             0,
                                                                             0,
                                                                             F,
                                                                             case Prev of
                                                                                 undefined -> id({ack, NewFValue}, TrUserData);
                                                                                 {ack, MVPrev} -> id({ack, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                 _ -> id({ack, NewFValue}, TrUserData)
                                                                             end,
                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadReq_nack'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadReq_nack'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadReq_nack'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(RestF,
                                                                             0,
                                                                             0,
                                                                             F,
                                                                             case Prev of
                                                                                 undefined -> id({nack, NewFValue}, TrUserData);
                                                                                 {nack, MVPrev} -> id({nack, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                 _ -> id({nack, NewFValue}, TrUserData)
                                                                             end,
                                                                             TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_retry_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = F@_1, link = F@_2, position = F@_3, count = F@_4};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        40 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_retry_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        50 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = F@_1, link = F@_2, position = F@_3, count = F@_4}.

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_event'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF,
                                                                                        0,
                                                                                        0,
                                                                                        F,
                                                                                        if Prev == undefined -> NewFValue;
                                                                                           true -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Prev, NewFValue, TrUserData)
                                                                                        end,
                                                                                        F@_2,
                                                                                        F@_3,
                                                                                        F@_4,
                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_link'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF,
                                                                                        0,
                                                                                        0,
                                                                                        F,
                                                                                        F@_1,
                                                                                        if Prev == undefined -> NewFValue;
                                                                                           true -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Prev, NewFValue, TrUserData)
                                                                                        end,
                                                                                        F@_3,
                                                                                        F@_4,
                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF, 0, 0, F, F@_1, F@_2, id({commit_position, NewFValue}, TrUserData), F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, Prev, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF,
                                                                                        0,
                                                                                        0,
                                                                                        F,
                                                                                        F@_1,
                                                                                        F@_2,
                                                                                        case Prev of
                                                                                            undefined -> id({no_position, NewFValue}, TrUserData);
                                                                                            {no_position, MVPrev} -> id({no_position, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                            _ -> id({no_position, NewFValue}, TrUserData)
                                                                                        end,
                                                                                        F@_4,
                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_retry_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_retry_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_retry_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, id({retry_count, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent_no_retry_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(RestF,
                                                                                        0,
                                                                                        0,
                                                                                        F,
                                                                                        F@_1,
                                                                                        F@_2,
                                                                                        F@_3,
                                                                                        case Prev of
                                                                                            undefined -> id({no_retry_count, NewFValue}, TrUserData);
                                                                                            {no_retry_count, MVPrev} -> id({no_retry_count, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                            _ -> id({no_retry_count, NewFValue}, TrUserData)
                                                                                        end,
                                                                                        TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bin,
                                                                                                      0,
                                                                                                      0,
                                                                                                      0,
                                                                                                      id(undefined, TrUserData),
                                                                                                      id(undefined, TrUserData),
                                                                                                      id(0, TrUserData),
                                                                                                      id(0, TrUserData),
                                                                                                      id(0, TrUserData),
                                                                                                      'tr_decode_init_default_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'([], TrUserData),
                                                                                                      id(<<>>, TrUserData),
                                                                                                      id(<<>>, TrUserData),
                                                                                                      TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<58, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<66, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_data'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = F@_1, stream_identifier = F@_2, stream_revision = F@_3, prepare_position = F@_4, commit_position = F@_5,
                                                                                    metadata = 'tr_decode_repeated_finalize_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(R1, TrUserData), custom_metadata = F@_7, data = F@_8};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        32 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        40 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        50 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        58 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        66 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_data'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, R1, F@_7, F@_8, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = F@_1, stream_identifier = F@_2, stream_revision = F@_3, prepare_position = F@_4, commit_position = F@_5,
                                                                                    metadata = 'tr_decode_repeated_finalize_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(R1, TrUserData), custom_metadata = F@_7, data = F@_8}.

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                                      0,
                                                                                                      0,
                                                                                                      F,
                                                                                                      if Prev == undefined -> NewFValue;
                                                                                                         true -> 'merge_msg_event_store.client.UUID'(Prev, NewFValue, TrUserData)
                                                                                                      end,
                                                                                                      F@_2,
                                                                                                      F@_3,
                                                                                                      F@_4,
                                                                                                      F@_5,
                                                                                                      F@_6,
                                                                                                      F@_7,
                                                                                                      F@_8,
                                                                                                      TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                                      0,
                                                                                                      0,
                                                                                                      F,
                                                                                                      F@_1,
                                                                                                      if Prev == undefined -> NewFValue;
                                                                                                         true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                                      end,
                                                                                                      F@_3,
                                                                                                      F@_4,
                                                                                                      F@_5,
                                                                                                      F@_6,
                                                                                                      F@_7,
                                                                                                      F@_8,
                                                                                                      TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_stream_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, F@_5, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, F@_6, F@_7, F@_8, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, Prev, F@_7, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_map<string,string>'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF,
                                                                                                      0,
                                                                                                      0,
                                                                                                      F,
                                                                                                      F@_1,
                                                                                                      F@_2,
                                                                                                      F@_3,
                                                                                                      F@_4,
                                                                                                      F@_5,
                                                                                                      'tr_decode_repeated_add_elem_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(NewFValue, Prev, TrUserData),
                                                                                                      F@_7,
                                                                                                      F@_8,
                                                                                                      TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_custom_metadata'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _, F@_8, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, NewFValue, F@_8, TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_data'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_data'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent_data'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Other, Z1, Z2, F, F@_1, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = F@_1}.

'd_field_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation_subscription_id'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation_subscription_id'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation_subscription_id'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.ReadResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.ReadResp_event'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadResp'{content = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp_event'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.ReadResp'{content = F@_1}.

'd_field_event_store.client.persistent_subscriptions.ReadResp_event'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp_event'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp_event'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({event, NewFValue}, TrUserData);
                                                                                  {event, MVPrev} -> id({event, 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({event, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'd_field_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.ReadResp_subscription_confirmation'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(RestF,
                                                                              0,
                                                                              0,
                                                                              F,
                                                                              case Prev of
                                                                                  undefined -> id({subscription_confirmation, NewFValue}, TrUserData);
                                                                                  {subscription_confirmation, MVPrev} -> id({subscription_confirmation, 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                  _ -> id({subscription_confirmation, NewFValue}, TrUserData)
                                                                              end,
                                                                              TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.ReadResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.ReadResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.ReadResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.ReadResp'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.ReadResp'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.ReadResp'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.ReadResp'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(<<>>, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_all'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_group_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = F@_1, stream_identifier = F@_2, group_name = F@_3, settings = F@_4};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        34 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        42 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_all'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_group_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = F@_1, stream_identifier = F@_2, group_name = F@_3, settings = F@_4}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({stream, NewFValue}, TrUserData);
                                                                                           {stream, MVPrev} -> id({stream, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({stream, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({all, NewFValue}, TrUserData);
                                                                                           {all, MVPrev} -> id({all, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({all, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       F@_1,
                                                                                       if Prev == undefined -> NewFValue;
                                                                                          true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                       end,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_group_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_group_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_group_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Options_settings'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       F@_1,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       if Prev == undefined -> NewFValue;
                                                                                          true -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Prev, NewFValue, TrUserData)
                                                                                       end,
                                                                                       TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             if Prev == undefined -> NewFValue;
                                                                                                true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                             end,
                                                                                             F@_2,
                                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             F@_1,
                                                                                             case Prev of
                                                                                                 undefined -> id({start, NewFValue}, TrUserData);
                                                                                                 {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                 _ -> id({start, NewFValue}, TrUserData)
                                                                                             end,
                                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.StreamOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             F@_1,
                                                                                             case Prev of
                                                                                                 undefined -> id({'end', NewFValue}, TrUserData);
                                                                                                 {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                 _ -> id({'end', NewFValue}, TrUserData)
                                                                                             end,
                                                                                             TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = F@_1, filter_option = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = F@_1, filter_option = F@_2}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({position, NewFValue}, TrUserData);
                                                                                              {position, MVPrev} -> id({position, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({position, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          F@_2,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({start, NewFValue}, TrUserData);
                                                                                              {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({start, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          F@_2,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({'end', NewFValue}, TrUserData);
                                                                                              {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({'end', NewFValue}, TrUserData)
                                                                                          end,
                                                                                          F@_2,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_filter'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          F@_1,
                                                                                          case Prev of
                                                                                              undefined -> id({filter, NewFValue}, TrUserData);
                                                                                              {filter, MVPrev} -> id({filter, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({filter, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions_no_filter'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          F@_1,
                                                                                          case Prev of
                                                                                              undefined -> id({no_filter, NewFValue}, TrUserData);
                                                                                              {no_filter, MVPrev} -> id({no_filter, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({no_filter, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bin, 0, 0, 0, id(<<>>, TrUserData), id([], TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_regex'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<>>, 0, 0, _, F@_1, R1, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = F@_1, prefix = lists_reverse(R1, TrUserData)};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_regex'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<>>, 0, 0, _, F@_1, R1, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = F@_1, prefix = lists_reverse(R1, TrUserData)}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_regex'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_regex'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_regex'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression_prefix'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(RestF, 0, 0, F, F@_1, cons(NewFValue, Prev, TrUserData), TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_max'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_checkpointIntervalMultiplier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = F@_1, window = F@_2, checkpointIntervalMultiplier = F@_3};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_max'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        40 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_checkpointIntervalMultiplier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = F@_1, window = F@_2, checkpointIntervalMultiplier = F@_3}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(RestF,
                                                                                                        0,
                                                                                                        0,
                                                                                                        F,
                                                                                                        case Prev of
                                                                                                            undefined -> id({stream_identifier, NewFValue}, TrUserData);
                                                                                                            {stream_identifier, MVPrev} ->
                                                                                                                id({stream_identifier, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                            _ -> id({stream_identifier, NewFValue}, TrUserData)
                                                                                                        end,
                                                                                                        F@_2,
                                                                                                        F@_3,
                                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_event_type'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(RestF,
                                                                                                        0,
                                                                                                        0,
                                                                                                        F,
                                                                                                        case Prev of
                                                                                                            undefined -> id({event_type, NewFValue}, TrUserData);
                                                                                                            {event_type, MVPrev} -> id({event_type, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                            _ -> id({event_type, NewFValue}, TrUserData)
                                                                                                        end,
                                                                                                        F@_2,
                                                                                                        F@_3,
                                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_max'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_max'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_max'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(RestF, 0, 0, F, F@_1, id({max, NewFValue}, TrUserData), F@_3, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(RestF,
                                                                                                        0,
                                                                                                        0,
                                                                                                        F,
                                                                                                        F@_1,
                                                                                                        case Prev of
                                                                                                            undefined -> id({count, NewFValue}, TrUserData);
                                                                                                            {count, MVPrev} -> id({count, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                            _ -> id({count, NewFValue}, TrUserData)
                                                                                                        end,
                                                                                                        F@_3,
                                                                                                        TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_checkpointIntervalMultiplier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_checkpointIntervalMultiplier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions_checkpointIntervalMultiplier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Bin,
                                                                                        0,
                                                                                        0,
                                                                                        0,
                                                                                        id(false, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(false, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id('DispatchToSingle', TrUserData),
                                                                                        id(undefined, TrUserData),
                                                                                        id(undefined, TrUserData),
                                                                                        TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_resolve_links'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_extra_statistics'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_retry_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<56, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_min_checkpoint_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_checkpoint_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<72, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_subscriber_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<80, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_live_buffer_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<88, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_read_batch_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<96, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_history_buffer_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<104, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_named_consumer_strategy'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ticks'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<112, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ms'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<48, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ticks'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<120, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ms'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = F@_1, revision = F@_2, extra_statistics = F@_3, max_retry_count = F@_4, min_checkpoint_count = F@_5, max_checkpoint_count = F@_6, max_subscriber_count = F@_7,
                                                                      live_buffer_size = F@_8, read_batch_size = F@_9, history_buffer_size = F@_10, named_consumer_strategy = F@_11, message_timeout = F@_12, checkpoint_after = F@_13};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_resolve_links'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_extra_statistics'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        40 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_retry_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        56 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_min_checkpoint_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        64 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_checkpoint_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        72 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_subscriber_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        80 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_live_buffer_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        88 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_read_batch_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        96 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_history_buffer_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        104 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_named_consumer_strategy'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        32 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ticks'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        112 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ms'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        48 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ticks'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        120 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ms'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = F@_1, revision = F@_2, extra_statistics = F@_3, max_retry_count = F@_4, min_checkpoint_count = F@_5, max_checkpoint_count = F@_6, max_subscriber_count = F@_7,
                                                                      live_buffer_size = F@_8, read_batch_size = F@_9, history_buffer_size = F@_10, named_consumer_strategy = F@_11, message_timeout = F@_12, checkpoint_after = F@_13}.

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_resolve_links'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_resolve_links'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_resolve_links'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_extra_statistics'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_extra_statistics'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_extra_statistics'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_retry_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_retry_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_retry_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_min_checkpoint_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_min_checkpoint_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_min_checkpoint_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_checkpoint_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_checkpoint_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_checkpoint_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, _, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, NewFValue, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_subscriber_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_subscriber_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_max_subscriber_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, NewFValue, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_live_buffer_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_live_buffer_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_live_buffer_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, NewFValue, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_read_batch_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_read_batch_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_read_batch_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, _, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, NewFValue, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_history_buffer_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_history_buffer_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_history_buffer_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, _, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, NewFValue, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_named_consumer_strategy'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_named_consumer_strategy'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_named_consumer_strategy'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, _, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, NewFValue, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ticks'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ticks'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ticks'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, _, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, id({message_timeout_ticks, NewFValue}, TrUserData), F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ms'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ms'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_message_timeout_ms'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, _, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, id({message_timeout_ms, NewFValue}, TrUserData), F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ticks'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ticks'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ticks'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id({checkpoint_after_ticks, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ms'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ms'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq.Settings_checkpoint_after_ms'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id({checkpoint_after_ms, NewFValue}, TrUserData), TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq.Settings'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq.Settings'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.CreateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.CreateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.CreateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.CreateReq'{options = F@_1}.

'd_field_event_store.client.persistent_subscriptions.CreateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.CreateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.CreateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               if Prev == undefined -> NewFValue;
                                                                                  true -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Prev, NewFValue, TrUserData)
                                                                               end,
                                                                               TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.CreateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.CreateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.CreateResp'{};
'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.CreateResp'{}.

'skip_varint_event_store.client.persistent_subscriptions.CreateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.CreateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.CreateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.CreateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.CreateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.CreateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.CreateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.CreateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.CreateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.CreateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), id(<<>>, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_group_name'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = F@_1, stream_identifier = F@_2, group_name = F@_3, settings = F@_4};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        34 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        42 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        10 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_group_name'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = F@_1, stream_identifier = F@_2, group_name = F@_3, settings = F@_4}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({stream, NewFValue}, TrUserData);
                                                                                           {stream, MVPrev} -> id({stream, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({stream, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({all, NewFValue}, TrUserData);
                                                                                           {all, MVPrev} -> id({all, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({all, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, F@_3, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       F@_1,
                                                                                       if Prev == undefined -> NewFValue;
                                                                                          true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                       end,
                                                                                       F@_3,
                                                                                       F@_4,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_group_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_group_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_group_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Options_settings'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       F@_1,
                                                                                       F@_2,
                                                                                       F@_3,
                                                                                       if Prev == undefined -> NewFValue;
                                                                                          true -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Prev, NewFValue, TrUserData)
                                                                                       end,
                                                                                       TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = F@_1, revision_option = F@_2}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             if Prev == undefined -> NewFValue;
                                                                                                true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                                                             end,
                                                                                             F@_2,
                                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(RestF, 0, 0, F, F@_1, id({revision, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             F@_1,
                                                                                             case Prev of
                                                                                                 undefined -> id({start, NewFValue}, TrUserData);
                                                                                                 {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                 _ -> id({start, NewFValue}, TrUserData)
                                                                                             end,
                                                                                             TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(RestF,
                                                                                             0,
                                                                                             0,
                                                                                             F,
                                                                                             F@_1,
                                                                                             case Prev of
                                                                                                 undefined -> id({'end', NewFValue}, TrUserData);
                                                                                                 {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                                 _ -> id({'end', NewFValue}, TrUserData)
                                                                                             end,
                                                                                             TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(Rest, 0, 0, 0, F@_1, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = F@_1}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({position, NewFValue}, TrUserData);
                                                                                              {position, MVPrev} -> id({position, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({position, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_start'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({start, NewFValue}, TrUserData);
                                                                                              {start, MVPrev} -> id({start, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({start, NewFValue}, TrUserData)
                                                                                          end,
                                                                                          TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.AllOptions_end'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(RestF,
                                                                                          0,
                                                                                          0,
                                                                                          F,
                                                                                          case Prev of
                                                                                              undefined -> id({'end', NewFValue}, TrUserData);
                                                                                              {'end', MVPrev} -> id({'end', 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                              _ -> id({'end', NewFValue}, TrUserData)
                                                                                          end,
                                                                                          TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Position_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Position'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Position'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Bin,
                                                                                        0,
                                                                                        0,
                                                                                        0,
                                                                                        id(false, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(false, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id(0, TrUserData),
                                                                                        id('DispatchToSingle', TrUserData),
                                                                                        id(undefined, TrUserData),
                                                                                        id(undefined, TrUserData),
                                                                                        TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_resolve_links'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_revision'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_extra_statistics'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<40, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_retry_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<56, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_min_checkpoint_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_checkpoint_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<72, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_subscriber_count'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<80, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_live_buffer_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<88, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_read_batch_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<96, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_history_buffer_size'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<104, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_named_consumer_strategy'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ticks'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<112, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ms'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<48, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ticks'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<120, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ms'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = F@_1, revision = F@_2, extra_statistics = F@_3, max_retry_count = F@_4, min_checkpoint_count = F@_5, max_checkpoint_count = F@_6, max_subscriber_count = F@_7,
                                                                      live_buffer_size = F@_8, read_batch_size = F@_9, history_buffer_size = F@_10, named_consumer_strategy = F@_11, message_timeout = F@_12, checkpoint_after = F@_13};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Other, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_resolve_links'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        16 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_revision'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        24 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_extra_statistics'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        40 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_retry_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        56 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_min_checkpoint_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        64 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_checkpoint_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        72 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_subscriber_count'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        80 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_live_buffer_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        88 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_read_batch_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        96 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_history_buffer_size'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        104 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_named_consumer_strategy'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        32 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ticks'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        112 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ms'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        48 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ticks'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        120 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ms'(Rest, 0, 0, 0, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<>>, 0, 0, _, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = F@_1, revision = F@_2, extra_statistics = F@_3, max_retry_count = F@_4, min_checkpoint_count = F@_5, max_checkpoint_count = F@_6, max_subscriber_count = F@_7,
                                                                      live_buffer_size = F@_8, read_batch_size = F@_9, history_buffer_size = F@_10, named_consumer_strategy = F@_11, message_timeout = F@_12, checkpoint_after = F@_13}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_resolve_links'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_resolve_links'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_resolve_links'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, NewFValue, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, NewFValue, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_extra_statistics'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_extra_statistics'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_extra_statistics'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, _, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id(X bsl N + Acc =/= 0, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, NewFValue, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_retry_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_retry_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_retry_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, _, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, NewFValue, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_min_checkpoint_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_min_checkpoint_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_min_checkpoint_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, _, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, NewFValue, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_checkpoint_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_checkpoint_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_checkpoint_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, _, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, NewFValue, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_subscriber_count'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_subscriber_count'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_max_subscriber_count'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, _, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, NewFValue, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_live_buffer_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_live_buffer_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_live_buffer_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, _, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, NewFValue, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_read_batch_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_read_batch_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_read_batch_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, _, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, NewFValue, F@_10, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_history_buffer_size'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_history_buffer_size'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_history_buffer_size'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, _, F@_11, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, NewFValue, F@_11, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_named_consumer_strategy'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_named_consumer_strategy'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_named_consumer_strategy'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, _, F@_12, F@_13, TrUserData) ->
    {NewFValue, RestF} = {id('d_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end), TrUserData), Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, NewFValue, F@_12, F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ticks'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ticks'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ticks'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, _, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, id({message_timeout_ticks, NewFValue}, TrUserData), F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ms'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ms'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_message_timeout_ms'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, _, F@_13, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, id({message_timeout_ms, NewFValue}, TrUserData), F@_13, TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ticks'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ticks'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ticks'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id({checkpoint_after_ticks, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ms'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ms'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq.Settings_checkpoint_after_ms'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:32/signed-native>> = <<(X bsl N + Acc):32/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(RestF, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, id({checkpoint_after_ms, NewFValue}, TrUserData), TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest2, 0, 0, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Bin, _, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, 0, Z2, FNum, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq.Settings'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Rest, Z1, Z2, F, F@_1, F@_2, F@_3, F@_4, F@_5, F@_6, F@_7, F@_8, F@_9, F@_10, F@_11, F@_12, F@_13, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.UpdateReq'{options = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.UpdateReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.UpdateReq'{options = F@_1}.

'd_field_event_store.client.persistent_subscriptions.UpdateReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.UpdateReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.UpdateReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               if Prev == undefined -> NewFValue;
                                                                                  true -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Prev, NewFValue, TrUserData)
                                                                               end,
                                                                               TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.UpdateReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.UpdateResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.UpdateResp'{};
'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.UpdateResp'{}.

'skip_varint_event_store.client.persistent_subscriptions.UpdateResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.UpdateResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.UpdateResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.UpdateResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.UpdateResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.UpdateResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.UpdateResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.UpdateResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Bin, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Bin, 0, 0, 0, id(undefined, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_group_name'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = F@_1, group_name = F@_2};
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        26 -> 'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_group_name'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = F@_1, group_name = F@_2}.

'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({stream_identifier, NewFValue}, TrUserData);
                                                                                           {stream_identifier, MVPrev} -> id({stream_identifier, 'merge_msg_event_store.client.StreamIdentifier'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({stream_identifier, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_all'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(RestF,
                                                                                       0,
                                                                                       0,
                                                                                       F,
                                                                                       case Prev of
                                                                                           undefined -> id({all, NewFValue}, TrUserData);
                                                                                           {all, MVPrev} -> id({all, 'merge_msg_event_store.client.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                                           _ -> id({all, NewFValue}, TrUserData)
                                                                                       end,
                                                                                       F@_2,
                                                                                       TrUserData).

'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_group_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_group_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.persistent_subscriptions.DeleteReq.Options_group_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'skip_varint_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.DeleteReq.Options'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.DeleteReq.Options'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq.Options'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.DeleteReq'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.persistent_subscriptions.DeleteReq_options'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.DeleteReq'{options = F@_1};
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.persistent_subscriptions.DeleteReq_options'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.persistent_subscriptions.DeleteReq'{options = F@_1}.

'd_field_event_store.client.persistent_subscriptions.DeleteReq_options'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.persistent_subscriptions.DeleteReq_options'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.persistent_subscriptions.DeleteReq_options'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(RestF,
                                                                               0,
                                                                               0,
                                                                               F,
                                                                               if Prev == undefined -> NewFValue;
                                                                                  true -> 'merge_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Prev, NewFValue, TrUserData)
                                                                               end,
                                                                               TrUserData).

'skip_varint_event_store.client.persistent_subscriptions.DeleteReq'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.DeleteReq'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteReq'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.DeleteReq'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.DeleteReq'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.DeleteReq'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteReq'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.persistent_subscriptions.DeleteResp'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.DeleteResp'{};
'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(<<>>, 0, 0, _, _) -> #'event_store.client.persistent_subscriptions.DeleteResp'{}.

'skip_varint_event_store.client.persistent_subscriptions.DeleteResp'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.persistent_subscriptions.DeleteResp'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.persistent_subscriptions.DeleteResp'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteResp'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteResp'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.persistent_subscriptions.DeleteResp'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.persistent_subscriptions.DeleteResp'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.persistent_subscriptions.DeleteResp'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.persistent_subscriptions.DeleteResp'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.persistent_subscriptions.DeleteResp'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.UUID.Structured'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID.Structured'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2};
'dfp_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.UUID.Structured'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.UUID.Structured'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID.Structured'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.UUID.Structured'{most_significant_bits = F@_1, least_significant_bits = F@_2}.

'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_most_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_most_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.UUID.Structured_least_significant_bits'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.UUID.Structured_least_significant_bits'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {begin <<Res:64/signed-native>> = <<(X bsl N + Acc):64/unsigned-native>>, id(Res, TrUserData) end, Rest},
    'dfp_read_field_def_event_store.client.UUID.Structured'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.UUID.Structured'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.UUID.Structured'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.UUID.Structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID.Structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.UUID.Structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.UUID.Structured'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.UUID.Structured'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.UUID.Structured'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID.Structured'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.UUID'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.UUID'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_structured'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.UUID_string'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1};
'dfp_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.UUID'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.UUID_structured'(Rest, 0, 0, 0, F@_1, TrUserData);
        18 -> 'd_field_event_store.client.UUID_string'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.UUID'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.UUID'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.UUID'{value = F@_1}.

'd_field_event_store.client.UUID_structured'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_structured'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_structured'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.UUID.Structured'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF,
                                                 0,
                                                 0,
                                                 F,
                                                 case Prev of
                                                     undefined -> id({structured, NewFValue}, TrUserData);
                                                     {structured, MVPrev} -> id({structured, 'merge_msg_event_store.client.UUID.Structured'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                     _ -> id({structured, NewFValue}, TrUserData)
                                                 end,
                                                 TrUserData).

'd_field_event_store.client.UUID_string'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.UUID_string'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.UUID_string'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.UUID'(RestF, 0, 0, F, id({string, NewFValue}, TrUserData), TrUserData).

'skip_varint_event_store.client.UUID'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.UUID'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.UUID'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.UUID'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.UUID'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.UUID'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.UUID'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.UUID'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.UUID'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.UUID'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.UUID'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{};
'dfp_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Empty'(<<>>, 0, 0, _, _) -> #'event_store.client.Empty'{}.

'skip_varint_event_store.client.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamIdentifier'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamIdentifier'(<<26, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1};
'dfp_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        26 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamIdentifier'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamIdentifier'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamIdentifier'{stream_name = F@_1}.

'd_field_event_store.client.StreamIdentifier_stream_name'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamIdentifier_stream_name'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamIdentifier_stream_name'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.StreamIdentifier'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamIdentifier'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamIdentifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamIdentifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamIdentifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamIdentifier'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamIdentifier'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamIdentifier'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamIdentifier'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.AllStreamPosition'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Bin, 0, 0, 0, id(0, TrUserData), id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.AllStreamPosition'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<16, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2};
'dfp_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        16 -> 'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.AllStreamPosition'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.AllStreamPosition'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.AllStreamPosition'{commit_position = F@_1, prepare_position = F@_2}.

'd_field_event_store.client.AllStreamPosition_commit_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_commit_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_commit_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_event_store.client.AllStreamPosition_prepare_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.AllStreamPosition_prepare_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.AllStreamPosition_prepare_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.AllStreamPosition'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_event_store.client.AllStreamPosition'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.AllStreamPosition'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.AllStreamPosition'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.AllStreamPosition'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.AllStreamPosition'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.AllStreamPosition'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.AllStreamPosition'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.AllStreamPosition'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.AllStreamPosition'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.WrongExpectedVersion'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Bin, 0, 0, 0, id(undefined, TrUserData), id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<24, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<34, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<42, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<50, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2};
'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_event_store.client.WrongExpectedVersion'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        24 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        34 -> 'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        42 -> 'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        50 -> 'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_event_store.client.WrongExpectedVersion'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.WrongExpectedVersion'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F@_1, expected_stream_position_option = F@_2}.

'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_stream_revision'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, id({current_stream_revision, NewFValue}, TrUserData), F@_2, TrUserData).

'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_current_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 case Prev of
                                                                     undefined -> id({current_no_stream, NewFValue}, TrUserData);
                                                                     {current_no_stream, MVPrev} -> id({current_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({current_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 F@_2,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_position'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 18446744073709551615, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF, 0, 0, F, F@_1, id({expected_stream_position, NewFValue}, TrUserData), TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_any'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_any'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_any, NewFValue}, TrUserData);
                                                                     {expected_any, MVPrev} -> id({expected_any, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_any, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_stream_exists'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_stream_exists, NewFValue}, TrUserData);
                                                                     {expected_stream_exists, MVPrev} -> id({expected_stream_exists, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_stream_exists, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_event_store.client.WrongExpectedVersion_expected_no_stream'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_google.protobuf.Empty'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(RestF,
                                                                 0,
                                                                 0,
                                                                 F,
                                                                 F@_1,
                                                                 case Prev of
                                                                     undefined -> id({expected_no_stream, NewFValue}, TrUserData);
                                                                     {expected_no_stream, MVPrev} -> id({expected_no_stream, 'merge_msg_google.protobuf.Empty'(MVPrev, NewFValue, TrUserData)}, TrUserData);
                                                                     _ -> id({expected_no_stream, NewFValue}, TrUserData)
                                                                 end,
                                                                 TrUserData).

'skip_varint_event_store.client.WrongExpectedVersion'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_event_store.client.WrongExpectedVersion'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.WrongExpectedVersion'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_event_store.client.WrongExpectedVersion'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_event_store.client.WrongExpectedVersion'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_event_store.client.WrongExpectedVersion'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_event_store.client.WrongExpectedVersion'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_event_store.client.WrongExpectedVersion'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'decode_msg_event_store.client.AccessDenied'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{};
'dfp_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.AccessDenied'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.AccessDenied'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.AccessDenied'(<<>>, 0, 0, _, _) -> #'event_store.client.AccessDenied'{}.

'skip_varint_event_store.client.AccessDenied'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.AccessDenied'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.AccessDenied'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.AccessDenied'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.AccessDenied'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.AccessDenied'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.AccessDenied'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.AccessDenied'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.AccessDenied'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.AccessDenied'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.StreamDeleted'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Bin, 0, 0, 0, id(undefined, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.StreamDeleted'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1};
'dfp_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.StreamDeleted'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.StreamDeleted'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.StreamDeleted'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.StreamDeleted'{stream_identifier = F@_1}.

'd_field_event_store.client.StreamDeleted_stream_identifier'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.StreamDeleted_stream_identifier'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.StreamDeleted_stream_identifier'(<<0:1, X:7, Rest/binary>>, N, Acc, F, Prev, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bs:Len/binary, Rest2/binary>> = Rest, {id('decode_msg_event_store.client.StreamIdentifier'(Bs, TrUserData), TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.StreamDeleted'(RestF,
                                                          0,
                                                          0,
                                                          F,
                                                          if Prev == undefined -> NewFValue;
                                                             true -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, NewFValue, TrUserData)
                                                          end,
                                                          TrUserData).

'skip_varint_event_store.client.StreamDeleted'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.StreamDeleted'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.StreamDeleted'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.StreamDeleted'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.StreamDeleted'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.StreamDeleted'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.StreamDeleted'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.StreamDeleted'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.StreamDeleted'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.Timeout'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{};
'dfp_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Timeout'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Timeout'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Timeout'(<<>>, 0, 0, _, _) -> #'event_store.client.Timeout'{}.

'skip_varint_event_store.client.Timeout'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Timeout'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Timeout'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Timeout'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Timeout'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Timeout'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Timeout'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Timeout'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Timeout'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Timeout'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Timeout'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.Unknown'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{};
'dfp_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.Unknown'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.Unknown'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.Unknown'(<<>>, 0, 0, _, _) -> #'event_store.client.Unknown'{}.

'skip_varint_event_store.client.Unknown'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.Unknown'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.Unknown'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.Unknown'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.Unknown'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.Unknown'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.Unknown'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.Unknown'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.Unknown'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.Unknown'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.Unknown'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.InvalidTransaction'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{};
'dfp_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_event_store.client.InvalidTransaction'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_event_store.client.InvalidTransaction'(<<>>, 0, 0, _, _) -> #'event_store.client.InvalidTransaction'{}.

'skip_varint_event_store.client.InvalidTransaction'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_event_store.client.InvalidTransaction'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_event_store.client.InvalidTransaction'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.InvalidTransaction'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_event_store.client.InvalidTransaction'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest2, 0, 0, F, TrUserData).

'skip_group_event_store.client.InvalidTransaction'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_event_store.client.InvalidTransaction'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'skip_64_event_store.client.InvalidTransaction'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_event_store.client.InvalidTransaction'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_event_store.client.MaximumAppendSizeExceeded'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Bin, 0, 0, 0, id(0, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<8, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1};
'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 ->
    'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        8 -> 'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.MaximumAppendSizeExceeded'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F@_1}.

'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.MaximumAppendSizeExceeded_maxAppendSize'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = {id((X bsl N + Acc) band 4294967295, TrUserData), Rest},
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.MaximumAppendSizeExceeded'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 ->
    'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.MaximumAppendSizeExceeded'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.MaximumAppendSizeExceeded'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.MaximumAppendSizeExceeded'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.MaximumAppendSizeExceeded'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.MaximumAppendSizeExceeded'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_event_store.client.BadRequest'(Bin, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Bin, 0, 0, 0, id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_event_store.client.BadRequest'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'd_field_event_store.client.BadRequest_message'(Rest, Z1, Z2, F, F@_1, TrUserData);
'dfp_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1};
'dfp_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData) -> 'dg_read_field_def_event_store.client.BadRequest'(Other, Z1, Z2, F, F@_1, TrUserData).

'dg_read_field_def_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'dg_read_field_def_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_event_store.client.BadRequest_message'(Rest, 0, 0, 0, F@_1, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                1 -> 'skip_64_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                2 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                3 -> 'skip_group_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData);
                5 -> 'skip_32_event_store.client.BadRequest'(Rest, 0, 0, Key bsr 3, F@_1, TrUserData)
            end
    end;
'dg_read_field_def_event_store.client.BadRequest'(<<>>, 0, 0, _, F@_1, _) -> #'event_store.client.BadRequest'{message = F@_1}.

'd_field_event_store.client.BadRequest_message'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'd_field_event_store.client.BadRequest_message'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'd_field_event_store.client.BadRequest_message'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_event_store.client.BadRequest'(RestF, 0, 0, F, NewFValue, TrUserData).

'skip_varint_event_store.client.BadRequest'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'skip_varint_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData);
'skip_varint_event_store.client.BadRequest'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_length_delimited_event_store.client.BadRequest'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) when N < 57 -> 'skip_length_delimited_event_store.client.BadRequest'(Rest, N + 7, X bsl N + Acc, F, F@_1, TrUserData);
'skip_length_delimited_event_store.client.BadRequest'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_event_store.client.BadRequest'(Rest2, 0, 0, F, F@_1, TrUserData).

'skip_group_event_store.client.BadRequest'(Bin, _, Z2, FNum, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_event_store.client.BadRequest'(Rest, 0, Z2, FNum, F@_1, TrUserData).

'skip_32_event_store.client.BadRequest'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'skip_64_event_store.client.BadRequest'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, TrUserData) -> 'dfp_read_field_def_event_store.client.BadRequest'(Rest, Z1, Z2, F, F@_1, TrUserData).

'decode_msg_google.protobuf.Empty'(Bin, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Bin, 0, 0, 0, TrUserData).

'dfp_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{};
'dfp_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData) -> 'dg_read_field_def_google.protobuf.Empty'(Other, Z1, Z2, F, TrUserData).

'dg_read_field_def_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'dg_read_field_def_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, _, TrUserData) ->
    Key = X bsl N + Acc,
    case Key band 7 of
        0 -> 'skip_varint_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        1 -> 'skip_64_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        2 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        3 -> 'skip_group_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData);
        5 -> 'skip_32_google.protobuf.Empty'(Rest, 0, 0, Key bsr 3, TrUserData)
    end;
'dg_read_field_def_google.protobuf.Empty'(<<>>, 0, 0, _, _) -> #'google.protobuf.Empty'{}.

'skip_varint_google.protobuf.Empty'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'skip_varint_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData);
'skip_varint_google.protobuf.Empty'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_length_delimited_google.protobuf.Empty'(<<1:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) when N < 57 -> 'skip_length_delimited_google.protobuf.Empty'(Rest, N + 7, X bsl N + Acc, F, TrUserData);
'skip_length_delimited_google.protobuf.Empty'(<<0:1, X:7, Rest/binary>>, N, Acc, F, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_google.protobuf.Empty'(Rest2, 0, 0, F, TrUserData).

'skip_group_google.protobuf.Empty'(Bin, _, Z2, FNum, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_google.protobuf.Empty'(Rest, 0, Z2, FNum, TrUserData).

'skip_32_google.protobuf.Empty'(<<_:32, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'skip_64_google.protobuf.Empty'(<<_:64, Rest/binary>>, Z1, Z2, F, TrUserData) -> 'dfp_read_field_def_google.protobuf.Empty'(Rest, Z1, Z2, F, TrUserData).

'decode_msg_map<string,string>'(Bin, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Bin, 0, 0, 0, id(<<>>, TrUserData), id(<<>>, TrUserData), TrUserData).

'dfp_read_field_def_map<string,string>'(<<10, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,string>_key'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,string>'(<<18, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'd_field_map<string,string>_value'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'dfp_read_field_def_map<string,string>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,string>'{key = F@_1, value = F@_2};
'dfp_read_field_def_map<string,string>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dg_read_field_def_map<string,string>'(Other, Z1, Z2, F, F@_1, F@_2, TrUserData).

'dg_read_field_def_map<string,string>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 32 - 7 -> 'dg_read_field_def_map<string,string>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'dg_read_field_def_map<string,string>'(<<0:1, X:7, Rest/binary>>, N, Acc, _, F@_1, F@_2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
        10 -> 'd_field_map<string,string>_key'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        18 -> 'd_field_map<string,string>_value'(Rest, 0, 0, 0, F@_1, F@_2, TrUserData);
        _ ->
            case Key band 7 of
                0 -> 'skip_varint_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                1 -> 'skip_64_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                2 -> 'skip_length_delimited_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                3 -> 'skip_group_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData);
                5 -> 'skip_32_map<string,string>'(Rest, 0, 0, Key bsr 3, F@_1, F@_2, TrUserData)
            end
    end;
'dg_read_field_def_map<string,string>'(<<>>, 0, 0, _, F@_1, F@_2, _) -> #'map<string,string>'{key = F@_1, value = F@_2}.

'd_field_map<string,string>_key'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,string>_key'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,string>_key'(<<0:1, X:7, Rest/binary>>, N, Acc, F, _, F@_2, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,string>'(RestF, 0, 0, F, NewFValue, F@_2, TrUserData).

'd_field_map<string,string>_value'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'd_field_map<string,string>_value'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'd_field_map<string,string>_value'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, _, TrUserData) ->
    {NewFValue, RestF} = begin Len = X bsl N + Acc, <<Bytes:Len/binary, Rest2/binary>> = Rest, Bytes2 = binary:copy(Bytes), {id(Bytes2, TrUserData), Rest2} end,
    'dfp_read_field_def_map<string,string>'(RestF, 0, 0, F, F@_1, NewFValue, TrUserData).

'skip_varint_map<string,string>'(<<1:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'skip_varint_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData);
'skip_varint_map<string,string>'(<<0:1, _:7, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_length_delimited_map<string,string>'(<<1:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) when N < 57 -> 'skip_length_delimited_map<string,string>'(Rest, N + 7, X bsl N + Acc, F, F@_1, F@_2, TrUserData);
'skip_length_delimited_map<string,string>'(<<0:1, X:7, Rest/binary>>, N, Acc, F, F@_1, F@_2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_map<string,string>'(Rest2, 0, 0, F, F@_1, F@_2, TrUserData).

'skip_group_map<string,string>'(Bin, _, Z2, FNum, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_map<string,string>'(Rest, 0, Z2, FNum, F@_1, F@_2, TrUserData).

'skip_32_map<string,string>'(<<_:32, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'skip_64_map<string,string>'(<<_:64, Rest/binary>>, Z1, Z2, F, F@_1, F@_2, TrUserData) -> 'dfp_read_field_def_map<string,string>'(Rest, Z1, Z2, F, F@_1, F@_2, TrUserData).

'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(0) -> 'Unknown';
'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(1) -> 'Park';
'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(2) -> 'Retry';
'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(3) -> 'Skip';
'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(4) -> 'Stop';
'd_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(V) -> V.

'd_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(0) -> 'DispatchToSingle';
'd_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(1) -> 'RoundRobin';
'd_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(2) -> 'Pinned';
'd_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(V) -> V.

'd_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(0) -> 'DispatchToSingle';
'd_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(1) -> 'RoundRobin';
'd_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(2) -> 'Pinned';
'd_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(V) -> V.

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New) when element(1, Prev) =:= element(1, New) -> merge_msgs(Prev, New, element(1, Prev), []).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) -> merge_msgs(Prev, New, MsgName, []);
merge_msgs(Prev, New, Opts) when element(1, Prev) =:= element(1, New), is_list(Opts) -> merge_msgs(Prev, New, element(1, Prev), Opts).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.persistent_subscriptions.ReadReq.Options' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Ack' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Nack' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp' -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Options' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.StreamOptions' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Position' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Settings' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.CreateResp' -> 'merge_msg_event_store.client.persistent_subscriptions.CreateResp'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Options' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.AllOptions' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Position' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Settings' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.UpdateResp' -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateResp'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq.Options' -> 'merge_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq' -> 'merge_msg_event_store.client.persistent_subscriptions.DeleteReq'(Prev, New, TrUserData);
        'event_store.client.persistent_subscriptions.DeleteResp' -> 'merge_msg_event_store.client.persistent_subscriptions.DeleteResp'(Prev, New, TrUserData);
        'event_store.client.UUID.Structured' -> 'merge_msg_event_store.client.UUID.Structured'(Prev, New, TrUserData);
        'event_store.client.UUID' -> 'merge_msg_event_store.client.UUID'(Prev, New, TrUserData);
        'event_store.client.Empty' -> 'merge_msg_event_store.client.Empty'(Prev, New, TrUserData);
        'event_store.client.StreamIdentifier' -> 'merge_msg_event_store.client.StreamIdentifier'(Prev, New, TrUserData);
        'event_store.client.AllStreamPosition' -> 'merge_msg_event_store.client.AllStreamPosition'(Prev, New, TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'merge_msg_event_store.client.WrongExpectedVersion'(Prev, New, TrUserData);
        'event_store.client.AccessDenied' -> 'merge_msg_event_store.client.AccessDenied'(Prev, New, TrUserData);
        'event_store.client.StreamDeleted' -> 'merge_msg_event_store.client.StreamDeleted'(Prev, New, TrUserData);
        'event_store.client.Timeout' -> 'merge_msg_event_store.client.Timeout'(Prev, New, TrUserData);
        'event_store.client.Unknown' -> 'merge_msg_event_store.client.Unknown'(Prev, New, TrUserData);
        'event_store.client.InvalidTransaction' -> 'merge_msg_event_store.client.InvalidTransaction'(Prev, New, TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'merge_msg_event_store.client.MaximumAppendSizeExceeded'(Prev, New, TrUserData);
        'event_store.client.BadRequest' -> 'merge_msg_event_store.client.BadRequest'(Prev, New, TrUserData);
        'google.protobuf.Empty' -> 'merge_msg_google.protobuf.Empty'(Prev, New, TrUserData)
    end.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(#'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = PFstream_option, group_name = PFgroup_name, buffer_size = PFbuffer_size,
                                                                                                                                       uuid_option = PFuuid_option},
                                                                        #'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = NFstream_option, group_name = NFgroup_name, buffer_size = NFbuffer_size, uuid_option = NFuuid_option}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option =
                                                                       case {PFstream_option, NFstream_option} of
                                                                           {{stream_identifier, OPFstream_option}, {stream_identifier, ONFstream_option}} -> {stream_identifier, 'merge_msg_event_store.client.StreamIdentifier'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                           {{all, OPFstream_option}, {all, ONFstream_option}} -> {all, 'merge_msg_event_store.client.Empty'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                           {_, undefined} -> PFstream_option;
                                                                           _ -> NFstream_option
                                                                       end,
                                                                   group_name =
                                                                       if NFgroup_name =:= undefined -> PFgroup_name;
                                                                          true -> NFgroup_name
                                                                       end,
                                                                   buffer_size =
                                                                       if NFbuffer_size =:= undefined -> PFbuffer_size;
                                                                          true -> NFbuffer_size
                                                                       end,
                                                                   uuid_option =
                                                                       if PFuuid_option /= undefined, NFuuid_option /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(PFuuid_option, NFuuid_option, TrUserData);
                                                                          PFuuid_option == undefined -> NFuuid_option;
                                                                          NFuuid_option == undefined -> PFuuid_option
                                                                       end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(#'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = PFcontent},
                                                                                   #'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = NFcontent}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content =
                                                                                  case {PFcontent, NFcontent} of
                                                                                      {{structured, OPFcontent}, {structured, ONFcontent}} -> {structured, 'merge_msg_event_store.client.Empty'(OPFcontent, ONFcontent, TrUserData)};
                                                                                      {{string, OPFcontent}, {string, ONFcontent}} -> {string, 'merge_msg_event_store.client.Empty'(OPFcontent, ONFcontent, TrUserData)};
                                                                                      {_, undefined} -> PFcontent;
                                                                                      _ -> NFcontent
                                                                                  end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(#'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = PFid, ids = PFids}, #'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = NFid, ids = NFids}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Ack'{id =
                                                                   if NFid =:= undefined -> PFid;
                                                                      true -> NFid
                                                                   end,
                                                               ids =
                                                                   if PFids /= undefined, NFids /= undefined -> 'erlang_++'(PFids, NFids, TrUserData);
                                                                      PFids == undefined -> NFids;
                                                                      NFids == undefined -> PFids
                                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(#'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = PFid, ids = PFids, action = PFaction, reason = PFreason},
                                                                     #'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = NFid, ids = NFids, action = NFaction, reason = NFreason}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq.Nack'{id =
                                                                    if NFid =:= undefined -> PFid;
                                                                       true -> NFid
                                                                    end,
                                                                ids =
                                                                    if PFids /= undefined, NFids /= undefined -> 'erlang_++'(PFids, NFids, TrUserData);
                                                                       PFids == undefined -> NFids;
                                                                       NFids == undefined -> PFids
                                                                    end,
                                                                action =
                                                                    if NFaction =:= undefined -> PFaction;
                                                                       true -> NFaction
                                                                    end,
                                                                reason =
                                                                    if NFreason =:= undefined -> PFreason;
                                                                       true -> NFreason
                                                                    end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadReq'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadReq'(#'event_store.client.persistent_subscriptions.ReadReq'{content = PFcontent}, #'event_store.client.persistent_subscriptions.ReadReq'{content = NFcontent}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadReq'{content =
                                                               case {PFcontent, NFcontent} of
                                                                   {{options, OPFcontent}, {options, ONFcontent}} -> {options, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(OPFcontent, ONFcontent, TrUserData)};
                                                                   {{ack, OPFcontent}, {ack, ONFcontent}} -> {ack, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(OPFcontent, ONFcontent, TrUserData)};
                                                                   {{nack, OPFcontent}, {nack, ONFcontent}} -> {nack, 'merge_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(OPFcontent, ONFcontent, TrUserData)};
                                                                   {_, undefined} -> PFcontent;
                                                                   _ -> NFcontent
                                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = PFevent, link = PFlink, position = PFposition, count = PFcount},
                                                                           #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = NFevent, link = NFlink, position = NFposition, count = NFcount}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event =
                                                                          if PFevent /= undefined, NFevent /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(PFevent, NFevent, TrUserData);
                                                                             PFevent == undefined -> NFevent;
                                                                             NFevent == undefined -> PFevent
                                                                          end,
                                                                      link =
                                                                          if PFlink /= undefined, NFlink /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(PFlink, NFlink, TrUserData);
                                                                             PFlink == undefined -> NFlink;
                                                                             NFlink == undefined -> PFlink
                                                                          end,
                                                                      position =
                                                                          case {PFposition, NFposition} of
                                                                              {{no_position, OPFposition}, {no_position, ONFposition}} -> {no_position, 'merge_msg_event_store.client.Empty'(OPFposition, ONFposition, TrUserData)};
                                                                              {_, undefined} -> PFposition;
                                                                              _ -> NFposition
                                                                          end,
                                                                      count =
                                                                          case {PFcount, NFcount} of
                                                                              {{no_retry_count, OPFcount}, {no_retry_count, ONFcount}} -> {no_retry_count, 'merge_msg_event_store.client.Empty'(OPFcount, ONFcount, TrUserData)};
                                                                              {_, undefined} -> PFcount;
                                                                              _ -> NFcount
                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = PFid, stream_identifier = PFstream_identifier,
                                                                                                                                                                         stream_revision = PFstream_revision, prepare_position = PFprepare_position, commit_position = PFcommit_position,
                                                                                                                                                                         metadata = PFmetadata, custom_metadata = PFcustom_metadata, data = PFdata},
                                                                                         #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = NFid, stream_identifier = NFstream_identifier, stream_revision = NFstream_revision, prepare_position = NFprepare_position,
                                                                                                                                                                         commit_position = NFcommit_position, metadata = NFmetadata, custom_metadata = NFcustom_metadata, data = NFdata},
                                                                                         TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id =
                                                                                        if PFid /= undefined, NFid /= undefined -> 'merge_msg_event_store.client.UUID'(PFid, NFid, TrUserData);
                                                                                           PFid == undefined -> NFid;
                                                                                           NFid == undefined -> PFid
                                                                                        end,
                                                                                    stream_identifier =
                                                                                        if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                                           PFstream_identifier == undefined -> NFstream_identifier;
                                                                                           NFstream_identifier == undefined -> PFstream_identifier
                                                                                        end,
                                                                                    stream_revision =
                                                                                        if NFstream_revision =:= undefined -> PFstream_revision;
                                                                                           true -> NFstream_revision
                                                                                        end,
                                                                                    prepare_position =
                                                                                        if NFprepare_position =:= undefined -> PFprepare_position;
                                                                                           true -> NFprepare_position
                                                                                        end,
                                                                                    commit_position =
                                                                                        if NFcommit_position =:= undefined -> PFcommit_position;
                                                                                           true -> NFcommit_position
                                                                                        end,
                                                                                    metadata =
                                                                                        if PFmetadata /= undefined, NFmetadata /= undefined -> 'tr_merge_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(PFmetadata, NFmetadata, TrUserData);
                                                                                           PFmetadata == undefined -> NFmetadata;
                                                                                           NFmetadata == undefined -> PFmetadata
                                                                                        end,
                                                                                    custom_metadata =
                                                                                        if NFcustom_metadata =:= undefined -> PFcustom_metadata;
                                                                                           true -> NFcustom_metadata
                                                                                        end,
                                                                                    data =
                                                                                        if NFdata =:= undefined -> PFdata;
                                                                                           true -> NFdata
                                                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(#'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = PFsubscription_id},
                                                                                          #'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = NFsubscription_id}, _) ->
    #'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id =
                                                                                         if NFsubscription_id =:= undefined -> PFsubscription_id;
                                                                                            true -> NFsubscription_id
                                                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.ReadResp'/3}).
'merge_msg_event_store.client.persistent_subscriptions.ReadResp'(#'event_store.client.persistent_subscriptions.ReadResp'{content = PFcontent}, #'event_store.client.persistent_subscriptions.ReadResp'{content = NFcontent}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.ReadResp'{content =
                                                                case {PFcontent, NFcontent} of
                                                                    {{event, OPFcontent}, {event, ONFcontent}} -> {event, 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(OPFcontent, ONFcontent, TrUserData)};
                                                                    {{subscription_confirmation, OPFcontent}, {subscription_confirmation, ONFcontent}} ->
                                                                        {subscription_confirmation, 'merge_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(OPFcontent, ONFcontent, TrUserData)};
                                                                    {_, undefined} -> PFcontent;
                                                                    _ -> NFcontent
                                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Options'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(#'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = PFstream_option, stream_identifier = PFstream_identifier, group_name = PFgroup_name,
                                                                                                                                           settings = PFsettings},
                                                                          #'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = NFstream_option, stream_identifier = NFstream_identifier, group_name = NFgroup_name, settings = NFsettings}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option =
                                                                         case {PFstream_option, NFstream_option} of
                                                                             {{stream, OPFstream_option}, {stream, ONFstream_option}} -> {stream, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {{all, OPFstream_option}, {all, ONFstream_option}} -> {all, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {_, undefined} -> PFstream_option;
                                                                             _ -> NFstream_option
                                                                         end,
                                                                     stream_identifier =
                                                                         if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                            PFstream_identifier == undefined -> NFstream_identifier;
                                                                            NFstream_identifier == undefined -> PFstream_identifier
                                                                         end,
                                                                     group_name =
                                                                         if NFgroup_name =:= undefined -> PFgroup_name;
                                                                            true -> NFgroup_name
                                                                         end,
                                                                     settings =
                                                                         if PFsettings /= undefined, NFsettings /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(PFsettings, NFsettings, TrUserData);
                                                                            PFsettings == undefined -> NFsettings;
                                                                            NFsettings == undefined -> PFsettings
                                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = PFstream_identifier, revision_option = PFrevision_option},
                                                                                #'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = NFstream_identifier, revision_option = NFrevision_option}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier =
                                                                               if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                                  PFstream_identifier == undefined -> NFstream_identifier;
                                                                                  NFstream_identifier == undefined -> PFstream_identifier
                                                                               end,
                                                                           revision_option =
                                                                               case {PFrevision_option, NFrevision_option} of
                                                                                   {{start, OPFrevision_option}, {start, ONFrevision_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                                   {{'end', OPFrevision_option}, {'end', ONFrevision_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                                   {_, undefined} -> PFrevision_option;
                                                                                   _ -> NFrevision_option
                                                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = PFall_option, filter_option = PFfilter_option},
                                                                             #'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = NFall_option, filter_option = NFfilter_option}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option =
                                                                            case {PFall_option, NFall_option} of
                                                                                {{position, OPFall_option}, {position, ONFall_option}} -> {position, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {{start, OPFall_option}, {start, ONFall_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {{'end', OPFall_option}, {'end', ONFall_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {_, undefined} -> PFall_option;
                                                                                _ -> NFall_option
                                                                            end,
                                                                        filter_option =
                                                                            case {PFfilter_option, NFfilter_option} of
                                                                                {{filter, OPFfilter_option}, {filter, ONFfilter_option}} -> {filter, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(OPFfilter_option, ONFfilter_option, TrUserData)};
                                                                                {{no_filter, OPFfilter_option}, {no_filter, ONFfilter_option}} -> {no_filter, 'merge_msg_event_store.client.Empty'(OPFfilter_option, ONFfilter_option, TrUserData)};
                                                                                {_, undefined} -> PFfilter_option;
                                                                                _ -> NFfilter_option
                                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = PFregex, prefix = PFprefix},
                                                                                                      #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = NFregex, prefix = NFprefix}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex =
                                                                                                     if NFregex =:= undefined -> PFregex;
                                                                                                        true -> NFregex
                                                                                                     end,
                                                                                                 prefix =
                                                                                                     if PFprefix /= undefined, NFprefix /= undefined -> 'erlang_++'(PFprefix, NFprefix, TrUserData);
                                                                                                        PFprefix == undefined -> NFprefix;
                                                                                                        NFprefix == undefined -> PFprefix
                                                                                                     end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = PFfilter, window = PFwindow,
                                                                                                                                                                             checkpointIntervalMultiplier = PFcheckpointIntervalMultiplier},
                                                                                           #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = NFfilter, window = NFwindow, checkpointIntervalMultiplier = NFcheckpointIntervalMultiplier}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter =
                                                                                          case {PFfilter, NFfilter} of
                                                                                              {{stream_identifier, OPFfilter}, {stream_identifier, ONFfilter}} ->
                                                                                                  {stream_identifier, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(OPFfilter, ONFfilter, TrUserData)};
                                                                                              {{event_type, OPFfilter}, {event_type, ONFfilter}} -> {event_type, 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(OPFfilter, ONFfilter, TrUserData)};
                                                                                              {_, undefined} -> PFfilter;
                                                                                              _ -> NFfilter
                                                                                          end,
                                                                                      window =
                                                                                          case {PFwindow, NFwindow} of
                                                                                              {{count, OPFwindow}, {count, ONFwindow}} -> {count, 'merge_msg_event_store.client.Empty'(OPFwindow, ONFwindow, TrUserData)};
                                                                                              {_, undefined} -> PFwindow;
                                                                                              _ -> NFwindow
                                                                                          end,
                                                                                      checkpointIntervalMultiplier =
                                                                                          if NFcheckpointIntervalMultiplier =:= undefined -> PFcheckpointIntervalMultiplier;
                                                                                             true -> NFcheckpointIntervalMultiplier
                                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Position'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(#'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                                           #'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position =
                                                                          if NFcommit_position =:= undefined -> PFcommit_position;
                                                                             true -> NFcommit_position
                                                                          end,
                                                                      prepare_position =
                                                                          if NFprepare_position =:= undefined -> PFprepare_position;
                                                                             true -> NFprepare_position
                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(#'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = PFresolve_links, revision = PFrevision, extra_statistics = PFextra_statistics,
                                                                                                                                             max_retry_count = PFmax_retry_count, min_checkpoint_count = PFmin_checkpoint_count, max_checkpoint_count = PFmax_checkpoint_count,
                                                                                                                                             max_subscriber_count = PFmax_subscriber_count, live_buffer_size = PFlive_buffer_size, read_batch_size = PFread_batch_size,
                                                                                                                                             history_buffer_size = PFhistory_buffer_size, named_consumer_strategy = PFnamed_consumer_strategy, message_timeout = PFmessage_timeout,
                                                                                                                                             checkpoint_after = PFcheckpoint_after},
                                                                           #'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = NFresolve_links, revision = NFrevision, extra_statistics = NFextra_statistics, max_retry_count = NFmax_retry_count,
                                                                                                                                             min_checkpoint_count = NFmin_checkpoint_count, max_checkpoint_count = NFmax_checkpoint_count, max_subscriber_count = NFmax_subscriber_count,
                                                                                                                                             live_buffer_size = NFlive_buffer_size, read_batch_size = NFread_batch_size, history_buffer_size = NFhistory_buffer_size,
                                                                                                                                             named_consumer_strategy = NFnamed_consumer_strategy, message_timeout = NFmessage_timeout, checkpoint_after = NFcheckpoint_after},
                                                                           _) ->
    #'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links =
                                                                          if NFresolve_links =:= undefined -> PFresolve_links;
                                                                             true -> NFresolve_links
                                                                          end,
                                                                      revision =
                                                                          if NFrevision =:= undefined -> PFrevision;
                                                                             true -> NFrevision
                                                                          end,
                                                                      extra_statistics =
                                                                          if NFextra_statistics =:= undefined -> PFextra_statistics;
                                                                             true -> NFextra_statistics
                                                                          end,
                                                                      max_retry_count =
                                                                          if NFmax_retry_count =:= undefined -> PFmax_retry_count;
                                                                             true -> NFmax_retry_count
                                                                          end,
                                                                      min_checkpoint_count =
                                                                          if NFmin_checkpoint_count =:= undefined -> PFmin_checkpoint_count;
                                                                             true -> NFmin_checkpoint_count
                                                                          end,
                                                                      max_checkpoint_count =
                                                                          if NFmax_checkpoint_count =:= undefined -> PFmax_checkpoint_count;
                                                                             true -> NFmax_checkpoint_count
                                                                          end,
                                                                      max_subscriber_count =
                                                                          if NFmax_subscriber_count =:= undefined -> PFmax_subscriber_count;
                                                                             true -> NFmax_subscriber_count
                                                                          end,
                                                                      live_buffer_size =
                                                                          if NFlive_buffer_size =:= undefined -> PFlive_buffer_size;
                                                                             true -> NFlive_buffer_size
                                                                          end,
                                                                      read_batch_size =
                                                                          if NFread_batch_size =:= undefined -> PFread_batch_size;
                                                                             true -> NFread_batch_size
                                                                          end,
                                                                      history_buffer_size =
                                                                          if NFhistory_buffer_size =:= undefined -> PFhistory_buffer_size;
                                                                             true -> NFhistory_buffer_size
                                                                          end,
                                                                      named_consumer_strategy =
                                                                          if NFnamed_consumer_strategy =:= undefined -> PFnamed_consumer_strategy;
                                                                             true -> NFnamed_consumer_strategy
                                                                          end,
                                                                      message_timeout =
                                                                          if NFmessage_timeout =:= undefined -> PFmessage_timeout;
                                                                             true -> NFmessage_timeout
                                                                          end,
                                                                      checkpoint_after =
                                                                          if NFcheckpoint_after =:= undefined -> PFcheckpoint_after;
                                                                             true -> NFcheckpoint_after
                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateReq'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateReq'(#'event_store.client.persistent_subscriptions.CreateReq'{options = PFoptions}, #'event_store.client.persistent_subscriptions.CreateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.CreateReq'{options =
                                                                 if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                                    PFoptions == undefined -> NFoptions;
                                                                    NFoptions == undefined -> PFoptions
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.CreateResp'/3}).
'merge_msg_event_store.client.persistent_subscriptions.CreateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(#'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = PFstream_option, stream_identifier = PFstream_identifier, group_name = PFgroup_name,
                                                                                                                                           settings = PFsettings},
                                                                          #'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = NFstream_option, stream_identifier = NFstream_identifier, group_name = NFgroup_name, settings = NFsettings}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option =
                                                                         case {PFstream_option, NFstream_option} of
                                                                             {{stream, OPFstream_option}, {stream, ONFstream_option}} -> {stream, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {{all, OPFstream_option}, {all, ONFstream_option}} -> {all, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {_, undefined} -> PFstream_option;
                                                                             _ -> NFstream_option
                                                                         end,
                                                                     stream_identifier =
                                                                         if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                            PFstream_identifier == undefined -> NFstream_identifier;
                                                                            NFstream_identifier == undefined -> PFstream_identifier
                                                                         end,
                                                                     group_name =
                                                                         if NFgroup_name =:= undefined -> PFgroup_name;
                                                                            true -> NFgroup_name
                                                                         end,
                                                                     settings =
                                                                         if PFsettings /= undefined, NFsettings /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(PFsettings, NFsettings, TrUserData);
                                                                            PFsettings == undefined -> NFsettings;
                                                                            NFsettings == undefined -> PFsettings
                                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = PFstream_identifier, revision_option = PFrevision_option},
                                                                                #'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = NFstream_identifier, revision_option = NFrevision_option}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier =
                                                                               if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                                                                  PFstream_identifier == undefined -> NFstream_identifier;
                                                                                  NFstream_identifier == undefined -> PFstream_identifier
                                                                               end,
                                                                           revision_option =
                                                                               case {PFrevision_option, NFrevision_option} of
                                                                                   {{start, OPFrevision_option}, {start, ONFrevision_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                                   {{'end', OPFrevision_option}, {'end', ONFrevision_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFrevision_option, ONFrevision_option, TrUserData)};
                                                                                   {_, undefined} -> PFrevision_option;
                                                                                   _ -> NFrevision_option
                                                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = PFall_option},
                                                                             #'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = NFall_option}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option =
                                                                            case {PFall_option, NFall_option} of
                                                                                {{position, OPFall_option}, {position, ONFall_option}} -> {position, 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {{start, OPFall_option}, {start, ONFall_option}} -> {start, 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {{'end', OPFall_option}, {'end', ONFall_option}} -> {'end', 'merge_msg_event_store.client.Empty'(OPFall_option, ONFall_option, TrUserData)};
                                                                                {_, undefined} -> PFall_option;
                                                                                _ -> NFall_option
                                                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(#'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                                           #'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position =
                                                                          if NFcommit_position =:= undefined -> PFcommit_position;
                                                                             true -> NFcommit_position
                                                                          end,
                                                                      prepare_position =
                                                                          if NFprepare_position =:= undefined -> PFprepare_position;
                                                                             true -> NFprepare_position
                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(#'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = PFresolve_links, revision = PFrevision, extra_statistics = PFextra_statistics,
                                                                                                                                             max_retry_count = PFmax_retry_count, min_checkpoint_count = PFmin_checkpoint_count, max_checkpoint_count = PFmax_checkpoint_count,
                                                                                                                                             max_subscriber_count = PFmax_subscriber_count, live_buffer_size = PFlive_buffer_size, read_batch_size = PFread_batch_size,
                                                                                                                                             history_buffer_size = PFhistory_buffer_size, named_consumer_strategy = PFnamed_consumer_strategy, message_timeout = PFmessage_timeout,
                                                                                                                                             checkpoint_after = PFcheckpoint_after},
                                                                           #'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = NFresolve_links, revision = NFrevision, extra_statistics = NFextra_statistics, max_retry_count = NFmax_retry_count,
                                                                                                                                             min_checkpoint_count = NFmin_checkpoint_count, max_checkpoint_count = NFmax_checkpoint_count, max_subscriber_count = NFmax_subscriber_count,
                                                                                                                                             live_buffer_size = NFlive_buffer_size, read_batch_size = NFread_batch_size, history_buffer_size = NFhistory_buffer_size,
                                                                                                                                             named_consumer_strategy = NFnamed_consumer_strategy, message_timeout = NFmessage_timeout, checkpoint_after = NFcheckpoint_after},
                                                                           _) ->
    #'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links =
                                                                          if NFresolve_links =:= undefined -> PFresolve_links;
                                                                             true -> NFresolve_links
                                                                          end,
                                                                      revision =
                                                                          if NFrevision =:= undefined -> PFrevision;
                                                                             true -> NFrevision
                                                                          end,
                                                                      extra_statistics =
                                                                          if NFextra_statistics =:= undefined -> PFextra_statistics;
                                                                             true -> NFextra_statistics
                                                                          end,
                                                                      max_retry_count =
                                                                          if NFmax_retry_count =:= undefined -> PFmax_retry_count;
                                                                             true -> NFmax_retry_count
                                                                          end,
                                                                      min_checkpoint_count =
                                                                          if NFmin_checkpoint_count =:= undefined -> PFmin_checkpoint_count;
                                                                             true -> NFmin_checkpoint_count
                                                                          end,
                                                                      max_checkpoint_count =
                                                                          if NFmax_checkpoint_count =:= undefined -> PFmax_checkpoint_count;
                                                                             true -> NFmax_checkpoint_count
                                                                          end,
                                                                      max_subscriber_count =
                                                                          if NFmax_subscriber_count =:= undefined -> PFmax_subscriber_count;
                                                                             true -> NFmax_subscriber_count
                                                                          end,
                                                                      live_buffer_size =
                                                                          if NFlive_buffer_size =:= undefined -> PFlive_buffer_size;
                                                                             true -> NFlive_buffer_size
                                                                          end,
                                                                      read_batch_size =
                                                                          if NFread_batch_size =:= undefined -> PFread_batch_size;
                                                                             true -> NFread_batch_size
                                                                          end,
                                                                      history_buffer_size =
                                                                          if NFhistory_buffer_size =:= undefined -> PFhistory_buffer_size;
                                                                             true -> NFhistory_buffer_size
                                                                          end,
                                                                      named_consumer_strategy =
                                                                          if NFnamed_consumer_strategy =:= undefined -> PFnamed_consumer_strategy;
                                                                             true -> NFnamed_consumer_strategy
                                                                          end,
                                                                      message_timeout =
                                                                          if NFmessage_timeout =:= undefined -> PFmessage_timeout;
                                                                             true -> NFmessage_timeout
                                                                          end,
                                                                      checkpoint_after =
                                                                          if NFcheckpoint_after =:= undefined -> PFcheckpoint_after;
                                                                             true -> NFcheckpoint_after
                                                                          end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateReq'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateReq'(#'event_store.client.persistent_subscriptions.UpdateReq'{options = PFoptions}, #'event_store.client.persistent_subscriptions.UpdateReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.UpdateReq'{options =
                                                                 if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(PFoptions, NFoptions, TrUserData);
                                                                    PFoptions == undefined -> NFoptions;
                                                                    NFoptions == undefined -> PFoptions
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.UpdateResp'/3}).
'merge_msg_event_store.client.persistent_subscriptions.UpdateResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'/3}).
'merge_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(#'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = PFstream_option, group_name = PFgroup_name},
                                                                          #'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = NFstream_option, group_name = NFgroup_name}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option =
                                                                         case {PFstream_option, NFstream_option} of
                                                                             {{stream_identifier, OPFstream_option}, {stream_identifier, ONFstream_option}} -> {stream_identifier, 'merge_msg_event_store.client.StreamIdentifier'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {{all, OPFstream_option}, {all, ONFstream_option}} -> {all, 'merge_msg_event_store.client.Empty'(OPFstream_option, ONFstream_option, TrUserData)};
                                                                             {_, undefined} -> PFstream_option;
                                                                             _ -> NFstream_option
                                                                         end,
                                                                     group_name =
                                                                         if NFgroup_name =:= undefined -> PFgroup_name;
                                                                            true -> NFgroup_name
                                                                         end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.DeleteReq'/3}).
'merge_msg_event_store.client.persistent_subscriptions.DeleteReq'(#'event_store.client.persistent_subscriptions.DeleteReq'{options = PFoptions}, #'event_store.client.persistent_subscriptions.DeleteReq'{options = NFoptions}, TrUserData) ->
    #'event_store.client.persistent_subscriptions.DeleteReq'{options =
                                                                 if PFoptions /= undefined, NFoptions /= undefined -> 'merge_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(PFoptions, NFoptions, TrUserData);
                                                                    PFoptions == undefined -> NFoptions;
                                                                    NFoptions == undefined -> PFoptions
                                                                 end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.persistent_subscriptions.DeleteResp'/3}).
'merge_msg_event_store.client.persistent_subscriptions.DeleteResp'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID.Structured'/3}).
'merge_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = PFmost_significant_bits, least_significant_bits = PFleast_significant_bits},
                                               #'event_store.client.UUID.Structured'{most_significant_bits = NFmost_significant_bits, least_significant_bits = NFleast_significant_bits}, _) ->
    #'event_store.client.UUID.Structured'{most_significant_bits =
                                              if NFmost_significant_bits =:= undefined -> PFmost_significant_bits;
                                                 true -> NFmost_significant_bits
                                              end,
                                          least_significant_bits =
                                              if NFleast_significant_bits =:= undefined -> PFleast_significant_bits;
                                                 true -> NFleast_significant_bits
                                              end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.UUID'/3}).
'merge_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = PFvalue}, #'event_store.client.UUID'{value = NFvalue}, TrUserData) ->
    #'event_store.client.UUID'{value =
                                   case {PFvalue, NFvalue} of
                                       {{structured, OPFvalue}, {structured, ONFvalue}} -> {structured, 'merge_msg_event_store.client.UUID.Structured'(OPFvalue, ONFvalue, TrUserData)};
                                       {_, undefined} -> PFvalue;
                                       _ -> NFvalue
                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Empty'/3}).
'merge_msg_event_store.client.Empty'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamIdentifier'/3}).
'merge_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = PFstream_name}, #'event_store.client.StreamIdentifier'{stream_name = NFstream_name}, _) ->
    #'event_store.client.StreamIdentifier'{stream_name =
                                               if NFstream_name =:= undefined -> PFstream_name;
                                                  true -> NFstream_name
                                               end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AllStreamPosition'/3}).
'merge_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = PFcommit_position, prepare_position = PFprepare_position},
                                                 #'event_store.client.AllStreamPosition'{commit_position = NFcommit_position, prepare_position = NFprepare_position}, _) ->
    #'event_store.client.AllStreamPosition'{commit_position =
                                                if NFcommit_position =:= undefined -> PFcommit_position;
                                                   true -> NFcommit_position
                                                end,
                                            prepare_position =
                                                if NFprepare_position =:= undefined -> PFprepare_position;
                                                   true -> NFprepare_position
                                                end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.WrongExpectedVersion'/3}).
'merge_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = PFcurrent_stream_revision_option, expected_stream_position_option = PFexpected_stream_position_option},
                                                    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option = NFcurrent_stream_revision_option, expected_stream_position_option = NFexpected_stream_position_option}, TrUserData) ->
    #'event_store.client.WrongExpectedVersion'{current_stream_revision_option =
                                                   case {PFcurrent_stream_revision_option, NFcurrent_stream_revision_option} of
                                                       {{current_no_stream, OPFcurrent_stream_revision_option}, {current_no_stream, ONFcurrent_stream_revision_option}} ->
                                                           {current_no_stream, 'merge_msg_google.protobuf.Empty'(OPFcurrent_stream_revision_option, ONFcurrent_stream_revision_option, TrUserData)};
                                                       {_, undefined} -> PFcurrent_stream_revision_option;
                                                       _ -> NFcurrent_stream_revision_option
                                                   end,
                                               expected_stream_position_option =
                                                   case {PFexpected_stream_position_option, NFexpected_stream_position_option} of
                                                       {{expected_any, OPFexpected_stream_position_option}, {expected_any, ONFexpected_stream_position_option}} -> {expected_any, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_stream_exists, OPFexpected_stream_position_option}, {expected_stream_exists, ONFexpected_stream_position_option}} ->
                                                           {expected_stream_exists, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {{expected_no_stream, OPFexpected_stream_position_option}, {expected_no_stream, ONFexpected_stream_position_option}} ->
                                                           {expected_no_stream, 'merge_msg_google.protobuf.Empty'(OPFexpected_stream_position_option, ONFexpected_stream_position_option, TrUserData)};
                                                       {_, undefined} -> PFexpected_stream_position_option;
                                                       _ -> NFexpected_stream_position_option
                                                   end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.AccessDenied'/3}).
'merge_msg_event_store.client.AccessDenied'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.StreamDeleted'/3}).
'merge_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = PFstream_identifier}, #'event_store.client.StreamDeleted'{stream_identifier = NFstream_identifier}, TrUserData) ->
    #'event_store.client.StreamDeleted'{stream_identifier =
                                            if PFstream_identifier /= undefined, NFstream_identifier /= undefined -> 'merge_msg_event_store.client.StreamIdentifier'(PFstream_identifier, NFstream_identifier, TrUserData);
                                               PFstream_identifier == undefined -> NFstream_identifier;
                                               NFstream_identifier == undefined -> PFstream_identifier
                                            end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Timeout'/3}).
'merge_msg_event_store.client.Timeout'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.Unknown'/3}).
'merge_msg_event_store.client.Unknown'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.InvalidTransaction'/3}).
'merge_msg_event_store.client.InvalidTransaction'(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,'merge_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'merge_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = PFmaxAppendSize}, #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = NFmaxAppendSize}, _) ->
    #'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize =
                                                        if NFmaxAppendSize =:= undefined -> PFmaxAppendSize;
                                                           true -> NFmaxAppendSize
                                                        end}.

-compile({nowarn_unused_function,'merge_msg_event_store.client.BadRequest'/3}).
'merge_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = PFmessage}, #'event_store.client.BadRequest'{message = NFmessage}, _) ->
    #'event_store.client.BadRequest'{message =
                                         if NFmessage =:= undefined -> PFmessage;
                                            true -> NFmessage
                                         end}.

-compile({nowarn_unused_function,'merge_msg_google.protobuf.Empty'/3}).
'merge_msg_google.protobuf.Empty'(_Prev, New, _TrUserData) -> New.


verify_msg(Msg) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), []);
verify_msg(X) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName) when is_atom(MsgName) -> verify_msg(Msg, MsgName, []);
verify_msg(Msg, Opts) when tuple_size(Msg) >= 1 -> verify_msg(Msg, element(1, Msg), Opts);
verify_msg(X, _Opts) -> mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
        'event_store.client.persistent_subscriptions.ReadReq.Options' -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption' -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Ack' -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq.Nack' -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadReq' -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent' -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent' -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation' -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.ReadResp' -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Options' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.StreamOptions' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Position' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq.Settings' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateReq' -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.CreateResp' -> 'v_msg_event_store.client.persistent_subscriptions.CreateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Options' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.AllOptions' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Position' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq.Settings' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateReq' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.UpdateResp' -> 'v_msg_event_store.client.persistent_subscriptions.UpdateResp'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq.Options' -> 'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.DeleteReq' -> 'v_msg_event_store.client.persistent_subscriptions.DeleteReq'(Msg, [MsgName], TrUserData);
        'event_store.client.persistent_subscriptions.DeleteResp' -> 'v_msg_event_store.client.persistent_subscriptions.DeleteResp'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID.Structured' -> 'v_msg_event_store.client.UUID.Structured'(Msg, [MsgName], TrUserData);
        'event_store.client.UUID' -> 'v_msg_event_store.client.UUID'(Msg, [MsgName], TrUserData);
        'event_store.client.Empty' -> 'v_msg_event_store.client.Empty'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamIdentifier' -> 'v_msg_event_store.client.StreamIdentifier'(Msg, [MsgName], TrUserData);
        'event_store.client.AllStreamPosition' -> 'v_msg_event_store.client.AllStreamPosition'(Msg, [MsgName], TrUserData);
        'event_store.client.WrongExpectedVersion' -> 'v_msg_event_store.client.WrongExpectedVersion'(Msg, [MsgName], TrUserData);
        'event_store.client.AccessDenied' -> 'v_msg_event_store.client.AccessDenied'(Msg, [MsgName], TrUserData);
        'event_store.client.StreamDeleted' -> 'v_msg_event_store.client.StreamDeleted'(Msg, [MsgName], TrUserData);
        'event_store.client.Timeout' -> 'v_msg_event_store.client.Timeout'(Msg, [MsgName], TrUserData);
        'event_store.client.Unknown' -> 'v_msg_event_store.client.Unknown'(Msg, [MsgName], TrUserData);
        'event_store.client.InvalidTransaction' -> 'v_msg_event_store.client.InvalidTransaction'(Msg, [MsgName], TrUserData);
        'event_store.client.MaximumAppendSizeExceeded' -> 'v_msg_event_store.client.MaximumAppendSizeExceeded'(Msg, [MsgName], TrUserData);
        'event_store.client.BadRequest' -> 'v_msg_event_store.client.BadRequest'(Msg, [MsgName], TrUserData);
        'google.protobuf.Empty' -> 'v_msg_google.protobuf.Empty'(Msg, [MsgName], TrUserData);
        _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(#'event_store.client.persistent_subscriptions.ReadReq.Options'{stream_option = F1, group_name = F2, buffer_size = F3, uuid_option = F4}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream_identifier, OF1} -> 'v_msg_event_store.client.StreamIdentifier'(OF1, [stream_identifier, stream_option | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [all, stream_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [stream_option | Path])
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [group_name | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_int32(F3, [buffer_size | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(F4, [uuid_option | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(#'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {structured, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [structured, content | Path], TrUserData);
        {string, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [string, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(#'event_store.client.persistent_subscriptions.ReadReq.Ack'{id = F1, ids = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bytes(F1, [id | Path], TrUserData)
    end,
    if is_list(F2) ->
           _ = ['v_msg_event_store.client.UUID'(Elem, [ids | Path], TrUserData) || Elem <- F2],
           ok;
       true -> mk_type_error({invalid_list_of, {msg, 'event_store.client.UUID'}}, F2, [ids | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadReq.Ack'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(#'event_store.client.persistent_subscriptions.ReadReq.Nack'{id = F1, ids = F2, action = F3, reason = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bytes(F1, [id | Path], TrUserData)
    end,
    if is_list(F2) ->
           _ = ['v_msg_event_store.client.UUID'(Elem, [ids | Path], TrUserData) || Elem <- F2],
           ok;
       true -> mk_type_error({invalid_list_of, {msg, 'event_store.client.UUID'}}, F2, [ids | Path])
    end,
    if F3 == undefined -> ok;
       true -> 'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(F3, [action | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_string(F4, [reason | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadReq.Nack'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadReq'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadReq'(#'event_store.client.persistent_subscriptions.ReadReq'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {options, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Options'(OF1, [options, content | Path], TrUserData);
        {ack, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Ack'(OF1, [ack, content | Path], TrUserData);
        {nack, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.ReadReq.Nack'(OF1, [nack, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'{event = F1, link = F2, position = F3, count = F4}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(F1, [event | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(F2, [link | Path], TrUserData)
    end,
    case F3 of
        undefined -> ok;
        {commit_position, OF3} -> v_type_uint64(OF3, [commit_position, position | Path], TrUserData);
        {no_position, OF3} -> 'v_msg_event_store.client.Empty'(OF3, [no_position, position | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F3, [position | Path])
    end,
    case F4 of
        undefined -> ok;
        {retry_count, OF4} -> v_type_int32(OF4, [retry_count, count | Path], TrUserData);
        {no_retry_count, OF4} -> 'v_msg_event_store.client.Empty'(OF4, [no_retry_count, count | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F4, [count | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(#'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'{id = F1, stream_identifier = F2, stream_revision = F3, prepare_position = F4,
                                                                                                                                                                     commit_position = F5, metadata = F6, custom_metadata = F7, data = F8},
                                                                                     Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.UUID'(F1, [id | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F2, [stream_identifier | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_uint64(F3, [stream_revision | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_uint64(F4, [prepare_position | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_uint64(F5, [commit_position | Path], TrUserData)
    end,
    'v_map<string,string>'(F6, [metadata | Path], TrUserData),
    if F7 == undefined -> ok;
       true -> v_type_bytes(F7, [custom_metadata | Path], TrUserData)
    end,
    if F8 == undefined -> ok;
       true -> v_type_bytes(F8, [data | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(#'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'{subscription_id = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [subscription_id | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.ReadResp'/3}).
'v_msg_event_store.client.persistent_subscriptions.ReadResp'(#'event_store.client.persistent_subscriptions.ReadResp'{content = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {event, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.ReadEvent'(OF1, [event, content | Path], TrUserData);
        {subscription_confirmation, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'(OF1, [subscription_confirmation, content | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [content | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.ReadResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.ReadResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(#'event_store.client.persistent_subscriptions.CreateReq.Options'{stream_option = F1, stream_identifier = F2, group_name = F3, settings = F4}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(OF1, [stream, stream_option | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(OF1, [all, stream_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [stream_option | Path])
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F2, [stream_identifier | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [group_name | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(F4, [settings | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'{stream_identifier = F1, revision_option = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, revision_option | Path], TrUserData);
        {start, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [start, revision_option | Path], TrUserData);
        {'end', OF2} -> 'v_msg_event_store.client.Empty'(OF2, ['end', revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [revision_option | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.StreamOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions'{all_option = F1, filter_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {position, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(OF1, [position, all_option | Path], TrUserData);
        {start, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [start, all_option | Path], TrUserData);
        {'end', OF1} -> 'v_msg_event_store.client.Empty'(OF1, ['end', all_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [all_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {filter, OF2} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(OF2, [filter, filter_option | Path], TrUserData);
        {no_filter, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [no_filter, filter_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [filter_option | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'{regex = F1, prefix = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [regex | Path], TrUserData)
    end,
    if is_list(F2) ->
           _ = [v_type_string(Elem, [prefix | Path], TrUserData) || Elem <- F2],
           ok;
       true -> mk_type_error({invalid_list_of, string}, F2, [prefix | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(#'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'{filter = F1, window = F2, checkpointIntervalMultiplier = F3}, Path,
                                                                                       TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream_identifier, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(OF1, [stream_identifier, filter | Path], TrUserData);
        {event_type, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'(OF1, [event_type, filter | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [filter | Path])
    end,
    case F2 of
        undefined -> ok;
        {max, OF2} -> v_type_uint32(OF2, [max, window | Path], TrUserData);
        {count, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [count, window | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [window | Path])
    end,
    if F3 == undefined -> ok;
       true -> v_type_uint32(F3, [checkpointIntervalMultiplier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(#'event_store.client.persistent_subscriptions.CreateReq.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(#'event_store.client.persistent_subscriptions.CreateReq.Settings'{resolve_links = F1, revision = F2, extra_statistics = F3, max_retry_count = F4, min_checkpoint_count = F5,
                                                                                                                                         max_checkpoint_count = F6, max_subscriber_count = F7, live_buffer_size = F8, read_batch_size = F9, history_buffer_size = F10, named_consumer_strategy = F11,
                                                                                                                                         message_timeout = F12, checkpoint_after = F13},
                                                                       Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bool(F1, [resolve_links | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [revision | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_bool(F3, [extra_statistics | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_int32(F4, [max_retry_count | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_int32(F5, [min_checkpoint_count | Path], TrUserData)
    end,
    if F6 == undefined -> ok;
       true -> v_type_int32(F6, [max_checkpoint_count | Path], TrUserData)
    end,
    if F7 == undefined -> ok;
       true -> v_type_int32(F7, [max_subscriber_count | Path], TrUserData)
    end,
    if F8 == undefined -> ok;
       true -> v_type_int32(F8, [live_buffer_size | Path], TrUserData)
    end,
    if F9 == undefined -> ok;
       true -> v_type_int32(F9, [read_batch_size | Path], TrUserData)
    end,
    if F10 == undefined -> ok;
       true -> v_type_int32(F10, [history_buffer_size | Path], TrUserData)
    end,
    if F11 == undefined -> ok;
       true -> 'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(F11, [named_consumer_strategy | Path], TrUserData)
    end,
    case F12 of
        undefined -> ok;
        {message_timeout_ticks, OF12} -> v_type_int64(OF12, [message_timeout_ticks, message_timeout | Path], TrUserData);
        {message_timeout_ms, OF12} -> v_type_int32(OF12, [message_timeout_ms, message_timeout | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F12, [message_timeout | Path])
    end,
    case F13 of
        undefined -> ok;
        {checkpoint_after_ticks, OF13} -> v_type_int64(OF13, [checkpoint_after_ticks, checkpoint_after | Path], TrUserData);
        {checkpoint_after_ms, OF13} -> v_type_int32(OF13, [checkpoint_after_ms, checkpoint_after | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F13, [checkpoint_after | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq.Settings'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq.Settings'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateReq'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateReq'(#'event_store.client.persistent_subscriptions.CreateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.CreateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.CreateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.CreateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.CreateResp'/3}).
'v_msg_event_store.client.persistent_subscriptions.CreateResp'(#'event_store.client.persistent_subscriptions.CreateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.persistent_subscriptions.CreateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.CreateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(#'event_store.client.persistent_subscriptions.UpdateReq.Options'{stream_option = F1, stream_identifier = F2, group_name = F3, settings = F4}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(OF1, [stream, stream_option | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(OF1, [all, stream_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [stream_option | Path])
    end,
    if F2 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F2, [stream_identifier | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [group_name | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(F4, [settings | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'{stream_identifier = F1, revision_option = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    case F2 of
        undefined -> ok;
        {revision, OF2} -> v_type_uint64(OF2, [revision, revision_option | Path], TrUserData);
        {start, OF2} -> 'v_msg_event_store.client.Empty'(OF2, [start, revision_option | Path], TrUserData);
        {'end', OF2} -> 'v_msg_event_store.client.Empty'(OF2, ['end', revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [revision_option | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(#'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'{all_option = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {position, OF1} -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(OF1, [position, all_option | Path], TrUserData);
        {start, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [start, all_option | Path], TrUserData);
        {'end', OF1} -> 'v_msg_event_store.client.Empty'(OF1, ['end', all_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [all_option | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.AllOptions'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(#'event_store.client.persistent_subscriptions.UpdateReq.Position'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Position'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq.Position'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(#'event_store.client.persistent_subscriptions.UpdateReq.Settings'{resolve_links = F1, revision = F2, extra_statistics = F3, max_retry_count = F4, min_checkpoint_count = F5,
                                                                                                                                         max_checkpoint_count = F6, max_subscriber_count = F7, live_buffer_size = F8, read_batch_size = F9, history_buffer_size = F10, named_consumer_strategy = F11,
                                                                                                                                         message_timeout = F12, checkpoint_after = F13},
                                                                       Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bool(F1, [resolve_links | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [revision | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_bool(F3, [extra_statistics | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_int32(F4, [max_retry_count | Path], TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_int32(F5, [min_checkpoint_count | Path], TrUserData)
    end,
    if F6 == undefined -> ok;
       true -> v_type_int32(F6, [max_checkpoint_count | Path], TrUserData)
    end,
    if F7 == undefined -> ok;
       true -> v_type_int32(F7, [max_subscriber_count | Path], TrUserData)
    end,
    if F8 == undefined -> ok;
       true -> v_type_int32(F8, [live_buffer_size | Path], TrUserData)
    end,
    if F9 == undefined -> ok;
       true -> v_type_int32(F9, [read_batch_size | Path], TrUserData)
    end,
    if F10 == undefined -> ok;
       true -> v_type_int32(F10, [history_buffer_size | Path], TrUserData)
    end,
    if F11 == undefined -> ok;
       true -> 'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(F11, [named_consumer_strategy | Path], TrUserData)
    end,
    case F12 of
        undefined -> ok;
        {message_timeout_ticks, OF12} -> v_type_int64(OF12, [message_timeout_ticks, message_timeout | Path], TrUserData);
        {message_timeout_ms, OF12} -> v_type_int32(OF12, [message_timeout_ms, message_timeout | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F12, [message_timeout | Path])
    end,
    case F13 of
        undefined -> ok;
        {checkpoint_after_ticks, OF13} -> v_type_int64(OF13, [checkpoint_after_ticks, checkpoint_after | Path], TrUserData);
        {checkpoint_after_ms, OF13} -> v_type_int32(OF13, [checkpoint_after_ms, checkpoint_after | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F13, [checkpoint_after | Path])
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Settings'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq.Settings'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateReq'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateReq'(#'event_store.client.persistent_subscriptions.UpdateReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.UpdateReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.UpdateResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.UpdateResp'/3}).
'v_msg_event_store.client.persistent_subscriptions.UpdateResp'(#'event_store.client.persistent_subscriptions.UpdateResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.persistent_subscriptions.UpdateResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.UpdateResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'/3}).
'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(#'event_store.client.persistent_subscriptions.DeleteReq.Options'{stream_option = F1, group_name = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {stream_identifier, OF1} -> 'v_msg_event_store.client.StreamIdentifier'(OF1, [stream_identifier, stream_option | Path], TrUserData);
        {all, OF1} -> 'v_msg_event_store.client.Empty'(OF1, [all, stream_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [stream_option | Path])
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [group_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.DeleteReq.Options'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.DeleteReq'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.DeleteReq'/3}).
'v_msg_event_store.client.persistent_subscriptions.DeleteReq'(#'event_store.client.persistent_subscriptions.DeleteReq'{options = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.persistent_subscriptions.DeleteReq.Options'(F1, [options | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.persistent_subscriptions.DeleteReq'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.DeleteReq'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.persistent_subscriptions.DeleteResp'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.persistent_subscriptions.DeleteResp'/3}).
'v_msg_event_store.client.persistent_subscriptions.DeleteResp'(#'event_store.client.persistent_subscriptions.DeleteResp'{}, _Path, _) -> ok;
'v_msg_event_store.client.persistent_subscriptions.DeleteResp'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.persistent_subscriptions.DeleteResp'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID.Structured'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID.Structured'/3}).
'v_msg_event_store.client.UUID.Structured'(#'event_store.client.UUID.Structured'{most_significant_bits = F1, least_significant_bits = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_int64(F1, [most_significant_bits | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int64(F2, [least_significant_bits | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.UUID.Structured'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID.Structured'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.UUID'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.UUID'/3}).
'v_msg_event_store.client.UUID'(#'event_store.client.UUID'{value = F1}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {structured, OF1} -> 'v_msg_event_store.client.UUID.Structured'(OF1, [structured, value | Path], TrUserData);
        {string, OF1} -> v_type_string(OF1, [string, value | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [value | Path])
    end,
    ok;
'v_msg_event_store.client.UUID'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.UUID'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Empty'/3}).
'v_msg_event_store.client.Empty'(#'event_store.client.Empty'{}, _Path, _) -> ok;
'v_msg_event_store.client.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamIdentifier'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamIdentifier'/3}).
'v_msg_event_store.client.StreamIdentifier'(#'event_store.client.StreamIdentifier'{stream_name = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_bytes(F1, [stream_name | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamIdentifier'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamIdentifier'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AllStreamPosition'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AllStreamPosition'/3}).
'v_msg_event_store.client.AllStreamPosition'(#'event_store.client.AllStreamPosition'{commit_position = F1, prepare_position = F2}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint64(F1, [commit_position | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_uint64(F2, [prepare_position | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.AllStreamPosition'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AllStreamPosition'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.WrongExpectedVersion'/3}).
'v_msg_event_store.client.WrongExpectedVersion'(#'event_store.client.WrongExpectedVersion'{current_stream_revision_option = F1, expected_stream_position_option = F2}, Path, TrUserData) ->
    case F1 of
        undefined -> ok;
        {current_stream_revision, OF1} -> v_type_uint64(OF1, [current_stream_revision, current_stream_revision_option | Path], TrUserData);
        {current_no_stream, OF1} -> 'v_msg_google.protobuf.Empty'(OF1, [current_no_stream, current_stream_revision_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F1, [current_stream_revision_option | Path])
    end,
    case F2 of
        undefined -> ok;
        {expected_stream_position, OF2} -> v_type_uint64(OF2, [expected_stream_position, expected_stream_position_option | Path], TrUserData);
        {expected_any, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_any, expected_stream_position_option | Path], TrUserData);
        {expected_stream_exists, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_stream_exists, expected_stream_position_option | Path], TrUserData);
        {expected_no_stream, OF2} -> 'v_msg_google.protobuf.Empty'(OF2, [expected_no_stream, expected_stream_position_option | Path], TrUserData);
        _ -> mk_type_error(invalid_oneof, F2, [expected_stream_position_option | Path])
    end,
    ok;
'v_msg_event_store.client.WrongExpectedVersion'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.WrongExpectedVersion'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.AccessDenied'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.AccessDenied'/3}).
'v_msg_event_store.client.AccessDenied'(#'event_store.client.AccessDenied'{}, _Path, _) -> ok;
'v_msg_event_store.client.AccessDenied'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.AccessDenied'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.StreamDeleted'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.StreamDeleted'/3}).
'v_msg_event_store.client.StreamDeleted'(#'event_store.client.StreamDeleted'{stream_identifier = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> 'v_msg_event_store.client.StreamIdentifier'(F1, [stream_identifier | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.StreamDeleted'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.StreamDeleted'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Timeout'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Timeout'/3}).
'v_msg_event_store.client.Timeout'(#'event_store.client.Timeout'{}, _Path, _) -> ok;
'v_msg_event_store.client.Timeout'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Timeout'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.Unknown'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.Unknown'/3}).
'v_msg_event_store.client.Unknown'(#'event_store.client.Unknown'{}, _Path, _) -> ok;
'v_msg_event_store.client.Unknown'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.Unknown'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.InvalidTransaction'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.InvalidTransaction'/3}).
'v_msg_event_store.client.InvalidTransaction'(#'event_store.client.InvalidTransaction'{}, _Path, _) -> ok;
'v_msg_event_store.client.InvalidTransaction'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.InvalidTransaction'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.MaximumAppendSizeExceeded'/3}).
'v_msg_event_store.client.MaximumAppendSizeExceeded'(#'event_store.client.MaximumAppendSizeExceeded'{maxAppendSize = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_uint32(F1, [maxAppendSize | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.MaximumAppendSizeExceeded'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.MaximumAppendSizeExceeded'}, X, Path).

-compile({nowarn_unused_function,'v_msg_event_store.client.BadRequest'/3}).
-dialyzer({nowarn_function,'v_msg_event_store.client.BadRequest'/3}).
'v_msg_event_store.client.BadRequest'(#'event_store.client.BadRequest'{message = F1}, Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [message | Path], TrUserData)
    end,
    ok;
'v_msg_event_store.client.BadRequest'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'event_store.client.BadRequest'}, X, Path).

-compile({nowarn_unused_function,'v_msg_google.protobuf.Empty'/3}).
-dialyzer({nowarn_function,'v_msg_google.protobuf.Empty'/3}).
'v_msg_google.protobuf.Empty'(#'google.protobuf.Empty'{}, _Path, _) -> ok;
'v_msg_google.protobuf.Empty'(X, Path, _TrUserData) -> mk_type_error({expected_msg, 'google.protobuf.Empty'}, X, Path).

-compile({nowarn_unused_function,'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'/3}).
-dialyzer({nowarn_function,'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'/3}).
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Unknown', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Park', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Retry', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Skip', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Stop', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action'}, X, Path).

-compile({nowarn_unused_function,'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'/3}).
-dialyzer({nowarn_function,'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'/3}).
'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('DispatchToSingle', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('RoundRobin', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('Pinned', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'}, X, Path).

-compile({nowarn_unused_function,'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'/3}).
-dialyzer({nowarn_function,'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'/3}).
'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('DispatchToSingle', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('RoundRobin', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('Pinned', _Path, _TrUserData) -> ok;
'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(V, _Path, _TrUserData) when -2147483648 =< V, V =< 2147483647, is_integer(V) -> ok;
'v_enum_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(X, Path, _TrUserData) -> mk_type_error({invalid_enum, 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'}, X, Path).

-compile({nowarn_unused_function,v_type_int32/3}).
-dialyzer({nowarn_function,v_type_int32/3}).
v_type_int32(N, _Path, _TrUserData) when -2147483648 =< N, N =< 2147483647 -> ok;
v_type_int32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int32, signed, 32}, N, Path);
v_type_int32(X, Path, _TrUserData) -> mk_type_error({bad_integer, int32, signed, 32}, X, Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData) when -9223372036854775808 =< N, N =< 9223372036854775807 -> ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, int64, signed, 64}, N, Path);
v_type_int64(X, Path, _TrUserData) -> mk_type_error({bad_integer, int64, signed, 64}, X, Path).

-compile({nowarn_unused_function,v_type_uint32/3}).
-dialyzer({nowarn_function,v_type_uint32/3}).
v_type_uint32(N, _Path, _TrUserData) when 0 =< N, N =< 4294967295 -> ok;
v_type_uint32(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint32, unsigned, 32}, N, Path);
v_type_uint32(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint32, unsigned, 32}, X, Path).

-compile({nowarn_unused_function,v_type_uint64/3}).
-dialyzer({nowarn_function,v_type_uint64/3}).
v_type_uint64(N, _Path, _TrUserData) when 0 =< N, N =< 18446744073709551615 -> ok;
v_type_uint64(N, Path, _TrUserData) when is_integer(N) -> mk_type_error({value_out_of_range, uint64, unsigned, 64}, N, Path);
v_type_uint64(X, Path, _TrUserData) -> mk_type_error({bad_integer, uint64, unsigned, 64}, X, Path).

-compile({nowarn_unused_function,v_type_bool/3}).
-dialyzer({nowarn_function,v_type_bool/3}).
v_type_bool(false, _Path, _TrUserData) -> ok;
v_type_bool(true, _Path, _TrUserData) -> ok;
v_type_bool(0, _Path, _TrUserData) -> ok;
v_type_bool(1, _Path, _TrUserData) -> ok;
v_type_bool(X, Path, _TrUserData) -> mk_type_error(bad_boolean_value, X, Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
        B when is_binary(B) -> ok;
        {error, _, _} -> mk_type_error(bad_unicode_string, S, Path)
    catch
        error:badarg -> mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) -> mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,v_type_bytes/3}).
-dialyzer({nowarn_function,v_type_bytes/3}).
v_type_bytes(B, _Path, _TrUserData) when is_binary(B) -> ok;
v_type_bytes(B, _Path, _TrUserData) when is_list(B) -> ok;
v_type_bytes(X, Path, _TrUserData) -> mk_type_error(bad_binary_value, X, Path).

-compile({nowarn_unused_function,'v_map<string,string>'/3}).
-dialyzer({nowarn_function,'v_map<string,string>'/3}).
'v_map<string,string>'(KVs, Path, TrUserData) when is_list(KVs) ->
    [case X of
         {Key, Value} ->
             v_type_string(Key, [key | Path], TrUserData),
             v_type_string(Value, [value | Path], TrUserData);
         _ -> mk_type_error(invalid_key_value_tuple, X, Path)
     end
     || X <- KVs],
    ok;
'v_map<string,string>'(X, Path, _TrUserData) -> mk_type_error(invalid_list_of_key_value_tuples, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error, {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) -> lists:append(lists:join(".", lists:map(fun atom_to_list/1, lists:reverse(PathR)))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.
-compile({inline,'tr_decode_init_default_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'/2}).
'tr_decode_init_default_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(_, _) -> mt_empty_map_r().

-compile({inline,'tr_merge_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'/3}).
'tr_merge_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(X1, X2, _) -> mt_merge_maptuples_r(X1, X2).

-compile({inline,'tr_decode_repeated_finalize_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'/2}).
'tr_decode_repeated_finalize_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(L, _) -> mt_finalize_items_r(L).

-compile({inline,'tr_decode_repeated_add_elem_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'/3}).
'tr_decode_repeated_add_elem_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata'(Elem, L, _) -> mt_add_item_r(Elem, L).

-compile({inline,'tr_encode_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata[x]'/2}).
'tr_encode_event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent.metadata[x]'(X, _) -> mt_maptuple_to_pseudomsg_r(X, 'map<string,string>').

-compile({inline,mt_maptuple_to_pseudomsg_r/2}).
mt_maptuple_to_pseudomsg_r({K, V}, RName) -> {RName, K, V}.


-compile({inline,mt_empty_map_r/0}).
mt_empty_map_r() -> [].

-compile({inline,mt_add_item_r/2}).
mt_add_item_r({_RName, K, V}, Acc) -> [{K, V} | Acc].


-compile({inline,mt_finalize_items_r/1}).
mt_finalize_items_r(Acc) -> mt_finalize_items_r_aux(lists:reverse(Acc), dict:new()).

mt_finalize_items_r_aux([{K, V} | Tl], D) -> mt_finalize_items_r_aux(Tl, dict:store(K, V, D));
mt_finalize_items_r_aux([], D) -> dict:to_list(D).


-compile({inline,mt_merge_maptuples_r/2}).
mt_merge_maptuples_r(L1, L2) -> dict:to_list(dict:merge(fun (_Key, _V1, V2) -> V2 end, dict:from_list(L1), dict:from_list(L2))).




get_msg_defs() ->
    [{{enum, 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action'}, [{'Unknown', 0}, {'Park', 1}, {'Retry', 2}, {'Skip', 3}, {'Stop', 4}]},
     {{enum, 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'}, [{'DispatchToSingle', 0}, {'RoundRobin', 1}, {'Pinned', 2}]},
     {{enum, 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'}, [{'DispatchToSingle', 0}, {'RoundRobin', 1}, {'Pinned', 2}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadReq.Options'},
      [#gpb_oneof{name = stream_option, rnum = 2,
                  fields =
                      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
                       #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = group_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
       #field{name = buffer_size, fnum = 3, rnum = 4, type = int32, occurrence = optional, opts = []},
       #field{name = uuid_option, fnum = 4, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadReq.Ack'},
      [#field{name = id, fnum = 1, rnum = 2, type = bytes, occurrence = optional, opts = []}, #field{name = ids, fnum = 2, rnum = 3, type = {msg, 'event_store.client.UUID'}, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadReq.Nack'},
      [#field{name = id, fnum = 1, rnum = 2, type = bytes, occurrence = optional, opts = []},
       #field{name = ids, fnum = 2, rnum = 3, type = {msg, 'event_store.client.UUID'}, occurrence = repeated, opts = []},
       #field{name = action, fnum = 3, rnum = 4, type = {enum, 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action'}, occurrence = optional, opts = []},
       #field{name = reason, fnum = 4, rnum = 5, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadReq'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Options'}, occurrence = optional, opts = []},
                       #field{name = ack, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Ack'}, occurrence = optional, opts = []},
                       #field{name = nack, fnum = 3, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Nack'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'},
      [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
       #field{name = link, fnum = 2, rnum = 3, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
       #gpb_oneof{name = position, rnum = 4,
                  fields = [#field{name = commit_position, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = no_position, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
       #gpb_oneof{name = count, rnum = 5,
                  fields = [#field{name = retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []}, #field{name = no_retry_count, fnum = 6, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'},
      [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
       #field{name = stream_identifier, fnum = 2, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #field{name = stream_revision, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []},
       #field{name = prepare_position, fnum = 4, rnum = 5, type = uint64, occurrence = optional, opts = []},
       #field{name = commit_position, fnum = 5, rnum = 6, type = uint64, occurrence = optional, opts = []},
       #field{name = metadata, fnum = 6, rnum = 7, type = {map, string, string}, occurrence = repeated, opts = []},
       #field{name = custom_metadata, fnum = 7, rnum = 8, type = bytes, occurrence = optional, opts = []},
       #field{name = data, fnum = 8, rnum = 9, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'}, [#field{name = subscription_id, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.ReadResp'},
      [#gpb_oneof{name = content, rnum = 2,
                  fields =
                      [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'}, occurrence = optional, opts = []},
                       #field{name = subscription_confirmation, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.Options'},
      [#gpb_oneof{name = stream_option, rnum = 2,
                  fields =
                      [#field{name = stream, fnum = 4, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'}, occurrence = optional, opts = []},
                       #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = stream_identifier, fnum = 1, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = [deprecated]},
       #field{name = group_name, fnum = 2, rnum = 4, type = string, occurrence = optional, opts = []},
       #field{name = settings, fnum = 3, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Settings'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = revision_option, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'},
      [#gpb_oneof{name = all_option, rnum = 2,
                  fields =
                      [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Position'}, occurrence = optional, opts = []},
                       #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = filter_option, rnum = 3,
                  fields =
                      [#field{name = filter, fnum = 4, rnum = 3, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'}, occurrence = optional, opts = []},
                       #field{name = no_filter, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'},
      [#field{name = regex, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = prefix, fnum = 2, rnum = 3, type = string, occurrence = repeated, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'},
      [#gpb_oneof{name = filter, rnum = 2,
                  fields =
                      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'}, occurrence = optional, opts = []},
                       #field{name = event_type, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = window, rnum = 3,
                  fields = [#field{name = max, fnum = 3, rnum = 3, type = uint32, occurrence = optional, opts = []}, #field{name = count, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
       #field{name = checkpointIntervalMultiplier, fnum = 5, rnum = 4, type = uint32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq.Settings'},
      [#field{name = resolve_links, fnum = 1, rnum = 2, type = bool, occurrence = optional, opts = []},
       #field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = [deprecated]},
       #field{name = extra_statistics, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
       #field{name = max_retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []},
       #field{name = min_checkpoint_count, fnum = 7, rnum = 6, type = int32, occurrence = optional, opts = []},
       #field{name = max_checkpoint_count, fnum = 8, rnum = 7, type = int32, occurrence = optional, opts = []},
       #field{name = max_subscriber_count, fnum = 9, rnum = 8, type = int32, occurrence = optional, opts = []},
       #field{name = live_buffer_size, fnum = 10, rnum = 9, type = int32, occurrence = optional, opts = []},
       #field{name = read_batch_size, fnum = 11, rnum = 10, type = int32, occurrence = optional, opts = []},
       #field{name = history_buffer_size, fnum = 12, rnum = 11, type = int32, occurrence = optional, opts = []},
       #field{name = named_consumer_strategy, fnum = 13, rnum = 12, type = {enum, 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'}, occurrence = optional, opts = []},
       #gpb_oneof{name = message_timeout, rnum = 13,
                  fields = [#field{name = message_timeout_ticks, fnum = 4, rnum = 13, type = int64, occurrence = optional, opts = []}, #field{name = message_timeout_ms, fnum = 14, rnum = 13, type = int32, occurrence = optional, opts = []}], opts = []},
       #gpb_oneof{name = checkpoint_after, rnum = 14,
                  fields = [#field{name = checkpoint_after_ticks, fnum = 6, rnum = 14, type = int64, occurrence = optional, opts = []}, #field{name = checkpoint_after_ms, fnum = 15, rnum = 14, type = int32, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.CreateResp'}, []},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq.Options'},
      [#gpb_oneof{name = stream_option, rnum = 2,
                  fields =
                      [#field{name = stream, fnum = 4, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'}, occurrence = optional, opts = []},
                       #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = stream_identifier, fnum = 1, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = [deprecated]},
       #field{name = group_name, fnum = 2, rnum = 4, type = string, occurrence = optional, opts = []},
       #field{name = settings, fnum = 3, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Settings'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'},
      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
       #gpb_oneof{name = revision_option, rnum = 3,
                  fields =
                      [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'},
      [#gpb_oneof{name = all_option, rnum = 2,
                  fields =
                      [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Position'}, occurrence = optional, opts = []},
                       #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                       #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq.Position'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq.Settings'},
      [#field{name = resolve_links, fnum = 1, rnum = 2, type = bool, occurrence = optional, opts = []},
       #field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = [deprecated]},
       #field{name = extra_statistics, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
       #field{name = max_retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []},
       #field{name = min_checkpoint_count, fnum = 7, rnum = 6, type = int32, occurrence = optional, opts = []},
       #field{name = max_checkpoint_count, fnum = 8, rnum = 7, type = int32, occurrence = optional, opts = []},
       #field{name = max_subscriber_count, fnum = 9, rnum = 8, type = int32, occurrence = optional, opts = []},
       #field{name = live_buffer_size, fnum = 10, rnum = 9, type = int32, occurrence = optional, opts = []},
       #field{name = read_batch_size, fnum = 11, rnum = 10, type = int32, occurrence = optional, opts = []},
       #field{name = history_buffer_size, fnum = 12, rnum = 11, type = int32, occurrence = optional, opts = []},
       #field{name = named_consumer_strategy, fnum = 13, rnum = 12, type = {enum, 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'}, occurrence = optional, opts = []},
       #gpb_oneof{name = message_timeout, rnum = 13,
                  fields = [#field{name = message_timeout_ticks, fnum = 4, rnum = 13, type = int64, occurrence = optional, opts = []}, #field{name = message_timeout_ms, fnum = 14, rnum = 13, type = int32, occurrence = optional, opts = []}], opts = []},
       #gpb_oneof{name = checkpoint_after, rnum = 14,
                  fields = [#field{name = checkpoint_after_ticks, fnum = 6, rnum = 14, type = int64, occurrence = optional, opts = []}, #field{name = checkpoint_after_ms, fnum = 15, rnum = 14, type = int32, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.UpdateResp'}, []},
     {{msg, 'event_store.client.persistent_subscriptions.DeleteReq.Options'},
      [#gpb_oneof{name = stream_option, rnum = 2,
                  fields =
                      [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
                       #field{name = all, fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #field{name = group_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.DeleteReq'}, [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.DeleteReq.Options'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.persistent_subscriptions.DeleteResp'}, []},
     {{msg, 'event_store.client.UUID.Structured'},
      [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.UUID'},
      [#gpb_oneof{name = value, rnum = 2,
                  fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}]},
     {{msg, 'event_store.client.Empty'}, []},
     {{msg, 'event_store.client.StreamIdentifier'}, [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.AllStreamPosition'},
      [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.WrongExpectedVersion'},
      [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                  fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []},
       #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                  fields =
                      [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                       #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                       #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                  opts = []}]},
     {{msg, 'event_store.client.AccessDenied'}, []},
     {{msg, 'event_store.client.StreamDeleted'}, [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.Timeout'}, []},
     {{msg, 'event_store.client.Unknown'}, []},
     {{msg, 'event_store.client.InvalidTransaction'}, []},
     {{msg, 'event_store.client.MaximumAppendSizeExceeded'}, [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}]},
     {{msg, 'event_store.client.BadRequest'}, [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}]},
     {{msg, 'google.protobuf.Empty'}, []}].


get_msg_names() ->
    ['event_store.client.persistent_subscriptions.ReadReq.Options',
     'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption',
     'event_store.client.persistent_subscriptions.ReadReq.Ack',
     'event_store.client.persistent_subscriptions.ReadReq.Nack',
     'event_store.client.persistent_subscriptions.ReadReq',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation',
     'event_store.client.persistent_subscriptions.ReadResp',
     'event_store.client.persistent_subscriptions.CreateReq.Options',
     'event_store.client.persistent_subscriptions.CreateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions',
     'event_store.client.persistent_subscriptions.CreateReq.Position',
     'event_store.client.persistent_subscriptions.CreateReq.Settings',
     'event_store.client.persistent_subscriptions.CreateReq',
     'event_store.client.persistent_subscriptions.CreateResp',
     'event_store.client.persistent_subscriptions.UpdateReq.Options',
     'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.UpdateReq.AllOptions',
     'event_store.client.persistent_subscriptions.UpdateReq.Position',
     'event_store.client.persistent_subscriptions.UpdateReq.Settings',
     'event_store.client.persistent_subscriptions.UpdateReq',
     'event_store.client.persistent_subscriptions.UpdateResp',
     'event_store.client.persistent_subscriptions.DeleteReq.Options',
     'event_store.client.persistent_subscriptions.DeleteReq',
     'event_store.client.persistent_subscriptions.DeleteResp',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.protobuf.Empty'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['event_store.client.persistent_subscriptions.ReadReq.Options',
     'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption',
     'event_store.client.persistent_subscriptions.ReadReq.Ack',
     'event_store.client.persistent_subscriptions.ReadReq.Nack',
     'event_store.client.persistent_subscriptions.ReadReq',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation',
     'event_store.client.persistent_subscriptions.ReadResp',
     'event_store.client.persistent_subscriptions.CreateReq.Options',
     'event_store.client.persistent_subscriptions.CreateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions',
     'event_store.client.persistent_subscriptions.CreateReq.Position',
     'event_store.client.persistent_subscriptions.CreateReq.Settings',
     'event_store.client.persistent_subscriptions.CreateReq',
     'event_store.client.persistent_subscriptions.CreateResp',
     'event_store.client.persistent_subscriptions.UpdateReq.Options',
     'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.UpdateReq.AllOptions',
     'event_store.client.persistent_subscriptions.UpdateReq.Position',
     'event_store.client.persistent_subscriptions.UpdateReq.Settings',
     'event_store.client.persistent_subscriptions.UpdateReq',
     'event_store.client.persistent_subscriptions.UpdateResp',
     'event_store.client.persistent_subscriptions.DeleteReq.Options',
     'event_store.client.persistent_subscriptions.DeleteReq',
     'event_store.client.persistent_subscriptions.DeleteResp',
     'event_store.client.UUID.Structured',
     'event_store.client.UUID',
     'event_store.client.Empty',
     'event_store.client.StreamIdentifier',
     'event_store.client.AllStreamPosition',
     'event_store.client.WrongExpectedVersion',
     'event_store.client.AccessDenied',
     'event_store.client.StreamDeleted',
     'event_store.client.Timeout',
     'event_store.client.Unknown',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.BadRequest',
     'google.protobuf.Empty'].


get_enum_names() -> ['event_store.client.persistent_subscriptions.ReadReq.Nack.Action', 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy', 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
        Fs when is_list(Fs) -> Fs;
        error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
        Es when is_list(Es) -> Es;
        error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('event_store.client.persistent_subscriptions.ReadReq.Options') ->
    [#gpb_oneof{name = stream_option, rnum = 2,
                fields =
                    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
                     #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = group_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []},
     #field{name = buffer_size, fnum = 3, rnum = 4, type = int32, occurrence = optional, opts = []},
     #field{name = uuid_option, fnum = 4, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadReq.Ack') ->
    [#field{name = id, fnum = 1, rnum = 2, type = bytes, occurrence = optional, opts = []}, #field{name = ids, fnum = 2, rnum = 3, type = {msg, 'event_store.client.UUID'}, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadReq.Nack') ->
    [#field{name = id, fnum = 1, rnum = 2, type = bytes, occurrence = optional, opts = []},
     #field{name = ids, fnum = 2, rnum = 3, type = {msg, 'event_store.client.UUID'}, occurrence = repeated, opts = []},
     #field{name = action, fnum = 3, rnum = 4, type = {enum, 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action'}, occurrence = optional, opts = []},
     #field{name = reason, fnum = 4, rnum = 5, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadReq') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Options'}, occurrence = optional, opts = []},
                     #field{name = ack, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Ack'}, occurrence = optional, opts = []},
                     #field{name = nack, fnum = 3, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadReq.Nack'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadResp.ReadEvent') ->
    [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
     #field{name = link, fnum = 2, rnum = 3, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent'}, occurrence = optional, opts = []},
     #gpb_oneof{name = position, rnum = 4,
                fields = [#field{name = commit_position, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []}, #field{name = no_position, fnum = 4, rnum = 4, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
     #gpb_oneof{name = count, rnum = 5,
                fields = [#field{name = retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []}, #field{name = no_retry_count, fnum = 6, rnum = 5, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent') ->
    [#field{name = id, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID'}, occurrence = optional, opts = []},
     #field{name = stream_identifier, fnum = 2, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #field{name = stream_revision, fnum = 3, rnum = 4, type = uint64, occurrence = optional, opts = []},
     #field{name = prepare_position, fnum = 4, rnum = 5, type = uint64, occurrence = optional, opts = []},
     #field{name = commit_position, fnum = 5, rnum = 6, type = uint64, occurrence = optional, opts = []},
     #field{name = metadata, fnum = 6, rnum = 7, type = {map, string, string}, occurrence = repeated, opts = []},
     #field{name = custom_metadata, fnum = 7, rnum = 8, type = bytes, occurrence = optional, opts = []},
     #field{name = data, fnum = 8, rnum = 9, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation') -> [#field{name = subscription_id, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.ReadResp') ->
    [#gpb_oneof{name = content, rnum = 2,
                fields =
                    [#field{name = event, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent'}, occurrence = optional, opts = []},
                     #field{name = subscription_confirmation, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.Options') ->
    [#gpb_oneof{name = stream_option, rnum = 2,
                fields =
                    [#field{name = stream, fnum = 4, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions'}, occurrence = optional, opts = []},
                     #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = stream_identifier, fnum = 1, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = [deprecated]},
     #field{name = group_name, fnum = 2, rnum = 4, type = string, occurrence = optional, opts = []},
     #field{name = settings, fnum = 3, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Settings'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.StreamOptions') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = revision_option, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.AllOptions') ->
    [#gpb_oneof{name = all_option, rnum = 2,
                fields =
                    [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Position'}, occurrence = optional, opts = []},
                     #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = filter_option, rnum = 3,
                fields =
                    [#field{name = filter, fnum = 4, rnum = 3, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions'}, occurrence = optional, opts = []},
                     #field{name = no_filter, fnum = 5, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression') ->
    [#field{name = regex, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}, #field{name = prefix, fnum = 2, rnum = 3, type = string, occurrence = repeated, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions') ->
    [#gpb_oneof{name = filter, rnum = 2,
                fields =
                    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'}, occurrence = optional, opts = []},
                     #field{name = event_type, fnum = 2, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = window, rnum = 3,
                fields = [#field{name = max, fnum = 3, rnum = 3, type = uint32, occurrence = optional, opts = []}, #field{name = count, fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}], opts = []},
     #field{name = checkpointIntervalMultiplier, fnum = 5, rnum = 4, type = uint32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq.Settings') ->
    [#field{name = resolve_links, fnum = 1, rnum = 2, type = bool, occurrence = optional, opts = []},
     #field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = [deprecated]},
     #field{name = extra_statistics, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
     #field{name = max_retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []},
     #field{name = min_checkpoint_count, fnum = 7, rnum = 6, type = int32, occurrence = optional, opts = []},
     #field{name = max_checkpoint_count, fnum = 8, rnum = 7, type = int32, occurrence = optional, opts = []},
     #field{name = max_subscriber_count, fnum = 9, rnum = 8, type = int32, occurrence = optional, opts = []},
     #field{name = live_buffer_size, fnum = 10, rnum = 9, type = int32, occurrence = optional, opts = []},
     #field{name = read_batch_size, fnum = 11, rnum = 10, type = int32, occurrence = optional, opts = []},
     #field{name = history_buffer_size, fnum = 12, rnum = 11, type = int32, occurrence = optional, opts = []},
     #field{name = named_consumer_strategy, fnum = 13, rnum = 12, type = {enum, 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'}, occurrence = optional, opts = []},
     #gpb_oneof{name = message_timeout, rnum = 13,
                fields = [#field{name = message_timeout_ticks, fnum = 4, rnum = 13, type = int64, occurrence = optional, opts = []}, #field{name = message_timeout_ms, fnum = 14, rnum = 13, type = int32, occurrence = optional, opts = []}], opts = []},
     #gpb_oneof{name = checkpoint_after, rnum = 14,
                fields = [#field{name = checkpoint_after_ticks, fnum = 6, rnum = 14, type = int64, occurrence = optional, opts = []}, #field{name = checkpoint_after_ms, fnum = 15, rnum = 14, type = int32, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.CreateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.CreateResp') -> [];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq.Options') ->
    [#gpb_oneof{name = stream_option, rnum = 2,
                fields =
                    [#field{name = stream, fnum = 4, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions'}, occurrence = optional, opts = []},
                     #field{name = all, fnum = 5, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = stream_identifier, fnum = 1, rnum = 3, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = [deprecated]},
     #field{name = group_name, fnum = 2, rnum = 4, type = string, occurrence = optional, opts = []},
     #field{name = settings, fnum = 3, rnum = 5, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Settings'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq.StreamOptions') ->
    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
     #gpb_oneof{name = revision_option, rnum = 3,
                fields =
                    [#field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = start, fnum = 3, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 4, rnum = 3, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq.AllOptions') ->
    [#gpb_oneof{name = all_option, rnum = 2,
                fields =
                    [#field{name = position, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Position'}, occurrence = optional, opts = []},
                     #field{name = start, fnum = 2, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []},
                     #field{name = 'end', fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq.Position') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq.Settings') ->
    [#field{name = resolve_links, fnum = 1, rnum = 2, type = bool, occurrence = optional, opts = []},
     #field{name = revision, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = [deprecated]},
     #field{name = extra_statistics, fnum = 3, rnum = 4, type = bool, occurrence = optional, opts = []},
     #field{name = max_retry_count, fnum = 5, rnum = 5, type = int32, occurrence = optional, opts = []},
     #field{name = min_checkpoint_count, fnum = 7, rnum = 6, type = int32, occurrence = optional, opts = []},
     #field{name = max_checkpoint_count, fnum = 8, rnum = 7, type = int32, occurrence = optional, opts = []},
     #field{name = max_subscriber_count, fnum = 9, rnum = 8, type = int32, occurrence = optional, opts = []},
     #field{name = live_buffer_size, fnum = 10, rnum = 9, type = int32, occurrence = optional, opts = []},
     #field{name = read_batch_size, fnum = 11, rnum = 10, type = int32, occurrence = optional, opts = []},
     #field{name = history_buffer_size, fnum = 12, rnum = 11, type = int32, occurrence = optional, opts = []},
     #field{name = named_consumer_strategy, fnum = 13, rnum = 12, type = {enum, 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'}, occurrence = optional, opts = []},
     #gpb_oneof{name = message_timeout, rnum = 13,
                fields = [#field{name = message_timeout_ticks, fnum = 4, rnum = 13, type = int64, occurrence = optional, opts = []}, #field{name = message_timeout_ms, fnum = 14, rnum = 13, type = int32, occurrence = optional, opts = []}], opts = []},
     #gpb_oneof{name = checkpoint_after, rnum = 14,
                fields = [#field{name = checkpoint_after_ticks, fnum = 6, rnum = 14, type = int64, occurrence = optional, opts = []}, #field{name = checkpoint_after_ms, fnum = 15, rnum = 14, type = int32, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.UpdateReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.UpdateResp') -> [];
find_msg_def('event_store.client.persistent_subscriptions.DeleteReq.Options') ->
    [#gpb_oneof{name = stream_option, rnum = 2,
                fields =
                    [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []},
                     #field{name = all, fnum = 3, rnum = 2, type = {msg, 'event_store.client.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #field{name = group_name, fnum = 2, rnum = 3, type = string, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.DeleteReq') -> [#field{name = options, fnum = 1, rnum = 2, type = {msg, 'event_store.client.persistent_subscriptions.DeleteReq.Options'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.persistent_subscriptions.DeleteResp') -> [];
find_msg_def('event_store.client.UUID.Structured') ->
    [#field{name = most_significant_bits, fnum = 1, rnum = 2, type = int64, occurrence = optional, opts = []}, #field{name = least_significant_bits, fnum = 2, rnum = 3, type = int64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.UUID') ->
    [#gpb_oneof{name = value, rnum = 2,
                fields = [#field{name = structured, fnum = 1, rnum = 2, type = {msg, 'event_store.client.UUID.Structured'}, occurrence = optional, opts = []}, #field{name = string, fnum = 2, rnum = 2, type = string, occurrence = optional, opts = []}], opts = []}];
find_msg_def('event_store.client.Empty') -> [];
find_msg_def('event_store.client.StreamIdentifier') -> [#field{name = stream_name, fnum = 3, rnum = 2, type = bytes, occurrence = optional, opts = []}];
find_msg_def('event_store.client.AllStreamPosition') ->
    [#field{name = commit_position, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = prepare_position, fnum = 2, rnum = 3, type = uint64, occurrence = optional, opts = []}];
find_msg_def('event_store.client.WrongExpectedVersion') ->
    [#gpb_oneof{name = current_stream_revision_option, rnum = 2,
                fields = [#field{name = current_stream_revision, fnum = 1, rnum = 2, type = uint64, occurrence = optional, opts = []}, #field{name = current_no_stream, fnum = 2, rnum = 2, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []},
     #gpb_oneof{name = expected_stream_position_option, rnum = 3,
                fields =
                    [#field{name = expected_stream_position, fnum = 3, rnum = 3, type = uint64, occurrence = optional, opts = []},
                     #field{name = expected_any, fnum = 4, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_stream_exists, fnum = 5, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []},
                     #field{name = expected_no_stream, fnum = 6, rnum = 3, type = {msg, 'google.protobuf.Empty'}, occurrence = optional, opts = []}],
                opts = []}];
find_msg_def('event_store.client.AccessDenied') -> [];
find_msg_def('event_store.client.StreamDeleted') -> [#field{name = stream_identifier, fnum = 1, rnum = 2, type = {msg, 'event_store.client.StreamIdentifier'}, occurrence = optional, opts = []}];
find_msg_def('event_store.client.Timeout') -> [];
find_msg_def('event_store.client.Unknown') -> [];
find_msg_def('event_store.client.InvalidTransaction') -> [];
find_msg_def('event_store.client.MaximumAppendSizeExceeded') -> [#field{name = maxAppendSize, fnum = 1, rnum = 2, type = uint32, occurrence = optional, opts = []}];
find_msg_def('event_store.client.BadRequest') -> [#field{name = message, fnum = 1, rnum = 2, type = string, occurrence = optional, opts = []}];
find_msg_def('google.protobuf.Empty') -> [];
find_msg_def(_) -> error.


find_enum_def('event_store.client.persistent_subscriptions.ReadReq.Nack.Action') -> [{'Unknown', 0}, {'Park', 1}, {'Retry', 2}, {'Skip', 3}, {'Stop', 4}];
find_enum_def('event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy') -> [{'DispatchToSingle', 0}, {'RoundRobin', 1}, {'Pinned', 2}];
find_enum_def('event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy') -> [{'DispatchToSingle', 0}, {'RoundRobin', 1}, {'Pinned', 2}];
find_enum_def(_) -> error.


enum_symbol_by_value('event_store.client.persistent_subscriptions.ReadReq.Nack.Action', Value) -> 'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(Value);
enum_symbol_by_value('event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy', Value) -> 'enum_symbol_by_value_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(Value);
enum_symbol_by_value('event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy', Value) -> 'enum_symbol_by_value_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(Value).


enum_value_by_symbol('event_store.client.persistent_subscriptions.ReadReq.Nack.Action', Sym) -> 'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(Sym);
enum_value_by_symbol('event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy', Sym) -> 'enum_value_by_symbol_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(Sym);
enum_value_by_symbol('event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy', Sym) -> 'enum_value_by_symbol_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(Sym).


'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(0) -> 'Unknown';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(1) -> 'Park';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(2) -> 'Retry';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(3) -> 'Skip';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'(4) -> 'Stop'.


'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Unknown') -> 0;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Park') -> 1;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Retry') -> 2;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Skip') -> 3;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.ReadReq.Nack.Action'('Stop') -> 4.

'enum_symbol_by_value_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(0) -> 'DispatchToSingle';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(1) -> 'RoundRobin';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'(2) -> 'Pinned'.


'enum_value_by_symbol_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('DispatchToSingle') -> 0;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('RoundRobin') -> 1;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy'('Pinned') -> 2.

'enum_symbol_by_value_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(0) -> 'DispatchToSingle';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(1) -> 'RoundRobin';
'enum_symbol_by_value_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'(2) -> 'Pinned'.


'enum_value_by_symbol_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('DispatchToSingle') -> 0;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('RoundRobin') -> 1;
'enum_value_by_symbol_event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'('Pinned') -> 2.


get_service_names() -> ['event_store.client.persistent_subscriptions.PersistentSubscriptions'].


get_service_def('event_store.client.persistent_subscriptions.PersistentSubscriptions') ->
    {{service, 'event_store.client.persistent_subscriptions.PersistentSubscriptions'},
     [#rpc{name = 'Create', input = 'event_store.client.persistent_subscriptions.CreateReq', output = 'event_store.client.persistent_subscriptions.CreateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Update', input = 'event_store.client.persistent_subscriptions.UpdateReq', output = 'event_store.client.persistent_subscriptions.UpdateResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Delete', input = 'event_store.client.persistent_subscriptions.DeleteReq', output = 'event_store.client.persistent_subscriptions.DeleteResp', input_stream = false, output_stream = false, opts = []},
      #rpc{name = 'Read', input = 'event_store.client.persistent_subscriptions.ReadReq', output = 'event_store.client.persistent_subscriptions.ReadResp', input_stream = true, output_stream = true, opts = []}]};
get_service_def(_) -> error.


get_rpc_names('event_store.client.persistent_subscriptions.PersistentSubscriptions') -> ['Create', 'Update', 'Delete', 'Read'];
get_rpc_names(_) -> error.


find_rpc_def('event_store.client.persistent_subscriptions.PersistentSubscriptions', RpcName) -> 'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'(RpcName);
find_rpc_def(_, _) -> error.


'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'('Create') ->
    #rpc{name = 'Create', input = 'event_store.client.persistent_subscriptions.CreateReq', output = 'event_store.client.persistent_subscriptions.CreateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'('Update') ->
    #rpc{name = 'Update', input = 'event_store.client.persistent_subscriptions.UpdateReq', output = 'event_store.client.persistent_subscriptions.UpdateResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'('Delete') ->
    #rpc{name = 'Delete', input = 'event_store.client.persistent_subscriptions.DeleteReq', output = 'event_store.client.persistent_subscriptions.DeleteResp', input_stream = false, output_stream = false, opts = []};
'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'('Read') ->
    #rpc{name = 'Read', input = 'event_store.client.persistent_subscriptions.ReadReq', output = 'event_store.client.persistent_subscriptions.ReadResp', input_stream = true, output_stream = true, opts = []};
'find_rpc_def_event_store.client.persistent_subscriptions.PersistentSubscriptions'(_) -> error.


fetch_rpc_def(ServiceName, RpcName) ->
    case find_rpc_def(ServiceName, RpcName) of
        Def when is_tuple(Def) -> Def;
        error -> erlang:error({no_such_rpc, ServiceName, RpcName})
    end.


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
fqbin_to_service_name(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>) -> 'event_store.client.persistent_subscriptions.PersistentSubscriptions';
fqbin_to_service_name(X) -> error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
service_name_to_fqbin('event_store.client.persistent_subscriptions.PersistentSubscriptions') -> <<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>;
service_name_to_fqbin(X) -> error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
fqbins_to_service_and_rpc_name(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Create">>) -> {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Create'};
fqbins_to_service_and_rpc_name(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Update">>) -> {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Update'};
fqbins_to_service_and_rpc_name(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Delete">>) -> {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Delete'};
fqbins_to_service_and_rpc_name(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Read">>) -> {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Read'};
fqbins_to_service_and_rpc_name(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
service_and_rpc_name_to_fqbins('event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Create') -> {<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Create">>};
service_and_rpc_name_to_fqbins('event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Update') -> {<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Update">>};
service_and_rpc_name_to_fqbins('event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Delete') -> {<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Delete">>};
service_and_rpc_name_to_fqbins('event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Read') -> {<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>, <<"Read">>};
service_and_rpc_name_to_fqbins(S, R) -> error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadReq.Options">>) -> 'event_store.client.persistent_subscriptions.ReadReq.Options';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption">>) -> 'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadReq.Ack">>) -> 'event_store.client.persistent_subscriptions.ReadReq.Ack';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadReq.Nack">>) -> 'event_store.client.persistent_subscriptions.ReadReq.Nack';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadReq">>) -> 'event_store.client.persistent_subscriptions.ReadReq';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent">>) -> 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent">>) -> 'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation">>) -> 'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.ReadResp">>) -> 'event_store.client.persistent_subscriptions.ReadResp';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.Options">>) -> 'event_store.client.persistent_subscriptions.CreateReq.Options';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.StreamOptions">>) -> 'event_store.client.persistent_subscriptions.CreateReq.StreamOptions';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions">>) -> 'event_store.client.persistent_subscriptions.CreateReq.AllOptions';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression">>) -> 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions">>) -> 'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.Position">>) -> 'event_store.client.persistent_subscriptions.CreateReq.Position';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq.Settings">>) -> 'event_store.client.persistent_subscriptions.CreateReq.Settings';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateReq">>) -> 'event_store.client.persistent_subscriptions.CreateReq';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.CreateResp">>) -> 'event_store.client.persistent_subscriptions.CreateResp';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq.Options">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.Options';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq.StreamOptions">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq.AllOptions">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.AllOptions';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq.Position">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.Position';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq.Settings">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.Settings';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateReq">>) -> 'event_store.client.persistent_subscriptions.UpdateReq';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.UpdateResp">>) -> 'event_store.client.persistent_subscriptions.UpdateResp';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.DeleteReq.Options">>) -> 'event_store.client.persistent_subscriptions.DeleteReq.Options';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.DeleteReq">>) -> 'event_store.client.persistent_subscriptions.DeleteReq';
fqbin_to_msg_name(<<"event_store.client.persistent_subscriptions.DeleteResp">>) -> 'event_store.client.persistent_subscriptions.DeleteResp';
fqbin_to_msg_name(<<"event_store.client.UUID.Structured">>) -> 'event_store.client.UUID.Structured';
fqbin_to_msg_name(<<"event_store.client.UUID">>) -> 'event_store.client.UUID';
fqbin_to_msg_name(<<"event_store.client.Empty">>) -> 'event_store.client.Empty';
fqbin_to_msg_name(<<"event_store.client.StreamIdentifier">>) -> 'event_store.client.StreamIdentifier';
fqbin_to_msg_name(<<"event_store.client.AllStreamPosition">>) -> 'event_store.client.AllStreamPosition';
fqbin_to_msg_name(<<"event_store.client.WrongExpectedVersion">>) -> 'event_store.client.WrongExpectedVersion';
fqbin_to_msg_name(<<"event_store.client.AccessDenied">>) -> 'event_store.client.AccessDenied';
fqbin_to_msg_name(<<"event_store.client.StreamDeleted">>) -> 'event_store.client.StreamDeleted';
fqbin_to_msg_name(<<"event_store.client.Timeout">>) -> 'event_store.client.Timeout';
fqbin_to_msg_name(<<"event_store.client.Unknown">>) -> 'event_store.client.Unknown';
fqbin_to_msg_name(<<"event_store.client.InvalidTransaction">>) -> 'event_store.client.InvalidTransaction';
fqbin_to_msg_name(<<"event_store.client.MaximumAppendSizeExceeded">>) -> 'event_store.client.MaximumAppendSizeExceeded';
fqbin_to_msg_name(<<"event_store.client.BadRequest">>) -> 'event_store.client.BadRequest';
fqbin_to_msg_name(<<"google.protobuf.Empty">>) -> 'google.protobuf.Empty';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq.Options') -> <<"event_store.client.persistent_subscriptions.ReadReq.Options">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption') -> <<"event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq.Ack') -> <<"event_store.client.persistent_subscriptions.ReadReq.Ack">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq.Nack') -> <<"event_store.client.persistent_subscriptions.ReadReq.Nack">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq') -> <<"event_store.client.persistent_subscriptions.ReadReq">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadResp.ReadEvent') -> <<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent') -> <<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation') -> <<"event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.ReadResp') -> <<"event_store.client.persistent_subscriptions.ReadResp">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.Options') -> <<"event_store.client.persistent_subscriptions.CreateReq.Options">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.StreamOptions') -> <<"event_store.client.persistent_subscriptions.CreateReq.StreamOptions">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.AllOptions') -> <<"event_store.client.persistent_subscriptions.CreateReq.AllOptions">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression') -> <<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions') -> <<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.Position') -> <<"event_store.client.persistent_subscriptions.CreateReq.Position">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.Settings') -> <<"event_store.client.persistent_subscriptions.CreateReq.Settings">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq') -> <<"event_store.client.persistent_subscriptions.CreateReq">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.CreateResp') -> <<"event_store.client.persistent_subscriptions.CreateResp">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.Options') -> <<"event_store.client.persistent_subscriptions.UpdateReq.Options">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.StreamOptions') -> <<"event_store.client.persistent_subscriptions.UpdateReq.StreamOptions">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.AllOptions') -> <<"event_store.client.persistent_subscriptions.UpdateReq.AllOptions">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.Position') -> <<"event_store.client.persistent_subscriptions.UpdateReq.Position">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.Settings') -> <<"event_store.client.persistent_subscriptions.UpdateReq.Settings">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq') -> <<"event_store.client.persistent_subscriptions.UpdateReq">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateResp') -> <<"event_store.client.persistent_subscriptions.UpdateResp">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.DeleteReq.Options') -> <<"event_store.client.persistent_subscriptions.DeleteReq.Options">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.DeleteReq') -> <<"event_store.client.persistent_subscriptions.DeleteReq">>;
msg_name_to_fqbin('event_store.client.persistent_subscriptions.DeleteResp') -> <<"event_store.client.persistent_subscriptions.DeleteResp">>;
msg_name_to_fqbin('event_store.client.UUID.Structured') -> <<"event_store.client.UUID.Structured">>;
msg_name_to_fqbin('event_store.client.UUID') -> <<"event_store.client.UUID">>;
msg_name_to_fqbin('event_store.client.Empty') -> <<"event_store.client.Empty">>;
msg_name_to_fqbin('event_store.client.StreamIdentifier') -> <<"event_store.client.StreamIdentifier">>;
msg_name_to_fqbin('event_store.client.AllStreamPosition') -> <<"event_store.client.AllStreamPosition">>;
msg_name_to_fqbin('event_store.client.WrongExpectedVersion') -> <<"event_store.client.WrongExpectedVersion">>;
msg_name_to_fqbin('event_store.client.AccessDenied') -> <<"event_store.client.AccessDenied">>;
msg_name_to_fqbin('event_store.client.StreamDeleted') -> <<"event_store.client.StreamDeleted">>;
msg_name_to_fqbin('event_store.client.Timeout') -> <<"event_store.client.Timeout">>;
msg_name_to_fqbin('event_store.client.Unknown') -> <<"event_store.client.Unknown">>;
msg_name_to_fqbin('event_store.client.InvalidTransaction') -> <<"event_store.client.InvalidTransaction">>;
msg_name_to_fqbin('event_store.client.MaximumAppendSizeExceeded') -> <<"event_store.client.MaximumAppendSizeExceeded">>;
msg_name_to_fqbin('event_store.client.BadRequest') -> <<"event_store.client.BadRequest">>;
msg_name_to_fqbin('google.protobuf.Empty') -> <<"google.protobuf.Empty">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


fqbin_to_enum_name(<<"event_store.client.persistent_subscriptions.ReadReq.Nack.Action">>) -> 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action';
fqbin_to_enum_name(<<"event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy">>) -> 'event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy';
fqbin_to_enum_name(<<"event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy">>) -> 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy';
fqbin_to_enum_name(E) -> error({gpb_error, {badenum, E}}).


enum_name_to_fqbin('event_store.client.persistent_subscriptions.ReadReq.Nack.Action') -> <<"event_store.client.persistent_subscriptions.ReadReq.Nack.Action">>;
enum_name_to_fqbin('event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy') -> <<"event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy">>;
enum_name_to_fqbin('event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy') -> <<"event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy">>;
enum_name_to_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_package_name() -> 'event_store.client.persistent_subscriptions'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> true.


source_basename() -> "persistent.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["persistent.proto", "shared.proto", "empty.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["persistent", "shared", "empty"].


get_msg_containment("persistent") ->
    ['event_store.client.persistent_subscriptions.CreateReq',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions',
     'event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression',
     'event_store.client.persistent_subscriptions.CreateReq.Options',
     'event_store.client.persistent_subscriptions.CreateReq.Position',
     'event_store.client.persistent_subscriptions.CreateReq.Settings',
     'event_store.client.persistent_subscriptions.CreateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.CreateResp',
     'event_store.client.persistent_subscriptions.DeleteReq',
     'event_store.client.persistent_subscriptions.DeleteReq.Options',
     'event_store.client.persistent_subscriptions.DeleteResp',
     'event_store.client.persistent_subscriptions.ReadReq',
     'event_store.client.persistent_subscriptions.ReadReq.Ack',
     'event_store.client.persistent_subscriptions.ReadReq.Nack',
     'event_store.client.persistent_subscriptions.ReadReq.Options',
     'event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption',
     'event_store.client.persistent_subscriptions.ReadResp',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent',
     'event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent',
     'event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation',
     'event_store.client.persistent_subscriptions.UpdateReq',
     'event_store.client.persistent_subscriptions.UpdateReq.AllOptions',
     'event_store.client.persistent_subscriptions.UpdateReq.Options',
     'event_store.client.persistent_subscriptions.UpdateReq.Position',
     'event_store.client.persistent_subscriptions.UpdateReq.Settings',
     'event_store.client.persistent_subscriptions.UpdateReq.StreamOptions',
     'event_store.client.persistent_subscriptions.UpdateResp'];
get_msg_containment("shared") ->
    ['event_store.client.AccessDenied',
     'event_store.client.AllStreamPosition',
     'event_store.client.BadRequest',
     'event_store.client.Empty',
     'event_store.client.InvalidTransaction',
     'event_store.client.MaximumAppendSizeExceeded',
     'event_store.client.StreamDeleted',
     'event_store.client.StreamIdentifier',
     'event_store.client.Timeout',
     'event_store.client.UUID',
     'event_store.client.UUID.Structured',
     'event_store.client.Unknown',
     'event_store.client.WrongExpectedVersion'];
get_msg_containment("empty") -> ['google.protobuf.Empty'];
get_msg_containment(P) -> error({gpb_error, {badproto, P}}).


get_pkg_containment("persistent") -> 'event_store.client.persistent_subscriptions';
get_pkg_containment("shared") -> 'event_store.client';
get_pkg_containment("empty") -> 'google.protobuf';
get_pkg_containment(P) -> error({gpb_error, {badproto, P}}).


get_service_containment("persistent") -> ['event_store.client.persistent_subscriptions.PersistentSubscriptions'];
get_service_containment("shared") -> [];
get_service_containment("empty") -> [];
get_service_containment(P) -> error({gpb_error, {badproto, P}}).


get_rpc_containment("persistent") ->
    [{'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Create'},
     {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Update'},
     {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Delete'},
     {'event_store.client.persistent_subscriptions.PersistentSubscriptions', 'Read'}];
get_rpc_containment("shared") -> [];
get_rpc_containment("empty") -> [];
get_rpc_containment(P) -> error({gpb_error, {badproto, P}}).


get_enum_containment("persistent") ->
    ['event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy', 'event_store.client.persistent_subscriptions.ReadReq.Nack.Action', 'event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy'];
get_enum_containment("shared") -> [];
get_enum_containment("empty") -> [];
get_enum_containment(P) -> error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateResp">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadResp">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.DeleteResp">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateResp">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.DeleteReq">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamIdentifier">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.StreamOptions">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.Settings">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.Options">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.AllOptions">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq.Options">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.DeleteReq.Options">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.StreamOptions">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.Settings">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.Options">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID.Structured">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.UUID">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Timeout">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.StreamDeleted">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.MaximumAppendSizeExceeded">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.BadRequest">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AccessDenied">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent.RecordedEvent">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadResp.ReadEvent">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"google.protobuf.Empty">>) -> "empty";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Empty">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq.Nack">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq.Ack">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.WrongExpectedVersion">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.Unknown">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.InvalidTransaction">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.AllStreamPosition">>) -> "shared";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.Position">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadResp.SubscriptionConfirmation">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq.Options.UUIDOption">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.Position">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.AllOptions.FilterOptions.Expression">>) -> "persistent";
get_proto_by_msg_name_as_fqbin(E) -> error({gpb_error, {badmsg, E}}).


get_proto_by_service_name_as_fqbin(<<"event_store.client.persistent_subscriptions.PersistentSubscriptions">>) -> "persistent";
get_proto_by_service_name_as_fqbin(E) -> error({gpb_error, {badservice, E}}).


get_proto_by_enum_name_as_fqbin(<<"event_store.client.persistent_subscriptions.UpdateReq.ConsumerStrategy">>) -> "persistent";
get_proto_by_enum_name_as_fqbin(<<"event_store.client.persistent_subscriptions.CreateReq.ConsumerStrategy">>) -> "persistent";
get_proto_by_enum_name_as_fqbin(<<"event_store.client.persistent_subscriptions.ReadReq.Nack.Action">>) -> "persistent";
get_proto_by_enum_name_as_fqbin(E) -> error({gpb_error, {badenum, E}}).


get_protos_by_pkg_name_as_fqbin(<<"event_store.client.persistent_subscriptions">>) -> ["persistent"];
get_protos_by_pkg_name_as_fqbin(<<"event_store.client">>) -> ["shared"];
get_protos_by_pkg_name_as_fqbin(<<"google.protobuf">>) -> ["empty"];
get_protos_by_pkg_name_as_fqbin(E) -> error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.18.0".

gpb_version_as_list() ->
    [4,18,0].

gpb_version_source() ->
    "file".
