%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.17.0

-ifndef(operations).
-define(operations, true).

-define(operations_gpb_version, "4.17.0").

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.STARTSCAVENGEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.STARTSCAVENGEREQ.OPTIONS_PB_H', true).
-record('event_store.client.operations.StartScavengeReq.Options',
        {thread_count = 0       :: integer() | undefined, % = 1, optional, 32 bits
         start_from_chunk = 0   :: integer() | undefined % = 2, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.STARTSCAVENGEREQ_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.STARTSCAVENGEREQ_PB_H', true).
-record('event_store.client.operations.StartScavengeReq',
        {options = undefined    :: operations:'event_store.client.operations.StartScavengeReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.STOPSCAVENGEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.STOPSCAVENGEREQ.OPTIONS_PB_H', true).
-record('event_store.client.operations.StopScavengeReq.Options',
        {scavenge_id = []       :: unicode:chardata() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.STOPSCAVENGEREQ_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.STOPSCAVENGEREQ_PB_H', true).
-record('event_store.client.operations.StopScavengeReq',
        {options = undefined    :: operations:'event_store.client.operations.StopScavengeReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.SCAVENGERESP_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.SCAVENGERESP_PB_H', true).
-record('event_store.client.operations.ScavengeResp',
        {scavenge_id = []       :: unicode:chardata() | undefined, % = 1, optional
         scavenge_result = 'Started' :: 'Started' | 'InProgress' | 'Stopped' | integer() | undefined % = 2, optional, enum event_store.client.operations.ScavengeResp.ScavengeResult
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.OPERATIONS.SETNODEPRIORITYREQ_PB_H').
-define('EVENT_STORE.CLIENT.OPERATIONS.SETNODEPRIORITYREQ_PB_H', true).
-record('event_store.client.operations.SetNodePriorityReq',
        {priority = 0           :: integer() | undefined % = 1, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID.STRUCTURED_PB_H', true).
-record('event_store.client.shared.UUID.Structured',
        {most_significant_bits = 0 :: integer() | undefined, % = 1, optional, 64 bits
         least_significant_bits = 0 :: integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.UUID_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.UUID_PB_H', true).
-record('event_store.client.shared.UUID',
        {value                  :: {structured, operations:'event_store.client.shared.UUID.Structured'()} | {string, unicode:chardata()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.EMPTY_PB_H', true).
-record('event_store.client.shared.Empty',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H').
-define('EVENT_STORE.CLIENT.SHARED.STREAMIDENTIFIER_PB_H', true).
-record('event_store.client.shared.StreamIdentifier',
        {streamName = <<>>      :: iodata() | undefined % = 3, optional
        }).
-endif.

-endif.
