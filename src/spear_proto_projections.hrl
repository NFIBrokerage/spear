%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.18.0

-ifndef(spear_proto_projections).
-define(spear_proto_projections, true).

-define(spear_proto_projections_gpb_version, "4.18.0").

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.CreateReq.Options',
        {mode                   :: {one_time, spear_proto_projections:'event_store.client.Empty'()} | {transient, spear_proto_projections:'event_store.client.projections.CreateReq.Options.Transient'()} | {continuous, spear_proto_projections:'event_store.client.projections.CreateReq.Options.Continuous'()} | undefined, % oneof
         query = <<>>           :: unicode:chardata() | undefined % = 4, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS.CONTINUOUS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS.CONTINUOUS_PB_H', true).
-record('event_store.client.projections.CreateReq.Options.Continuous',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         track_emitted_streams = false :: boolean() | 0 | 1 | undefined % = 2, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS.TRANSIENT_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ.OPTIONS.TRANSIENT_PB_H', true).
-record('event_store.client.projections.CreateReq.Options.Transient',
        {name = <<>>            :: unicode:chardata() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.CREATEREQ_PB_H', true).
-record('event_store.client.projections.CreateReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.CreateReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.CREATERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.CREATERESP_PB_H', true).
-record('event_store.client.projections.CreateResp',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.UPDATEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.UPDATEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.UpdateReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         query = <<>>           :: unicode:chardata() | undefined, % = 2, optional
         emit_option            :: {emit_enabled, boolean() | 0 | 1} | {no_emit_options, spear_proto_projections:'event_store.client.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.UPDATEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.UPDATEREQ_PB_H', true).
-record('event_store.client.projections.UpdateReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.UpdateReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.UPDATERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.UPDATERESP_PB_H', true).
-record('event_store.client.projections.UpdateResp',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DELETEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DELETEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.DeleteReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         delete_emitted_streams = false :: boolean() | 0 | 1 | undefined, % = 2, optional
         delete_state_stream = false :: boolean() | 0 | 1 | undefined, % = 3, optional
         delete_checkpoint_stream = false :: boolean() | 0 | 1 | undefined % = 4, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DELETEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DELETEREQ_PB_H', true).
-record('event_store.client.projections.DeleteReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.DeleteReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DELETERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DELETERESP_PB_H', true).
-record('event_store.client.projections.DeleteResp',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.StatisticsReq.Options',
        {mode                   :: {name, unicode:chardata()} | {all, spear_proto_projections:'event_store.client.Empty'()} | {transient, spear_proto_projections:'event_store.client.Empty'()} | {continuous, spear_proto_projections:'event_store.client.Empty'()} | {one_time, spear_proto_projections:'event_store.client.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSREQ_PB_H', true).
-record('event_store.client.projections.StatisticsReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.StatisticsReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSRESP.DETAILS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSRESP.DETAILS_PB_H', true).
-record('event_store.client.projections.StatisticsResp.Details',
        {coreProcessingTime = 0 :: integer() | undefined, % = 1, optional, 64 bits
         version = 0            :: integer() | undefined, % = 2, optional, 64 bits
         epoch = 0              :: integer() | undefined, % = 3, optional, 64 bits
         effectiveName = <<>>   :: unicode:chardata() | undefined, % = 4, optional
         writesInProgress = 0   :: integer() | undefined, % = 5, optional, 32 bits
         readsInProgress = 0    :: integer() | undefined, % = 6, optional, 32 bits
         partitionsCached = 0   :: integer() | undefined, % = 7, optional, 32 bits
         status = <<>>          :: unicode:chardata() | undefined, % = 8, optional
         stateReason = <<>>     :: unicode:chardata() | undefined, % = 9, optional
         name = <<>>            :: unicode:chardata() | undefined, % = 10, optional
         mode = <<>>            :: unicode:chardata() | undefined, % = 11, optional
         position = <<>>        :: unicode:chardata() | undefined, % = 12, optional
         progress = 0.0         :: float() | integer() | infinity | '-infinity' | nan | undefined, % = 13, optional
         lastCheckpoint = <<>>  :: unicode:chardata() | undefined, % = 14, optional
         eventsProcessedAfterRestart = 0 :: integer() | undefined, % = 15, optional, 64 bits
         checkpointStatus = <<>> :: unicode:chardata() | undefined, % = 16, optional
         bufferedEvents = 0     :: integer() | undefined, % = 17, optional, 64 bits
         writePendingEventsBeforeCheckpoint = 0 :: integer() | undefined, % = 18, optional, 32 bits
         writePendingEventsAfterCheckpoint = 0 :: integer() | undefined % = 19, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSRESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATISTICSRESP_PB_H', true).
-record('event_store.client.projections.StatisticsResp',
        {details = undefined    :: spear_proto_projections:'event_store.client.projections.StatisticsResp.Details'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.StateReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         partition = <<>>       :: unicode:chardata() | undefined % = 2, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATEREQ_PB_H', true).
-record('event_store.client.projections.StateReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.StateReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.STATERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.STATERESP_PB_H', true).
-record('event_store.client.projections.StateResp',
        {state = undefined      :: spear_proto_projections:'google.protobuf.Value'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESULTREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESULTREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.ResultReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         partition = <<>>       :: unicode:chardata() | undefined % = 2, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESULTREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESULTREQ_PB_H', true).
-record('event_store.client.projections.ResultReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.ResultReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESULTRESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESULTRESP_PB_H', true).
-record('event_store.client.projections.ResultResp',
        {result = undefined     :: spear_proto_projections:'google.protobuf.Value'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESETREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESETREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.ResetReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         write_checkpoint = false :: boolean() | 0 | 1 | undefined % = 2, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESETREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESETREQ_PB_H', true).
-record('event_store.client.projections.ResetReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.ResetReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.RESETRESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.RESETRESP_PB_H', true).
-record('event_store.client.projections.ResetResp',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.ENABLEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.ENABLEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.EnableReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.ENABLEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.ENABLEREQ_PB_H', true).
-record('event_store.client.projections.EnableReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.EnableReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.ENABLERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.ENABLERESP_PB_H', true).
-record('event_store.client.projections.EnableResp',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DISABLEREQ.OPTIONS_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DISABLEREQ.OPTIONS_PB_H', true).
-record('event_store.client.projections.DisableReq.Options',
        {name = <<>>            :: unicode:chardata() | undefined, % = 1, optional
         write_checkpoint = false :: boolean() | 0 | 1 | undefined % = 2, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DISABLEREQ_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DISABLEREQ_PB_H', true).
-record('event_store.client.projections.DisableReq',
        {options = undefined    :: spear_proto_projections:'event_store.client.projections.DisableReq.Options'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.PROJECTIONS.DISABLERESP_PB_H').
-define('EVENT_STORE.CLIENT.PROJECTIONS.DISABLERESP_PB_H', true).
-record('event_store.client.projections.DisableResp',
        {
        }).
-endif.

-ifndef('GOOGLE.PROTOBUF.STRUCT_PB_H').
-define('GOOGLE.PROTOBUF.STRUCT_PB_H', true).
-record('google.protobuf.Struct',
        {fields = []            :: [{unicode:chardata(), spear_proto_projections:'google.protobuf.Value'()}] | undefined % = 1
        }).
-endif.

-ifndef('GOOGLE.PROTOBUF.VALUE_PB_H').
-define('GOOGLE.PROTOBUF.VALUE_PB_H', true).
-record('google.protobuf.Value',
        {kind                   :: {null_value, 'NULL_VALUE' | integer()} | {number_value, float() | integer() | infinity | '-infinity' | nan} | {string_value, unicode:chardata()} | {bool_value, boolean() | 0 | 1} | {struct_value, spear_proto_projections:'google.protobuf.Struct'()} | {list_value, spear_proto_projections:'google.protobuf.ListValue'()} | undefined % oneof
        }).
-endif.

-ifndef('GOOGLE.PROTOBUF.LISTVALUE_PB_H').
-define('GOOGLE.PROTOBUF.LISTVALUE_PB_H', true).
-record('google.protobuf.ListValue',
        {values = []            :: [spear_proto_projections:'google.protobuf.Value'()] | undefined % = 1, repeated
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.UUID.STRUCTURED_PB_H').
-define('EVENT_STORE.CLIENT.UUID.STRUCTURED_PB_H', true).
-record('event_store.client.UUID.Structured',
        {most_significant_bits = 0 :: integer() | undefined, % = 1, optional, 64 bits
         least_significant_bits = 0 :: integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.UUID_PB_H').
-define('EVENT_STORE.CLIENT.UUID_PB_H', true).
-record('event_store.client.UUID',
        {value                  :: {structured, spear_proto_projections:'event_store.client.UUID.Structured'()} | {string, unicode:chardata()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.EMPTY_PB_H').
-define('EVENT_STORE.CLIENT.EMPTY_PB_H', true).
-record('event_store.client.Empty',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMIDENTIFIER_PB_H').
-define('EVENT_STORE.CLIENT.STREAMIDENTIFIER_PB_H', true).
-record('event_store.client.StreamIdentifier',
        {stream_name = <<>>     :: iodata() | undefined % = 3, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.ALLSTREAMPOSITION_PB_H').
-define('EVENT_STORE.CLIENT.ALLSTREAMPOSITION_PB_H', true).
-record('event_store.client.AllStreamPosition',
        {commit_position = 0    :: non_neg_integer() | undefined, % = 1, optional, 64 bits
         prepare_position = 0   :: non_neg_integer() | undefined % = 2, optional, 64 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.WRONGEXPECTEDVERSION_PB_H').
-define('EVENT_STORE.CLIENT.WRONGEXPECTEDVERSION_PB_H', true).
-record('event_store.client.WrongExpectedVersion',
        {current_stream_revision_option :: {current_stream_revision, non_neg_integer()} | {current_no_stream, spear_proto_projections:'google.protobuf.Empty'()} | undefined, % oneof
         expected_stream_position_option :: {expected_stream_position, non_neg_integer()} | {expected_any, spear_proto_projections:'google.protobuf.Empty'()} | {expected_stream_exists, spear_proto_projections:'google.protobuf.Empty'()} | {expected_no_stream, spear_proto_projections:'google.protobuf.Empty'()} | undefined % oneof
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.ACCESSDENIED_PB_H').
-define('EVENT_STORE.CLIENT.ACCESSDENIED_PB_H', true).
-record('event_store.client.AccessDenied',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.STREAMDELETED_PB_H').
-define('EVENT_STORE.CLIENT.STREAMDELETED_PB_H', true).
-record('event_store.client.StreamDeleted',
        {stream_identifier = undefined :: spear_proto_projections:'event_store.client.StreamIdentifier'() | undefined % = 1, optional
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.TIMEOUT_PB_H').
-define('EVENT_STORE.CLIENT.TIMEOUT_PB_H', true).
-record('event_store.client.Timeout',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.UNKNOWN_PB_H').
-define('EVENT_STORE.CLIENT.UNKNOWN_PB_H', true).
-record('event_store.client.Unknown',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.INVALIDTRANSACTION_PB_H').
-define('EVENT_STORE.CLIENT.INVALIDTRANSACTION_PB_H', true).
-record('event_store.client.InvalidTransaction',
        {
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.MAXIMUMAPPENDSIZEEXCEEDED_PB_H').
-define('EVENT_STORE.CLIENT.MAXIMUMAPPENDSIZEEXCEEDED_PB_H', true).
-record('event_store.client.MaximumAppendSizeExceeded',
        {maxAppendSize = 0      :: non_neg_integer() | undefined % = 1, optional, 32 bits
        }).
-endif.

-ifndef('EVENT_STORE.CLIENT.BADREQUEST_PB_H').
-define('EVENT_STORE.CLIENT.BADREQUEST_PB_H', true).
-record('event_store.client.BadRequest',
        {message = <<>>         :: unicode:chardata() | undefined % = 1, optional
        }).
-endif.

-ifndef('GOOGLE.PROTOBUF.EMPTY_PB_H').
-define('GOOGLE.PROTOBUF.EMPTY_PB_H', true).
-record('google.protobuf.Empty',
        {
        }).
-endif.

-endif.
